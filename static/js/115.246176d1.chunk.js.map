{"version":3,"file":"static/js/115.246176d1.chunk.js","mappings":"0RAgBQA,EAASC,OAATD,KASO,SAASE,IACtB,OAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eAEMC,EAAMC,EAAAA,WAA2BC,EAAAA,IACvC,EAA4EF,EAApEG,SAAAA,OAAR,MAAmB,GAAnB,IAA4EH,EAArDI,WAAAA,OAAvB,MAAoC,CAAC,EAArC,IAA4EJ,EAApCK,OAAAA,OAAxC,MAAiD,GAAjD,EAAqDC,EAAuBN,EAAvBM,WAAYC,EAAWP,EAAXO,OAMjE,OAJAN,EAAAA,WAAgB,WACdM,EAAO,CAAER,OAAAA,GACV,GAAE,CAACA,KAGF,UAAC,UAAD,CACES,MAAOb,EAAKc,EAAAA,EAAM,kBAClBC,KAAK,gBACLC,SACE,SAAC,UAAD,CAAYC,GAAG,OAAOC,cAAe,CAAC,qBAAsBC,UAAU,oBAAtE,SACGnB,EAAKc,EAAAA,EAAM,8BAGhBI,cAAe,CAAC,sBARlB,UAUGb,EAAIe,WAAa,GAAD,OAAIhB,KAAaI,IAChC,iBAAKW,UAAU,2CAAf,WACE,cAAGA,UAAU,mBAAb,SAAiCnB,EAAKc,EAAAA,EAAM,0BAC5C,gBAAKK,UAAU,OAAf,UACE,SAAC,UAAD,CAAYF,GAAG,OAAOC,cAAe,CAAC,qBAAsBC,UAAU,yBAAtE,SACGnB,EAAKc,EAAAA,EAAM,uCAMnBT,EAAIe,UAAJ,UAAmBhB,KAAaI,IAAY,4CAE5CA,IACC,iCACE,SAAC,IAAD,CACEG,WAAYA,EACZU,OAAQ,CAAC,WAAY,YAAa,OAAQ,UAAW,SAAU,SAAU,SAH7E,OAMGb,QANH,IAMGA,OANH,EAMGA,EAAUc,KAAI,SAACC,GAAD,OACb,mBAAC,KAAD,CAAuBA,KAAAA,EAAMnB,OAAAA,EAAQM,OAAAA,EAAUc,SAAU,kBAAMZ,EAAO,CAAER,OAAAA,GAAf,EAA0BqB,IAAKF,EAAKG,MADhF,IAIdjB,IACC,0BACE,SAAC,MAAD,kBAAgBA,GAAhB,IAA4BkB,UAAWC,EAAAA,GAAAA,KAAYX,IAAE,YAOlE,C,qBC7ED,KAEE,gBAAiB,CAAEY,GAAI,aAAWC,GAAI,WACtC,eAAgB,CAAED,GAAI,0CAA2CC,GAAI,yBAGrE,eAAgB,CAAED,GAAI,MAAOC,GAAI,OAGjC,qBAAsB,CAAED,GAAI,aAAcC,GAAI,aAG9C,iBAAkB,CAAED,GAAI,WAASC,GAAI,SAGrC,oBAAqB,CAAED,GAAI,gBAAcC,GAAI,YAC7C,iCAAkC,CAAED,GAAI,uBAAwBC,GAAI,kBAGpE,mBAAoB,CAAED,GAAI,qBAAsBC,GAAI,eAGpD,iBAAkB,CAAED,GAAI,WAAYC,GAAI,YACxC,2BAA4B,CAAED,GAAI,UAAWC,GAAI,eACjD,sBAAuB,CAAED,GAAI,oCAAqCC,GAAI,4CACtE,+BAAgC,CAAED,GAAI,qBAAsBC,GAAI,qBAGhE,gBAAiB,CAAED,GAAI,cAAeC,GAAI,Q","sources":["../../../../shopy/shopy-storejs/src/product/views.List.tsx","../../../../shopy/shopy-storejs/src/product/views.lang.ts"],"sourcesContent":["import * as React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport lang from './views.lang';\n\nimport Staff from '@miq/staffjs';\n\nimport type { TSDState } from '@miq/contextjs';\nimport type { CategoryChoicesType, TProduct, TProductStageData } from '../types';\n\nimport { Pagination } from '@miq/componentjs';\nimport { SharedDataCtx } from '@miq/contextjs';\n\nimport { ProductListItem } from './components';\nimport { ProductListFilterForm } from './forms/form.PListFilter';\n\nconst { i18n } = window;\n\ntype TContext = TSDState<{\n  products: TProduct[];\n  stages: TProductStageData[];\n  categories: CategoryChoicesType;\n  pagination: any;\n}>;\n\nexport default function ProductListView() {\n  const [params] = useSearchParams();\n\n  const ctx = React.useContext<TContext>(SharedDataCtx);\n  const { products = [], pagination = {}, stages = [], categories, reload } = ctx;\n\n  React.useEffect(() => {\n    reload({ params });\n  }, [params]);\n\n  return (\n    <Staff.View\n      title={i18n(lang, 'ListView.title')}\n      back=\"/staff/store/\"\n      actions={\n        <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary-3\">\n          {i18n(lang, 'ListView.actionLinkLabel')}\n        </Staff.Link>\n      }\n      requiredPerms={['store.view_product']}\n    >\n      {ctx.isLoaded && !`${params}` && !products && (\n        <div className=\"text-center p-staff-list-empty py-3 my-3\">\n          <p className=\"fw-light text-md\">{i18n(lang, 'ListView.noItemText')}</p>\n          <div className=\"my-4\">\n            <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary btn-md\">\n              {i18n(lang, 'ListView.addProductLinkLabel')}\n            </Staff.Link>\n          </div>\n        </div>\n      )}\n\n      {ctx.isLoaded && `${params}` && !products && <>try again</>}\n\n      {products && (\n        <>\n          <ProductListFilterForm\n            categories={categories}\n            fields={['category', 'published', 'sale', 'presale', 'nodesc', 'nosize', 'oos']}\n          />\n\n          {products?.map((item) => (\n            <ProductListItem {...{ item, params, stages }} onUpdate={() => reload({ params })} key={item.slug} />\n          ))}\n\n          {pagination && (\n            <div>\n              <Pagination {...pagination} component={Staff.Link} to />\n            </div>\n          )}\n        </>\n      )}\n    </Staff.View>\n  );\n}\n","import type { TLang } from '@miq/utiljs';\n\nexport default {\n  //\n  'InfoTab.title': { fr: 'Détails', en: 'Details' },\n  'InfoTab.text': { fr: 'Modifier les informations de ce produit', en: \"Update product's info\" },\n\n  //\n  'SeoTab.title': { fr: 'Seo', en: 'Seo' },\n\n  //\n  'InventoryTab.title': { fr: 'Inventaire', en: 'Inventory' },\n\n  //\n  'MediaTab.title': { fr: 'Média', en: 'Media' },\n\n  //\n  'SettingsTab.title': { fr: 'Paramètres', en: 'Settings' },\n  'SettingsTab.deleteSectionTitle': { fr: 'Supprimer ce produit', en: 'Delete product' },\n\n  //\n  'CreateView.title': { fr: 'Ajouter un produit', en: 'Add product' },\n\n  //\n  'ListView.title': { fr: 'Produits', en: 'Products' },\n  'ListView.actionLinkLabel': { fr: 'Ajouter', en: 'Add product' },\n  'ListView.noItemText': { fr: 'Ajouter un produit pour commencer', en: 'Add products to your shop to get started' },\n  'ListView.addProductLinkLabel': { fr: 'Ajouter un produit', en: 'Add a new product' },\n  //\n\n  'Btn.saveLabel': { fr: 'Sauvegarder', en: 'Save' },\n\n  //\n} as TLang;\n"],"names":["i18n","window","ProductListView","useSearchParams","params","ctx","React","SharedDataCtx","products","pagination","stages","categories","reload","title","lang","back","actions","to","requiredPerms","className","isLoaded","fields","map","item","onUpdate","key","slug","component","Staff","fr","en"],"sourceRoot":""}