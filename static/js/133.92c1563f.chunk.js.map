{"version":3,"file":"static/js/133.92c1563f.chunk.js","mappings":"wMAIaA,EAAe,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAA0C,YACvE,IAAKA,IAASA,EAAKC,KAAM,OAAO,KAEhC,IAAQC,EAAwCF,EAAxCE,WAAYC,EAA4BH,EAA5BG,UAAWC,EAAiBJ,EAAjBI,MAAOC,EAAUL,EAAVK,MAEtC,OACE,iBAAKC,UAAU,gBAAf,WACE,gBAAKA,UAAU,UAAf,mBAA6BJ,EAA7B,YAA2CC,MAC3C,gBAAKG,UAAU,GAAf,SAAmBD,KACnB,gBAAKC,UAAU,qBAAf,SAAqCF,S,uLCG9BG,EAAe,SAAC,GAOF,IANzBC,EAMwB,EANxBA,SACAC,EAKwB,EALxBA,SAGAC,GAEwB,EAJxBC,UAIwB,EAHxBC,QAGwB,EAFxBF,kBACGG,GACqB,YAChBC,EAAWD,EAAXC,OACFC,GAAOC,EAAAA,EAAAA,IAAmBC,EAAa,OAACR,QAAD,IAACA,OAAD,EAACA,EAAUS,SAAUJ,IAE1DK,EAAWJ,EAAXI,OACFC,EAAc,CAAEd,UAAW,YAAae,QAAS,oBAEvD,OACE,UAAC,MAAD,kBAAUR,GAAV,IAAiBS,QAASP,EAAMT,UAAU,gBAA1C,WACE,iBAAKA,UAAU,cAAf,WACS,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAAQS,SAAS,gBAChB,SAAC,MAAD,gBACEC,kBAAgB,EAChBC,MAAON,EAAOhB,WACViB,GAHN,IAIEV,iBAAkBA,EAClBJ,UAAU,OAIP,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAAQS,SAAS,iBAAiB,SAAC,MAAD,QAAoBE,MAAON,EAAOjB,YAAgBkB,KAE9E,OAANN,QAAM,IAANA,OAAA,EAAAA,EAAQS,SAAS,YAAY,SAAC,MAAD,QAAoBE,MAAON,EAAOd,OAAWe,KACpE,OAANN,QAAM,IAANA,OAAA,EAAAA,EAAQS,SAAS,YAAY,SAAC,MAAD,QAAoBE,MAAON,EAAOf,OAAWgB,OAG5EZ,OAIDS,EAAgB,SAACjB,EAAkBc,GAClCd,IAAMA,EAAO,CAAEE,WAAY,GAAIC,UAAW,GAAIC,MAAO,GAAIC,MAAO,KACrE,IAAMqB,EAAgB,GAKtB,OAJM,OAANZ,QAAM,IAANA,GAAAA,EAAQa,SAAQ,SAACC,GACfF,EAAGE,GAAS5B,EAAM4B,MAGbF,I,gMCzDHG,EAAqBC,EAAAA,MAAW,kBAAM,iCACtCC,EAAqBD,EAAAA,MAAW,kBAAM,iCACtCE,EAAmBF,EAAAA,MAAW,kBAAM,iCAE3B,SAASG,IACtB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,aAAaC,SAAS,SAACJ,EAAD,OAClC,SAAC,KAAD,CAAOG,KAAK,OAAOC,SAAS,SAACN,EAAD,OAC5B,SAAC,KAAD,CAAOO,OAAK,EAACD,SAAS,SAACH,EAAD","sources":["../../../../shopy/shopy-salejs/src/customer/components.tsx","../../../../shopy/shopy-salejs/src/customer/forms/index.tsx","../../../../shopy/shopy-salejs/src/customer/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { TCustomer } from './types';\n\nexport const CustomerCard = ({ data, ...props }: { data: TCustomer }) => {\n  if (!data || !data.slug) return null;\n\n  const { first_name, last_name, email, phone } = data;\n\n  return (\n    <div className=\"customer-card\">\n      <div className=\"fw-bold\">{`${first_name} ${last_name}`}</div>\n      <div className=\"\">{phone}</div>\n      <div className=\"text-muted text-sm\">{email}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { IFormUpdateProps, useForm } from '@miq/formjs';\nimport { TCustomer } from '../types';\nimport { TCustomerInstance } from '../../cart/models';\nimport { CustomerEmailField, CustomerFNameField, CustomerLNameField, CustomerPhoneField } from './fields';\n\ntype TFormUpdateProps<T, I> = IFormUpdateProps<T> & {\n  fields: string[];\n  instance?: I;\n};\n\ntype TCustomerFormProps = Omit<TFormUpdateProps<TCustomer, TCustomerInstance>, 'context'> & {\n  onCustomerSelect?: (p: TCustomer) => void;\n};\n\nexport const CustomerForm = ({\n  children,\n  instance,\n  onSuccess,\n  onError,\n  onCustomerSelect,\n  ...props\n}: TCustomerFormProps) => {\n  const { fields } = props;\n  const form = useForm<TCustomer>(getCustomerFD(instance?.export(), fields));\n\n  const { errors } = form;\n  const sharedProps = { className: 'span-md-3', fieldCN: 'd-grid grid-md-5' };\n\n  return (\n    <Form {...props} context={form} className=\"customer-form\">\n      <div className=\"base-fields\">\n        {fields?.includes('last_name') && (\n          <CustomerLNameField\n            allowSuggestions\n            error={errors.last_name}\n            {...sharedProps}\n            onCustomerSelect={onCustomerSelect}\n            className=\"\"\n          />\n        )}\n\n        {fields?.includes('first_name') && <CustomerFNameField error={errors.first_name} {...sharedProps} />}\n\n        {fields?.includes('phone') && <CustomerPhoneField error={errors.phone} {...sharedProps} />}\n        {fields?.includes('email') && <CustomerEmailField error={errors.email} {...sharedProps} />}\n      </div>\n\n      {children}\n    </Form>\n  );\n};\nconst getCustomerFD = (data?: TCustomer, fields?: string[]) => {\n  if (!data) data = { first_name: '', last_name: '', email: '', phone: '' };\n  const fd: TCustomer = {};\n  fields?.forEach((field) => {\n    fd[field] = data![field];\n  });\n\n  return fd;\n};\n\nconst CustomerSearchInput = (props) => {\n  return <Form.Text {...props} />;\n};\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nconst CustomerCreateView = React.lazy(() => import('./views.Create'));\nconst CustomerUpdateView = React.lazy(() => import('./views.Update'));\nconst CustomerListView = React.lazy(() => import('./views.List'));\n\nexport default function CustomerRoutes() {\n  return (\n    <Routes>\n      <Route path=\":custSlug/\" element={<CustomerUpdateView />} />\n      <Route path=\"new/\" element={<CustomerCreateView />} />\n      <Route index element={<CustomerListView />} />\n    </Routes>\n  );\n}\n\nexport * from './types';\nexport * from './components';\nexport { CustomerForm } from './forms';\n"],"names":["CustomerCard","data","slug","first_name","last_name","email","phone","className","CustomerForm","children","instance","onCustomerSelect","onSuccess","onError","props","fields","form","useForm","getCustomerFD","export","errors","sharedProps","fieldCN","context","includes","allowSuggestions","error","fd","forEach","field","CustomerCreateView","React","CustomerUpdateView","CustomerListView","CustomerRoutes","path","element","index"],"sourceRoot":""}