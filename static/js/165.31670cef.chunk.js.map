{"version":3,"file":"static/js/165.31670cef.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-salejs/src/order/buttons.tsx","../../../../shopy/shopy-salejs/src/order/utils.ts","../../../../shopy/shopy-salejs/src/order/views.List.tsx"],"sourcesContent":["import * as React from 'react';\nimport { LinkProps } from 'react-router-dom';\n\nimport type { TOrder, TOrderInstance } from './utils';\n\nimport Staff from '@miq/staffjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\n\nexport const OrderMarkDelivredButton = ({\n  instance,\n  ...props\n}: {\n  instance: TOrderInstance;\n  icon?: boolean;\n  onSuccess: (res?: any) => void;\n  onFailure?: (res?: any) => void;\n}) => {\n  return (\n    <ConfirmButton\n      renderHeader={() => <div className=\"text-md p-1\">Le client a t'il re√ßu le produit?</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Pas encore</Button>\n\n          <Button\n            onClick={() =>\n              instance\n                .mark_delivered()\n                .then((r) => {\n                  props?.onSuccess?.(r);\n                  // setOpen(false);\n                })\n                .catch((err) => {\n                  props?.onFailure?.(err);\n                })\n            }\n            className=\"btn-primary fw-bold\"\n          >\n            Oui\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\"></div>}\n      className=\"btn-primary btn-md fw-bold w-50 d-flex align-items-center justify-content-center\"\n    >\n      {instance?.is_delivered ? <Icons.Truck /> : <Icons.TruckOff />}\n      {!props?.icon && <span className=\"ms-1\">Confirmer la livraison</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const OrderUpdateLink = (props: Omit<LinkProps, 'to'> & { instance: TOrder | TOrderInstance }) => (\n  <Staff.Link\n    title={`Modifier cette commande`}\n    {...props}\n    to={`/staff/sales/orders/${props.instance.slug}/`}\n    requiredPerms={['sales.change_order']}\n  >\n    {props.children}\n  </Staff.Link>\n);\n","import type { TOrderItem } from '../cart';\nimport type { TCustomer } from '../customer';\nimport type { TPriceData } from '@shopy/storejs';\nimport type { TDiscount } from '../discount/types';\n\nimport { getStaffModel, StaffService } from '@miq/staffjs';\n\nconst timeout = 5000;\n\nexport type TOrder = {\n  slug?: string;\n  transaction_id?: string;\n  customer?: string;\n  customer_name?: string;\n  customer_data?: TCustomer;\n  //   notes?: string;\n  is_delivered?: boolean;\n  dt_delivered?: string;\n\n  items?: TOrderItem[];\n  items_count?: number;\n  discounts?: TDiscount[];\n  //   products?: string[];\n\n  //   is_placed?: boolean;\n  subtotal?: TPriceData;\n  total?: TPriceData;\n\n  created?: string;\n  updated?: string;\n};\n\nclass OrderService extends StaffService<TOrder> {\n  mark_delivered() {\n    if (this.data?.is_delivered) return Promise.resolve({ data: this.data });\n    return this.post(`${this._path}deliver/`, {}, { timeout });\n  }\n\n  postDiscount(values: Exclude<TDiscount, 'slug' | 'amt_data'>) {\n    return this.post(`${this._path}discount/`, values);\n  }\n\n  get deliveredDt() {\n    return this.formatDt(this.data?.dt_delivered);\n  }\n  get updatedDt() {\n    return this.formatDt(this.data?.updated);\n  }\n  get createdDt() {\n    return this.formatDt(this.data?.created);\n  }\n\n  formatDt(dt?: string) {\n    if (!dt) return null;\n    return new Date(dt).toLocaleDateString(undefined, {\n      day: '2-digit',\n      weekday: 'short',\n      month: 'short',\n      year: '2-digit',\n    });\n  }\n}\n\nexport const Order = getStaffModel<TOrder, OrderService>('orders', OrderService);\n\nexport type TOrderInstance = ReturnType<typeof Order>;\n","import * as React from 'react';\n\nimport type { TOrder } from './utils';\nimport type { TSDState } from '@miq/contextjs';\n\nimport Staff from '@miq/staffjs';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { useDocumentTitle } from '@miq/hookjs';\nimport { ProductPriceDisplay } from '@shopy/storejs';\nimport { Card, Icons, Pagination } from '@miq/componentjs';\n\nimport { Order } from './utils';\nimport { OrderUpdateLink } from './buttons';\n\nexport default function OrderListView() {\n  useDocumentTitle('Orders - Sales');\n\n  const { orders, pagination } = React.useContext<TSDState<{ orders: TOrder[]; pagination: any }>>(SharedDataCtx);\n\n  return (\n    <Staff.View\n      title=\"Commandes\"\n      back=\"/staff/sales/\"\n      footer={\n        pagination && (\n          <div>\n            <Pagination {...pagination} component={Staff.Link} to />\n          </div>\n        )\n      }\n      className=\"sales-orders-view miq-container\"\n      headerCN=\"miq-container\"\n    >\n      {orders?.map((i) => {\n        const order = Order(i);\n\n        return (\n          <Card\n            // border\n            style={{ marginBottom: 12 }}\n            actions={\n              <div className=\"d-flex\">\n                <OrderUpdateLink instance={order} className=\"btn btn-round btn-primary-3 ms-1\">\n                  <Icons.Edit />\n                </OrderUpdateLink>\n              </div>\n            }\n            title={<div className=\"\">{`${order.customer_name}`}</div>}\n            key={i.slug}\n            className=\"cart-list-item-card mb-1\"\n          >\n            <ul className=\"text-sm\">\n              <li className=\"d-flex align-items-center justify-content-between\">\n                <span className=\"\">{order.items_count} produit(s)</span>\n\n                <span className=\"fw-bold\">\n                  <ProductPriceDisplay retail_price_data={i?.total || i?.subtotal} />\n                </span>\n              </li>\n              <li className=\"text-sm text-muted\">{order.createdDt}</li>\n            </ul>\n          </Card>\n        );\n      })}\n    </Staff.View>\n  );\n}\n"],"names":["OrderMarkDelivredButton","instance","props","renderHeader","className","renderFooter","setOpen","onClick","mark_delivered","then","r","onSuccess","catch","err","onFailure","render","is_delivered","icon","OrderUpdateLink","title","to","slug","requiredPerms","children","OrderService","this","data","Promise","resolve","post","_path","timeout","values","formatDt","dt_delivered","updated","created","dt","Date","toLocaleDateString","undefined","day","weekday","month","year","StaffService","Order","getStaffModel","OrderListView","useDocumentTitle","React","SharedDataCtx","orders","pagination","back","footer","component","Staff","headerCN","map","i","order","style","marginBottom","actions","customer_name","items_count","retail_price_data","total","subtotal","createdDt"],"sourceRoot":""}