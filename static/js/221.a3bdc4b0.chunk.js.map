{"version":3,"file":"static/js/221.a3bdc4b0.chunk.js","mappings":"mWAoBe,SAAS,EAAT,GAAiD,IAAD,IAApCA,EAAoC,EAApCA,KAASC,GAA2B,aAC7DC,EAAAA,EAAAA,IAAiB,0BAEjB,MAA0BC,EAAAA,SAAuB,IAAjD,eAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,SAAC,UAAD,CACEC,MAAM,qBACNC,KAAK,yEACLC,KAAK,qBACLC,SAAS,uBAJX,UAME,iBAAKC,UAAU,uBAAf,UACGN,IAAS,gBAAKM,UAAU,4CAAf,SAA4DN,KAEtE,UAAC,aAAD,CACEO,QAAM,EACNL,MAAM,WACNM,SAAS,SAACC,EAAD,CAAuBC,SAAUd,IAC1Ce,QACE,iBAAKL,UAAU,GAAf,WACE,iBAAKA,UAAU,iCAAf,WACE,iBAAMA,UAAU,GAAhB,uBACA,2BACE,SAAC,KAAD,CAAqBM,kBAAiB,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,iBAGlD,iBAAKP,UAAU,iCAAf,WACE,iBAAMA,UAAU,GAAhB,oBACA,iBAAMA,UAAU,UAAhB,UACE,SAAC,KAAD,CAAqBM,kBAAiB,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,mBAfxD,WAqBE,SAAC,aAAD,CACEX,OACE,iBAAKI,UAAU,4BAAf,WACE,SAAC,QAAD,KACA,gBAAKA,UAAU,OAAf,uBAJN,UAQE,SAAC,EAAAQ,aAAD,CAAcC,KAAMnB,EAAKoB,mBAG3B,SAAC,aAAD,CACEd,OACE,iBAAKI,UAAU,4BAAf,WACE,SAAC,QAAD,KACA,gBAAKA,UAAU,OAAf,kCAAkCV,QAAlC,IAAkCA,GAAlC,UAAkCA,EAAMqB,gBAAxC,aAAkC,EAAgBC,OAAlD,mBAJN,mBAQGtB,EAAKuB,aARR,aAQG,EAAYC,KAAI,SAACC,GAChB,OACE,gBAAkBf,UAAU,oDAA5B,UACE,SAAC,KAAD,kBAAqBe,GAArB,IAAwBC,KAAMD,EAAEE,eADxBC,EAAAA,EAAAA,MAIb,UAIL,gBAAKlB,UAAU,cAAf,UACE,SAAC,KAAD,CACEmB,MAAM,qBACNf,SAAUd,EACV8B,UAAS,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAO6B,UAClBC,QAAS,SAACC,GACR,GAAI/B,EAAM8B,QAAS,OAAO9B,EAAM8B,QAAQC,GACxC3B,EAAS,oBACV,UAMZ,CAEM,IAAMQ,EAAwB,SAACZ,GACpC,IAAQa,EAAiCb,EAAjCa,SAAiCb,EAAvB6B,UAAuB7B,EAAZ8B,QAE7B,OACE,SAAC,KAAD,CACEE,SAAUnB,EAASO,SAAUC,QAAU,EACvChB,MAAM,eACN4B,aAAc,kBAAM,gBAAKxB,UAAU,cAAf,qCAAN,EACdyB,aAAc,gBAAGC,EAAH,EAAGA,QAAH,OACZ,iBAAK1B,UAAU,wDAAf,WACE,SAAC,KAAD,CAAQ2B,QAAS,kBAAMD,GAAQ,EAAd,EAAjB,sBAEA,SAAC,KAAD,CAAQC,QAAS,WAAQ,EAAE3B,UAAU,2BAArC,uBAJU,EASd4B,OAAQ,kBAAM,gBAAK5B,UAAU,MAAf,sEAAN,EACRA,UAAU,UAdZ,yBAmBH,C","sources":["../../../../shopy/shopy-salejs/src/cart/views.UpdatePay.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { uuid } from '@miq/utiljs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { useDocumentTitle } from '@miq/hookjs';\nimport { ProductPriceDisplay } from '@shopy/storejs';\n\nimport { TCartInstance } from './utils';\nimport { ItemProductCard } from './components';\nimport { CustomerCard } from '../customer';\nimport { CartPayButton } from './buttons';\nimport { TFormUpdateProps } from '@miq/formjs';\n\ntype CartPayViewProps = {\n  cart: TCartInstance;\n  onSuccess?: (r: any) => void;\n  onError?: (r: any) => void;\n};\n\nexport default function ({ cart, ...props }: CartPayViewProps) {\n  useDocumentTitle('Mark cart paid - Sales');\n\n  const [error, setError] = React.useState<string>('');\n\n  return (\n    <Staff.View\n      title=\"Placer la commande\"\n      text=\"Ne placez la commande que quand le paiement a été éffectué\"\n      back=\"/staff/sales/carts\"\n      headerCN=\"miq-container center\"\n    >\n      <div className=\"miq-container center\">\n        {error && <div className=\"text-danger p-4 rounded mb-3 text-center \">{error}</div>}\n\n        <Staff.Section\n          border\n          title=\"Commande\"\n          actions={<CartAddDiscountButton instance={cart} />}\n          footer={\n            <div className=\"\">\n              <div className=\"d-flex justify-content-between\">\n                <span className=\"\">Subtotal</span>\n                <span>\n                  <ProductPriceDisplay retail_price_data={cart?.subtotal} />\n                </span>\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                <span className=\"\">Total</span>\n                <span className=\"fw-bold\">\n                  <ProductPriceDisplay retail_price_data={cart?.subtotal} />\n                </span>\n              </div>\n            </div>\n          }\n        >\n          <Staff.Section\n            title={\n              <div className=\"d-flex align-items-center\">\n                <Icons.UserCircle />\n                <div className=\"ms-1\">Client</div>\n              </div>\n            }\n          >\n            <CustomerCard data={cart.customer_data!} />\n          </Staff.Section>\n\n          <Staff.Section\n            title={\n              <div className=\"d-flex align-items-center\">\n                <Icons.BrandAppGallery />\n                <div className=\"ms-1\">{`Panier (${cart?.products?.length} produits)`}</div>\n              </div>\n            }\n          >\n            {cart.items?.map((i) => {\n              return (\n                <div key={uuid()} className=\"d-flex justify-content-between align-items-center\">\n                  <ItemProductCard {...i} size={i.size_data} />\n                </div>\n              );\n            })}\n          </Staff.Section>\n        </Staff.Section>\n\n        <div className=\"text-center\">\n          <CartPayButton\n            label=\"Placer la commande\"\n            instance={cart}\n            onSuccess={props?.onSuccess}\n            onError={(err) => {\n              if (props.onError) return props.onError(err);\n              setError('An error occurred');\n            }}\n          />\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nexport const CartAddDiscountButton = (props: Omit<TFormUpdateProps<{ instance: TCartInstance }>, 'context'>) => {\n  const { instance, onSuccess, onError } = props;\n\n  return (\n    <ConfirmButton\n      disabled={instance.products!.length <= 0}\n      title=\"Add discount\"\n      renderHeader={() => <div className=\"fw-bold p-1\">Ajouter une réduction</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center p-2\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => {}} className=\"btn-primary fw-bold w-50\">\n            Ajouter\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Une commande placée ne peut plus être supprimée.</div>}\n      className=\"fw-bold\"\n    >\n      Réduction\n    </ConfirmButton>\n  );\n};\n"],"names":["cart","props","useDocumentTitle","React","error","setError","title","text","back","headerCN","className","border","actions","CartAddDiscountButton","instance","footer","retail_price_data","subtotal","CustomerCard","data","customer_data","products","length","items","map","i","size","size_data","uuid","label","onSuccess","onError","err","disabled","renderHeader","renderFooter","setOpen","onClick","render"],"sourceRoot":""}