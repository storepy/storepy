{"version":3,"file":"static/js/275.1550be4d.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/supplier/components.tsx","../../../../shopy/shopy-storejs/src/supplier/views.List.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { SupplierOrder, TSupplierOrderInstance } from './models';\nimport Staff from '@miq/staffjs';\n\ntype TSupplierOrderDeleteButtonProps = Omit<IFormUpdateProps<TSupplierOrderInstance>, 'context'> & {\n  label?: string;\n};\n\nexport const SupplierOrderDeleteButton: React.FC<TSupplierOrderDeleteButtonProps> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['s-order-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const SupplierOrderAddButton = (props: { onSuccess: (p?: any) => void; label?: string; className?: string }) => {\n  const { label = 'Add order' } = props;\n\n  return (\n    <Staff.Button\n      onClick={() => {\n        SupplierOrder()\n          .create({})\n          .then((r) => props?.onSuccess?.(r))\n          .catch((err: any) => {\n            // console.log(err);\n          });\n      }}\n      className={props.className}\n      requiredPerms={['store.add_supplierorder']}\n      title={'Add a new order'}\n    >\n      {label}\n    </Staff.Button>\n  );\n};\n\nexport const SupplierPrice = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { Pagination, Table } from '@miq/componentjs';\n\nimport { TSupplierOrder } from '../types';\n\nimport { SupplierOrder } from './models';\nimport { SupplierOrderAddButton, SupplierOrderDeleteButton, SupplierPrice } from './components';\n\nconst SupplierOrderRow = ({ item, removeItem }: { item: TSupplierOrder; removeItem: (payload: any) => void }) => {\n  const { name = 'New order', slug, is_paid, items, items_revenue, supplier } = item || {};\n\n  return (\n    <Table.Tr>\n      <Table.Td>\n        <Staff.Link to={`${slug}/`} className=\"\">\n          <div className={getCN(['fw-bold text-ellipsis', is_paid && 'text-line-through'])}>{name}</div>\n        </Staff.Link>\n        <span className=\"text-sm\">{item.avg_cost}</span>\n      </Table.Td>\n\n      <Table.Td>{items?.length}</Table.Td>\n\n      <Table.Td>{supplier}</Table.Td>\n\n      <Table.Td>\n        <SupplierPrice {...item.total_cost_data} />\n      </Table.Td>\n      <Table.Td>\n        <SupplierPrice {...items_revenue} />\n      </Table.Td>\n\n      <Table.Td>\n        <SupplierOrderDeleteButton instance={SupplierOrder(item)} onSuccess={() => removeItem?.({ slug })} />\n      </Table.Td>\n    </Table.Tr>\n  );\n};\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, removeItem } = useRequest(() => SupplierOrder().list({ params: { page } }), {\n    refreshDeps: [page],\n    onSuccess: () => {\n      document.title = 'Supplier orders - Store';\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const { items } = r;\n\n  return (\n    <Staff.View\n      title=\"Supplier Orders\"\n      back=\"/staff/store/\"\n      actions={\n        <SupplierOrderAddButton onSuccess={({ data }: any) => navigate(`${data.slug}/`)} className=\"btn-primary-3\" />\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      {Boolean(items.length) ? (\n        <Staff.Section\n          mainCN=\"d-grid\"\n          mainStyle={{ overflowX: 'auto' }}\n          footer={<Pagination {...r.data} component={Staff.Link} to />}\n        >\n          <Table<TSupplierOrder>\n            border\n            items={items}\n            header={\n              <>\n                <Table.Th />\n                <Table.Th>Items</Table.Th>\n                <Table.Th>Supplier</Table.Th>\n\n                <Table.Th>Total Cost</Table.Th>\n                <Table.Th>Est. Revenue</Table.Th>\n                <Table.Th />\n              </>\n            }\n            renderItem={(item) => <SupplierOrderRow {...{ item, removeItem }} key={item.slug} />}\n            className=\"w-100\"\n          />\n        </Staff.Section>\n      ) : (\n        <div className=\"p-4\">\n          <div className=\"text-center\">\n            <div className=\"mb-4 text-md\">Add a supplier order to get started.</div>\n            <SupplierOrderAddButton\n              onSuccess={({ data }: any) => navigate(`${data.slug}/`)}\n              label=\"Add an order\"\n              className=\"btn-md btn-primary fw-bold\"\n            />\n          </div>\n        </div>\n      )}\n    </Staff.View>\n  );\n}\n\n// EXPORTS\n\nexport * from './models';\n"],"names":["SupplierOrderDeleteButton","props","instance","onSuccess","onError","label","renderHeader","name","renderFooter","setOpen","className","onClick","destroy","then","res","catch","err","handleDelete","render","getCN","SupplierOrderAddButton","SupplierOrder","create","r","requiredPerms","title","SupplierPrice","amountWithSymbol","SupplierOrderRow","item","removeItem","slug","is_paid","items","items_revenue","supplier","to","avg_cost","length","total_cost_data","SupplierOrderIndexView","navigate","useNavigate","useSearchParams","page","get","useRequest","list","params","refreshDeps","document","Response","isSuccess","back","actions","data","Boolean","mainCN","mainStyle","overflowX","footer","component","Staff","border","header","renderItem","key"],"sourceRoot":""}