{"version":3,"file":"static/js/282.3d9b4eee.chunk.js","mappings":"4SAYaA,EAAoB,SAAC,GAAqB,oBAAC,IACtD,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,EAAkBC,EAAAA,SAAuBF,EAAOG,IAAI,MAAQ,IAA5D,eAAOC,EAAP,UAEA,OACE,iBACEC,OAAO,IACPC,OAAO,MACPC,SAAU,SAACC,GACTA,EAAEC,iBAEGL,EACAJ,EAAOU,IAAI,IAAKN,GADbJ,EAAOW,OAAO,KAEtBX,EAAOW,OAAO,QAEdV,EAAUD,OAMH,SAASY,IACtB,IAAMC,EAAUC,EAAAA,GAAAA,UAChB,GAAyBC,EAAAA,EAAAA,IAAkB,CAAEC,QAAS,MAA9CC,EAAR,EAAQA,IAER,GAFA,EAAaC,QAEA,OAAO,SAAC,KAAD,IAEpB,IAAMC,EAAI,IAAIC,EAAAA,GAAeH,GAC7B,OAAKE,EAAEE,WAGL,SAAC,KAAD,CAAOC,QAAST,EAAhB,UACE,SAAC,IAAD,CACEU,MAAM,eACNC,SAAS,SAAC,YAAD,CAAcC,UAAU,gBAAxB,SAAyCZ,EAAQa,OAAS,OAAS,SAF9E,UAIE,SAAC,UAAD,CACED,UAAU,eACVE,MAAOR,EAAEQ,MACTC,WAAY,YAAe,IAAZC,EAAW,EAAXA,KACb,OACE,iBAAKJ,UAAU,8EAAf,WACE,iBAAKA,UAAU,SAAf,WACE,gBAAKA,UAAU,UAAf,SAA0BI,EAAKC,QAC/B,gBAAKL,UAAU,qBAAf,0CAGF,SAAC,KAAD,CAAWM,GAAE,UAAKF,EAAKG,KAAV,KAAmBP,UAAU,+BAA1C,UACE,SAAC,QAAD,gBApBS","sources":["../../../../packages/miq-staffjs/src/analytics/views.LIBList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Response } from '@miq/utiljs';\nimport { HView, Icons, Loading } from '@miq/componentjs';\n\nimport StaffView from '../Views';\n\nimport { useLIBListRequest } from './utils';\nimport { TLIB } from './types';\nimport { StaffLink } from '../components';\n\nexport const LIBListFilterForm = ({ ...props }: {}) => {\n  const [params, setParams] = useSearchParams();\n  const [q, setQ] = React.useState<string>(params.get('q') || '');\n\n  return (\n    <form\n      action=\".\"\n      method=\"GET\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (!q) params.delete('q');\n        else params.set('q', q);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    ></form>\n  );\n};\n\nexport default function LIBListView() {\n  const listCtx = HView.useView();\n  const { res, loading } = useLIBListRequest({ summary: '1' });\n\n  if (loading) return <Loading />;\n\n  const r = new Response<TLIB>(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <HView context={listCtx}>\n      <StaffView\n        title=\"Links in bio\"\n        actions={<HView.Toggle className=\"btn-primary-2\">{listCtx.isEdit ? 'Done' : 'Edit'}</HView.Toggle>}\n      >\n        <HView.List<TLIB>\n          className=\"d-grid gap-1\"\n          items={r.items}\n          renderItem={({ data }) => {\n            return (\n              <div className=\"d-flex align-items-center justify-content-between border-1 p-1 mb-1 rounded\">\n                <div className=\"flex-1\">\n                  <div className=\"fw-bold\">{data.name}</div>\n                  <div className=\"text-sm text-muted\">{`today: 123 | total: 2000`}</div>\n                </div>\n\n                <StaffLink to={`${data.slug}/`} className=\"btn btn-square btn-primary-3\">\n                  <Icons.Edit />\n                </StaffLink>\n              </div>\n            );\n          }}\n        />\n      </StaffView>\n    </HView>\n  );\n}\n"],"names":["LIBListFilterForm","useSearchParams","params","setParams","React","get","q","action","method","onSubmit","e","preventDefault","set","delete","LIBListView","listCtx","HView","useLIBListRequest","summary","res","loading","r","Response","isSuccess","context","title","actions","className","isEdit","items","renderItem","data","name","to","slug"],"sourceRoot":""}