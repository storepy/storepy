{"version":3,"file":"static/js/298.873dd52d.chunk.js","mappings":"iUAgBMA,EAAoBC,EAAAA,MAAW,kBAAM,gCACrCC,EAAyBD,EAAAA,MAAW,kBAAM,iCAE1CE,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,EAAH,OAClB,iBAAKC,UAAU,yBAAf,WACE,SAAC,QAAD,WACE,gBAAKC,MAAO,CAAEC,SAAU,YAAxB,UACE,iBAAKD,MAAO,CAAEE,OAAQ,OAAQC,UAAW,OAAQF,SAAU,WAAYG,MAAO,QAA9E,WACE,gBAAKL,UAAU,YAAf,UACE,SAAC,KAAD,CAAiBM,MAAOP,EAAEO,MAAOC,SAAS,WAG5C,gBAAKP,UAAU,OAAOC,MAAO,CAAEC,SAAU,SAAUM,OAAQ,GAA3D,UACE,SAAC,MAAD,kBAAgBT,EAAEU,MAAlB,IAAwBC,UAAWC,EAAAA,GAAAA,KAAYC,IAAE,EAACZ,UAAU,gBAMpE,gBAAKA,UAAU,YAAf,UACE,SAACH,EAAD,CAAwBgB,KAAK,iCAK7BC,EAAa,SAAC,GAA6D,IAAD,EAA1Df,EAA0D,EAA1DA,EAAGgB,EAAuD,EAAvDA,OACvB,OACE,SAAC,UAAD,CACEC,MAAM,WACNH,KAAK,gBACLI,SACE,SAAC,UAAD,CAAYL,GAAG,OAAOM,cAAe,CAAC,qBAAsBlB,UAAU,oBAAtE,yBAIFkB,cAAe,CAAC,sBARlB,SAUsB,IAAnBnB,EAAEO,MAAMa,QACP,iBAAKnB,UAAU,2CAAf,WACE,cAAGA,UAAU,mBAAb,uDACA,gBAAKA,UAAU,OAAf,UACE,SAAC,UAAD,CAAYY,GAAG,OAAOM,cAAe,CAAC,qBAAsBlB,UAAU,yBAAtE,qCAMJ,iCACE,SAAC,KAAD,CAAuBoB,WAAU,UAAErB,EAAEU,YAAJ,aAAE,EAAQW,aAE1CrB,EAAEO,MAAMe,KAAI,SAACC,GAAD,aACX,mBAAC,KAAD,CAAiBA,KAAMA,EAAYP,OAAAA,EAAQQ,OAAM,UAAExB,EAAEU,YAAJ,aAAE,EAAQc,OAAUC,IAAKF,EAAKG,WAGjF,gBAAKzB,UAAU,GAAf,UACE,SAAC,MAAD,kBAAgBD,EAAEU,MAAlB,IAAwBC,UAAWC,EAAAA,GAAAA,KAAYC,IAAE,aAQ9C,SAASc,IACtB,OAAyBC,EAAAA,EAAAA,KAAjBC,EAAR,EAAQA,IAAQC,GAAhB,YACA,GAAiBC,EAAAA,EAAAA,MAAVf,GAAP,gBAEAgB,EAAAA,EAAAA,GAAe,CAAEC,SAAUH,EAAKI,WAAYC,UAAWL,EAAKM,aAE5D,IAAMpC,EAAI,IAAIqC,EAAAA,GAASR,GACvB,OAAK7B,EAAEsC,WAGL,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,aAAaC,SAAS,SAACzC,EAAD,CAAmBC,EAAAA,EAAGgB,OAAAA,OACxD,SAAC,KAAD,CAAOuB,KAAK,MAAMC,SAAS,SAAC5C,EAAD,OAC3B,SAAC,KAAD,CAAO6C,OAAK,EAACD,SAAS,SAACzB,EAAD,CAAkBf,EAAAA,EAAGgB,OAAAA,SANtB","sources":["../../../../shopy/shopy-storejs/src/Product/IndexView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Routes, Route, useSearchParams } from 'react-router-dom';\n\nimport './indexview.scss';\n\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { Pagination, Viewports } from '@miq/componentjs';\n\nimport { TProduct } from '../types';\nimport { useCrudEmitter } from '../events';\n\nimport { ProductListFilterForm } from './forms';\nimport { useProductListRequest } from './utils';\nimport { ProductCardList, ProductListItem } from './components';\n\nconst ProductCreateView = React.lazy(() => import('./CreateView'));\nconst ProductStaffUpdateView = React.lazy(() => import('./UpdateView'));\n\nconst UpdateRoute = ({ r }: { r: Response; params?: URLSearchParams }) => (\n  <div className=\"d-grid grid-xl-4 gap-2\">\n    <Viewports.XLUp>\n      <div style={{ position: 'relative' }}>\n        <div style={{ height: '100%', overflowY: 'auto', position: 'absolute', width: '100%' }}>\n          <div className=\"mb-1 mt-2\">\n            <ProductCardList items={r.items} itempath=\"../\" />\n          </div>\n\n          <div className=\"pb-3\" style={{ position: 'sticky', bottom: 0 }}>\n            <Pagination {...r.data} component={Staff.Link} to className=\"\" />\n          </div>\n        </div>\n      </div>\n    </Viewports.XLUp>\n\n    <div className=\"span-xl-3\">\n      <ProductStaffUpdateView back=\"/staff/store/products/\" />\n    </div>\n  </div>\n);\n\nconst IndexRoute = ({ r, params }: { r: Response; params: URLSearchParams }) => {\n  return (\n    <Staff.View\n      title=\"Products\"\n      back=\"/staff/store/\"\n      actions={\n        <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary-3\">\n          Add product\n        </Staff.Link>\n      }\n      requiredPerms={['store.view_product']}\n    >\n      {r.items.length === 0 ? (\n        <div className=\"text-center p-staff-list-empty py-3 my-3\">\n          <p className=\"fw-light text-md\">Add products to your shop to get started</p>\n          <div className=\"my-4\">\n            <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary btn-md\">\n              Add a new product\n            </Staff.Link>\n          </div>\n        </div>\n      ) : (\n        <>\n          <ProductListFilterForm categories={r.data?.categories} />\n\n          {r.items.map((item: TProduct) => (\n            <ProductListItem item={item} {...{ params, stages: r.data?.stages }} key={item.slug} />\n          ))}\n\n          <div className=\"\">\n            <Pagination {...r.data} component={Staff.Link} to />\n          </div>\n        </>\n      )}\n    </Staff.View>\n  );\n};\n\nexport default function ProductStaffIndexView() {\n  const { res, ...rest } = useProductListRequest();\n  const [params] = useSearchParams();\n\n  useCrudEmitter({ onUpdate: rest.updateItem, onDestroy: rest.removeItem });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Routes>\n      <Route path=\":prodSlug/\" element={<UpdateRoute {...{ r, params }} />} />\n      <Route path=\"new\" element={<ProductCreateView />} />\n      <Route index element={<IndexRoute {...{ r, params }} />} />\n    </Routes>\n  );\n}\n"],"names":["ProductCreateView","React","ProductStaffUpdateView","UpdateRoute","r","className","style","position","height","overflowY","width","items","itempath","bottom","data","component","Staff","to","back","IndexRoute","params","title","actions","requiredPerms","length","categories","map","item","stages","key","slug","ProductStaffIndexView","useProductListRequest","res","rest","useSearchParams","useCrudEmitter","onUpdate","updateItem","onDestroy","removeItem","Response","isSuccess","path","element","index"],"sourceRoot":""}