{"version":3,"file":"static/js/378.e23ada73.chunk.js","mappings":"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","sources":["../../../../packages/miq-staffjs/src/analytics/hits/index.tsx","../../../../packages/miq-staffjs/src/analytics/hits/utils.ts","../../../../packages/miq-staffjs/src/analytics/hits/components.tsx","../../../../packages/miq-staffjs/src/analytics/hits/views.List.tsx","../../../../packages/miq-staffjs/src/analytics/libs/views.Update.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nconst HitListView = React.lazy(() => import('./views.List'));\n\nexport default function HitRoutes() {\n  return (\n    <Routes>\n      <Route index element={<HitListView />} />\n    </Routes>\n  );\n}\n\nexport { useHitListRequest, Hit } from './utils';\nexport { HitListItem } from './views.List';\nexport type { THitInstance, THit } from './utils';\n","import { useRequest } from '@miq/hookjs';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\nimport { StaffService, StaffModel } from '../../service';\n\nexport type THit = {\n  slug?: string | null;\n  url: string;\n  path: string;\n  source_id?: string;\n  app?: string;\n  model?: string;\n  ip?: string;\n  session?: string;\n  referrer?: string;\n  user_agent?: string;\n  method?: string;\n  response_status?: number;\n  debug?: boolean;\n  session_data?: Record<string, any>;\n  parsed_data?: Record<string, any>;\n  customer_data?: Record<string, any>;\n  created?: string;\n  updated?: string;\n};\n\nexport const useHitListRequest = (defParams?: URLSearchParamsInit) => {\n  const [params] = useSearchParams(defParams);\n\n  const __public = params.get('__public');\n  const __starts_with = params.get('__starts_with');\n  const __q = params.get('__q');\n  const __path = params.get('__path');\n  const __url = params.get('__url');\n  const __ref = params.get('__ref');\n  const __ip = params.get('__ip');\n  const __bot = params.get('__bot');\n  const __ua = params.get('__ua');\n  const __status = params.get('__status');\n  const __dt = params.get('__dt');\n  const page = params.get('page');\n\n  return useRequest<THit>(() => Hit({}).list({ params }), {\n    refreshDeps: [__q, __path, __url, __ref, __ip, __bot, __ua, __status, __dt, __public, __starts_with, page],\n  });\n};\n\nclass HitService extends StaffService<THit> {\n  get img() {\n    return this.data?.session_data?.img;\n  }\n\n  deleteSlugs(slugs: string[]) {\n    return this.post(`${this._endpoint}batch/`, { slugs, action: 'destroy' });\n  }\n\n  getSummary(params?: URLSearchParams) {\n    return this.get(`${this._endpoint}summary/`, { params });\n  }\n}\n\nexport const Hit = (data: THit = {}) => {\n  return StaffModel<THit, HitService>(data, 'hits', HitService);\n};\n\nexport type THitInstance = ReturnType<typeof Hit>;\n","import * as React from 'react';\n\nimport { ButtonProps, Img } from '@miq/componentjs';\nimport { getCN, truncateStr, uuid } from '@miq/utiljs';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { THit, THitInstance } from './utils';\n\ntype THitOrInstance = THit | THitInstance;\n\nconst HitSearchButton = (props: ButtonProps & { name: string; value?: string }) => {\n  const [params, setParams] = useSearchParams();\n  const { name, value, children, ...rest } = props;\n  return (\n    <button\n      {...rest}\n      className={getCN(['btn-link', params.has(name) && 'bg-red-100', props?.className])}\n      key={name}\n      onClick={() => {\n        if (params.has(name)) params.delete(name);\n        else if (value) {\n          params.set(name, value);\n        }\n        setParams(params);\n      }}\n    >\n      {children || `${params.has(name) ? `[x] ${name}` : name} x`}\n    </button>\n  );\n};\n\nexport const HitImg = ({ hit }: { hit: THitOrInstance }) => {\n  const img = hit?.session_data?.img;\n  return img ? <Img.Square src={`${img}`} className=\"rounded\" /> : null;\n};\n\nexport const HitDate = ({ hit, ...props }: { hit: THitOrInstance; className?: string; time?: string | boolean }) => {\n  if (!hit.created) return null;\n  return (\n    <span className={props?.className} title=\"Date created\">\n      {new Date(hit?.created).format({ dateStyle: 'medium', timeStyle: 'medium' })}\n    </span>\n  );\n};\n\nexport const HitReferrer = ({\n  hit,\n  search,\n  ...props\n}: {\n  hit: THitOrInstance;\n  search?: boolean;\n  className?: string;\n}) => {\n  const { referrer } = hit;\n  if (!referrer) return null;\n\n  const title = `Referrer: ${referrer}`;\n\n  if (search)\n    return (\n      <HitSearchButton name=\"__ref\" value={referrer} className={props?.className} title={title}>\n        {truncateStr(referrer)}\n      </HitSearchButton>\n    );\n  return (\n    <span className={props?.className} title={title}>\n      {referrer}\n    </span>\n  );\n};\n\nexport const HitUA = ({ hit, search, ...props }: { hit: THitOrInstance; search?: boolean; className?: string }) => {\n  const { user_agent } = hit;\n  if (!user_agent) return null;\n\n  const title = `user agent: ${user_agent}`;\n\n  if (search)\n    return (\n      <HitSearchButton name=\"__ua\" value={user_agent} className={props?.className} title={title}>\n        {truncateStr(user_agent!, 0, 45)}\n      </HitSearchButton>\n    );\n  return (\n    <span className={props?.className} title={title}>\n      {user_agent}\n    </span>\n  );\n};\n\nexport const HitUrl = ({\n  hit,\n  search,\n  children,\n  ...props\n}: {\n  hit: THitOrInstance;\n  search?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n}) => {\n  const { url } = hit;\n  if (!url) return null;\n\n  const title = `url: ${url}`;\n\n  if (search)\n    return (\n      <HitSearchButton name=\"__url\" value={`${url}`} className={props?.className} title={title}>\n        {children || url}\n      </HitSearchButton>\n    );\n  return (\n    <span className={getCN([props?.className])} title={title}>\n      {children || url}\n    </span>\n  );\n};\n\nexport const HitPath = ({ hit, search, ...props }: { hit: THitOrInstance; search?: boolean; className?: string }) => {\n  const { path } = hit;\n  if (!path) return null;\n\n  const title = `path: ${path}`;\n\n  if (search)\n    return (\n      <HitSearchButton name=\"__path\" value={`${path}`} className={props?.className} title={title}>\n        {path}\n      </HitSearchButton>\n    );\n  return (\n    <span className={getCN([props?.className])} title={title}>\n      {path}\n    </span>\n  );\n};\n\nexport const HitStatus = ({ hit, search, ...props }: { hit: THitOrInstance; search?: boolean; className?: string }) => {\n  const { response_status } = hit;\n  if (!response_status) return null;\n\n  const title = 'response status';\n  const cn = getCN([response_status! > 299 ? 'text-danger' : 'text-success', 'bg-white', props?.className]);\n\n  if (search)\n    return (\n      <HitSearchButton name=\"__status\" value={`${response_status}`} className={cn} title={title}>\n        {response_status}\n      </HitSearchButton>\n    );\n  return (\n    <span className={cn} title={title}>\n      {response_status}\n    </span>\n  );\n};\n\nexport const HitUser = ({ hit, search, ...props }: { hit: THitOrInstance; search?: boolean; className?: string }) => {\n  const { ip, session_data = {}, customer_data = {} } = hit;\n  let { username, _cus } = session_data || {};\n\n  const name = customer_data?.first_name ? `${customer_data?.first_name} ${customer_data?.last_name}` : null;\n  if (username) username = `@${username}`;\n\n  const value = name || _cus || username || ip;\n  const title = `user: ${value}`;\n\n  if (search)\n    return (\n      <HitSearchButton name=\"__ip\" value={ip} className={props?.className} title={title}>\n        {value}\n      </HitSearchButton>\n    );\n  return (\n    <span className={props?.className} title={title}>\n      {value}\n    </span>\n  );\n};\n\nexport const HitCart = ({ hit, ...props }: { hit: THitOrInstance; className?: string }) => {\n  const { _cart } = hit?.session_data || {};\n\n  return _cart ? (\n    <a href={`/staff/sales/cart/${_cart}/`} className={props?.className} target=\"_blank\">\n      view cart\n    </a>\n  ) : null;\n};\n\nexport const HitQueries = ({ hit, ...props }: { hit: THitOrInstance; className?: string }) => {\n  const { parsed_data = {} } = hit;\n  const excludeKeys = ['path', 'url', 'sdt', 'atc'];\n\n  return (\n    <>\n      {Object.entries(parsed_data).map((entry) => {\n        const [key, val = ''] = entry;\n        if (!key || !val) return null;\n\n        if (excludeKeys.includes(key)) return null;\n\n        return (\n          <span key={uuid()} className=\"text-sm text-muted me-1 bg-blue-50 rounded\" title={val}>\n            {key}: {truncateStr(val)}\n          </span>\n        );\n      })}\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { useDocumentTitle } from '@miq/hookjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { HView, Loading, Pagination } from '@miq/componentjs';\nimport { THit, useHitListRequest } from './utils';\nimport {\n  HitCart,\n  HitDate,\n  HitImg,\n  HitPath,\n  HitQueries,\n  HitReferrer,\n  HitStatus,\n  HitUA,\n  HitUrl,\n  HitUser,\n} from './components';\nimport { StaffViewNavLinks } from '../../components';\n\nconst navLinks = [\n  { label: 'Views', link: { to: '.' } },\n  { label: 'Bots', link: { to: './?__bot=1' } },\n  { label: 'Errors', link: { to: './?__err=1' } },\n  // { label: 'Bots', link: { to: './?bot=1' } },\n];\n\nexport default function CartListView() {\n  useDocumentTitle('Hits - Analytics');\n\n  const listCtx = HView.useView();\n  const { res, loading } = useHitListRequest({ __public: '1' });\n\n  if (loading) return <Loading />;\n\n  const r = new Response<THit>(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <HView context={listCtx}>\n      <Staff.View\n        title={\n          <>\n            <StaffViewNavLinks navLinks={navLinks} />\n          </>\n        }\n        footer={<Pagination {...r.data} component={Staff.Link} to />}\n      >\n        <HView.List\n          className=\"text-sm\"\n          itemCN=\"border-1 rounded p-1 mb-1\"\n          items={r.items}\n          renderItem={({ data }) => {\n            return <HitListItem hit={data} />;\n          }}\n        />\n      </Staff.View>\n    </HView>\n  );\n}\n\nexport const HitListItem = ({ hit, ...props }: { hit: THit; className?: string }) => {\n  return (\n    <div className={getCN(['d-flex', props?.className])}>\n      <div style={{ width: 48, minWidth: 48 }}>\n        <HitImg {...{ hit }} />\n      </div>\n\n      <div className=\"d-grid ms-1\">\n        <div className=\"text-ellipsis\">\n          <HitUser search {...{ hit }} className=\"me-1\" />\n          <HitCart {...{ hit }} className=\"me-1 bg-green-100\" />\n          {` | `}\n          <HitDate time {...{ hit }} className=\"me-1\" />\n        </div>\n        <div className=\"text-ellipsis\">\n          <HitStatus search {...{ hit }} className=\"me-1\" />\n          <HitPath search {...{ hit }} className=\"me-1\" />\n          <HitUrl search {...{ hit }} className=\"bg-white color-blue-400\">\n            {` « url » `}\n          </HitUrl>\n\n          <div className=\"text-muted\" title={hit.user_agent}>\n            <HitUA search {...{ hit }} className=\"me-1\" />\n            <HitReferrer search {...{ hit }} />\n          </div>\n        </div>\n\n        <div className=\"\">\n          <HitQueries hit={hit} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Response } from '@miq/utiljs';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport StaffView from '../../Views';\nimport { LIB, TLIB } from './utils';\nimport { HitListItem, THit } from '../hits';\nimport { Loading } from '@miq/componentjs';\n\nexport default function LIBUpdateView() {\n  const { libSlug } = useParams();\n  const [params] = useSearchParams();\n  const form = useForm<TLIB>({});\n\n  const paramSize = [...params.keys()].length;\n\n  const { res: hitRes, loading: hitLoading } = useRequest(() => LIB({ slug: libSlug }).hitList(params), {\n    refreshDeps: [libSlug, paramSize],\n    onSuccess: ({ data }) => {},\n    onError: ({ response }) => {},\n  });\n\n  const { res } = useRequest(() => LIB({ slug: libSlug }).retrieve(), {\n    refreshDeps: [libSlug],\n    onSuccess: ({ data }) => form.setValues(data),\n    onError: ({ response }) => {},\n  });\n\n  const r = new Response<TLIB>(res);\n  if (!r.isSuccess) return null;\n\n  let instance = LIB(r.data);\n  const { name } = instance;\n\n  return (\n    <StaffView back=\"../\" title={instance.name} text={`p/${name}/`}>\n      <div></div>\n\n      {/* <LibHitList response={new Response<THit>(hitRes)} /> */}\n      <div className=\"\">\n        {hitLoading ? (\n          <Loading />\n        ) : (\n          new Response<THit>(hitRes)?.items?.map((hit) => <HitListItem hit={hit} className=\"mb-2\" key={hit.slug} />)\n        )}\n      </div>\n    </StaffView>\n  );\n}\n"],"names":["HitListView","React","HitRoutes","index","element","useHitListRequest","defParams","useSearchParams","params","__public","get","__starts_with","__q","__path","__url","__ref","__ip","__bot","__ua","__status","__dt","page","useRequest","Hit","list","refreshDeps","HitService","this","data","session_data","img","slugs","post","_endpoint","action","StaffService","StaffModel","HitSearchButton","props","setParams","name","value","children","rest","className","getCN","has","key","onClick","delete","set","HitImg","hit","src","HitDate","created","title","Date","format","dateStyle","timeStyle","HitReferrer","search","referrer","truncateStr","HitUA","user_agent","HitUrl","url","HitPath","path","HitStatus","response_status","cn","HitUser","ip","customer_data","username","_cus","first_name","last_name","HitCart","_cart","href","target","HitQueries","parsed_data","excludeKeys","Object","entries","map","entry","val","includes","uuid","navLinks","label","link","to","CartListView","useDocumentTitle","listCtx","HView","res","loading","r","Response","isSuccess","context","footer","component","Staff","itemCN","items","renderItem","HitListItem","style","width","minWidth","time","LIBUpdateView","libSlug","useParams","form","useForm","paramSize","keys","length","LIB","slug","hitList","onSuccess","onError","response","hitRes","hitLoading","retrieve","setValues","instance","back","text"],"sourceRoot":""}