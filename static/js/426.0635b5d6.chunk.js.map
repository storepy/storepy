{"version":3,"file":"static/js/426.0635b5d6.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Setting/utils.ts","../../../../shopy/shopy-storejs/src/Setting/forms.tsx","../../../../shopy/shopy-storejs/src/Setting/index.tsx"],"sourcesContent":["import { TextChoicesType } from '@miq/formjs';\nimport { StaffModel, StaffService } from '@miq/staffjs';\n\nexport class ShopSettingService extends StaffService<TShopSetting> {\n  updateConfig(values: any) {\n    return this.update({ config: { ...this.data?.config, ...values } });\n  }\n}\n\nexport type TShopSettingConfig = {\n  show_active_suppliers: boolean;\n  show_product_supplier: boolean;\n  has_suppliers: boolean;\n};\n\nexport type TShopSetting = {\n  slug?: string;\n  currencies: TextChoicesType;\n  config: TShopSettingConfig;\n  returns?: string;\n  returns_html?: string;\n  size_guide?: string;\n  size_guide_html?: string;\n};\n\nexport const ShopSetting = (data: any = {}) =>\n  StaffModel<TShopSetting, ShopSettingService>(data, 'shopy-settings', ShopSettingService);\n\nexport type TShopSettingInstance = ReturnType<typeof ShopSetting>;\n","import * as React from 'react';\n\nimport Form, { FormFieldProps, IFormUpdateProps, useForm } from '@miq/formjs';\nimport { TShopSetting, TShopSettingInstance } from './utils';\nimport { Button, Card } from '@miq/componentjs';\n\nexport const ShopSettingPagesUpdateForm = (\n  props: Omit<TShopSettingUpdateFormProps, 'context'> & { instance: TShopSettingInstance }\n) => {\n  const { instance, fields } = props;\n  const context = useForm<TShopSetting>({\n    returns: instance?.returns || '',\n    returns_html: instance.returns_html || '',\n    size_guide: instance.size_guide || '',\n    size_guide_html: instance?.size_guide_html || '',\n  });\n\n  const getHtml = (value: string) => value;\n  const hasField = (field: string) => fields.includes(field);\n\n  return (\n    <ShopSettingUpdateForm\n      {...props}\n      context={context}\n      fields={['returns', 'returns_html', 'size_guide', 'size_guide_html']}\n      onSubmit={(e) => {\n        e.preventDefault();\n        instance\n          .update({ returns: context.values.returns, returns_html: getHtml(context.values.returns) })\n          .then((r: any) => {})\n          .catch((e: any) => {});\n      }}\n    >\n      {hasField('returns') && <SettingPageField name=\"returns\" context={context} label=\"Returns Page\" />}\n    </ShopSettingUpdateForm>\n  );\n};\n\nconst SettingPageField = (props: FormFieldProps & { name: string; context: ReturnType<typeof useForm> }) => {\n  const [preview, setPreview] = React.useState<boolean>(false);\n  const { context, name, label, text, className, ...rest } = props;\n\n  const __html: string = context.values[name];\n\n  return (\n    <Card\n      title={name}\n      text=\"This is text\"\n      actions={<Button onClick={() => setPreview(!preview)}>Preview</Button>}\n      className=\"border-0\"\n    >\n      {preview ? (\n        <div dangerouslySetInnerHTML={{ __html }} />\n      ) : (\n        <Form.Field {...{ label, text, className }} error={context.errors[name]}>\n          <Form.TextAreaX name={name} mirror={__html} />\n        </Form.Field>\n      )}\n    </Card>\n  );\n};\n\ninterface TShopSettingUpdateFormProps extends IFormUpdateProps {\n  fields: string[];\n  instance: TShopSettingInstance;\n}\n\nexport const ShopSettingUpdateForm = (props: TShopSettingUpdateFormProps) => {\n  const { children, instance, fields, ...rest } = props;\n  const { context } = props;\n\n  const hasField = (field: string) => fields.includes(field);\n  const { values, errors } = context;\n\n  return (\n    <Form\n      onSubmit={(e) => {\n        e.preventDefault();\n        instance\n          .updateConfig(values)\n          .then((r: any) => {})\n          .catch((e: any) => {});\n      }}\n      {...rest}\n    >\n      {children || (\n        <>\n          {hasField('has_suppliers') && (\n            <Form.Field checkbox label=\"Store has suppliers\" error={errors.has_suppliers}>\n              <Form.Checkbox name=\"has_suppliers\" className=\"me-1\" />\n            </Form.Field>\n          )}\n\n          {values.has_suppliers && (\n            <>\n              {hasField('show_active_suppliers') && (\n                <Form.Field checkbox label=\"Show active suppliers on homepage\" error={errors.show_active_suppliers}>\n                  <Form.Checkbox name=\"show_active_suppliers\" className=\"me-1\" />\n                </Form.Field>\n              )}\n\n              {hasField('show_product_supplier') && (\n                <Form.Field\n                  checkbox\n                  label=\"Show supplier on product detail page (if any)\"\n                  error={errors.show_product_supplier}\n                >\n                  <Form.Checkbox name=\"show_product_supplier\" className=\"me-1\" />\n                </Form.Field>\n              )}\n            </>\n          )}\n        </>\n      )}\n\n      <Form.Submit value=\"Save\" />\n    </Form>\n  );\n};\n","import * as React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { useForm } from '@miq/formjs';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { QueryButton } from '@miq/componentjs';\nimport { ShopSetting, TShopSettingConfig } from './utils';\nimport { ShopSettingPagesUpdateForm, ShopSettingUpdateForm } from './forms';\n\nexport default function ShopSettingUpdateView() {\n  const ctx = React.useContext(SharedDataCtx);\n  const [params] = useSearchParams();\n\n  const { res } = useRequest(() => ShopSetting({ slug: 'current' }).retrieve());\n  const { data }: any = res;\n\n  if (!data) return null;\n\n  // console.log(data);\n\n  const instance = ShopSetting(data);\n\n  switch (params.get('tab')) {\n    case 'pages':\n      return (\n        <View>\n          <div className=\"\">\n            <ShopSettingPagesUpdateForm instance={instance} fields={['returns', 'returns_html']} />\n          </div>\n        </View>\n      );\n\n    default:\n      return (\n        <View>\n          <ShopConfigUpdateForm config={data?.config} instance={instance} />\n        </View>\n      );\n  }\n}\n\nconst ShopConfigUpdateForm = ({\n  config,\n  instance,\n}: {\n  config: TShopSettingConfig;\n  instance: ReturnType<typeof ShopSetting>;\n}) => {\n  const form = useForm({\n    show_active_suppliers: config?.show_active_suppliers || false,\n    show_product_supplier: config?.show_product_supplier || false,\n    has_suppliers: config?.has_suppliers || false,\n  });\n\n  // console.log(config);\n\n  return (\n    <ShopSettingUpdateForm\n      context={form}\n      instance={instance}\n      fields={['has_suppliers', 'show_active_suppliers', 'show_product_supplier']}\n    ></ShopSettingUpdateForm>\n  );\n};\n\nconst View = ({ children, ...props }: any) => (\n  <Staff.View title=\"Shop Settings\" back=\"../\" {...props} requiredPerms={['store.change_shopsetting']}>\n    <Staff.Section\n      children={children}\n      header={\n        <div className=\"d-flex align-items-center border-bottom pb-2 mb-2\">\n          <QueryButton index target=\"tab\" className=\"me-1\">\n            Settings\n          </QueryButton>\n          <QueryButton target=\"tab\" value=\"pages\" className=\"me-1\">\n            Pages\n          </QueryButton>\n        </div>\n      }\n    />\n  </Staff.View>\n);\n"],"names":["ShopSettingService","values","this","update","config","data","StaffService","ShopSetting","StaffModel","ShopSettingPagesUpdateForm","props","field","instance","fields","context","useForm","returns","returns_html","size_guide","size_guide_html","ShopSettingUpdateForm","onSubmit","e","preventDefault","then","r","catch","includes","SettingPageField","name","label","React","preview","setPreview","text","className","__html","title","actions","onClick","dangerouslySetInnerHTML","error","errors","mirror","children","rest","hasField","updateConfig","checkbox","has_suppliers","show_active_suppliers","show_product_supplier","value","ShopSettingUpdateView","SharedDataCtx","useSearchParams","params","useRequest","slug","retrieve","res","get","View","ShopConfigUpdateForm","form","back","requiredPerms","header","index","target"],"sourceRoot":""}