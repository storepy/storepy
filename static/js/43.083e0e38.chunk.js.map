{"version":3,"file":"static/js/43.083e0e38.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-orderjs/src/cart/buttons.tsx","../../../../shopy/shopy-orderjs/src/cart/components.tsx","../../../../shopy/shopy-orderjs/src/cart/models.tsx","../../../../shopy/shopy-orderjs/src/cart/views.List.tsx"],"sourcesContent":["import { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { TCampaignInstance } from '@miq/staffjs';\nimport { getCN } from '@miq/utiljs';\n\nimport { TCartInstance } from './models';\nimport { TCart } from './types';\n\nexport const CartItemDeleteButton = ({\n  cartInstance,\n  itemSlug,\n  ...props\n}: {\n  itemSlug: string;\n  cartInstance: TCartInstance;\n  onSuccess?: (res?: any) => void;\n  onError?: (res?: any) => void;\n}) => {\n  if (!itemSlug) return null;\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer ce produit</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              cartInstance\n                .destroyItem(itemSlug)\n                .then((r) => {\n                  props?.onSuccess?.(r);\n                  // setOpen(false);\n                })\n                .catch((err) => {\n                  props?.onError?.(err);\n                })\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Voulez-vous supprimer ce produit</div>}\n      className={getCN(['cart-item-delete-button btn-danger-3'])}\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n\nexport const CartDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TCart>, 'context'> & { label?: string; instance: TCampaignInstance }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        onSuccess?.(res);\n        setOpen?.(false);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer ce panier</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['cart-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { truncateStr } from '@miq/utiljs';\nimport { ProductPriceDisplay, TProduct, TProductSize } from '@shopy/storejs';\n\nexport const ItemProductCard = ({ product, size }: { product: TProduct; size: TProductSize }) => (\n  <div className=\"d-flex align-items-center\">\n    <ProductImage {...{ product, width: 60, height: 60 }} />\n    <div className=\"flex-1 rounded p-1 \">\n      <div className=\"fw-bold\">{truncateStr(product?.name, 0, 25)}</div>\n      <ProductPriceDisplay {...product} inline />\n      {size && (\n        <div>\n          <span className=\"me-1\">Size:</span>\n          <span className=\"text-sm\">{size?.name}</span>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport const ProductImage = ({\n  product,\n  width,\n  height,\n  ...props\n}: {\n  product: TProduct;\n  width?: number | string;\n  height?: number | string;\n}) =>\n  product?.slug ? (\n    <div {...props} style={{ width: width, height: height }}>\n      <Staff.Img.Square slug=\"slug\" src=\"src\" {...product.cover_data} className=\"rounded\" />\n    </div>\n  ) : null;\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCart } from './types';\n\nconst timeout = 5000;\n\n/**\n * CART\n */\n\nclass CartService extends StaffService<TCart> {\n  addItems(sizeSlug: string) {\n    return this.post(`${this._path}items/`, { sizeSlug });\n  }\n\n  addItem(prodSlug: string, size: string, qty?: string) {\n    return this.post(`${this._path}item/${prodSlug}/`, { size, qty });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(itemSlug: string) {\n    return this.delete(`${this._path}item/${itemSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = (data: TCart = {}) => {\n  return StaffModel<TCart, CartService>(data, 'carts', CartService);\n};\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n\n// export const Cart = (data: any) => {\n//   getIsValid(data: Record<string, any>): boolean {\n//     return data && data.slug && data.products && Boolean(data.items.length);\n//   }\n\n//   getItem(meta_slug: string) {\n//     return;\n//     // return this.items?.find((i: any) => i.product.meta_slug === meta_slug);\n//   }\n\n//   postItem(prod_meta_slug: string, values: any) {\n//     // values may contain size and other info\n\n//     if (this.slug && values) values.cart_slug = this.slug;\n//     return this.postPath(`${this._endpoint}items/`, { ...values, prod_meta_slug });\n//   }\n\n//   patchItem(itemSlug: string, values: any) {\n//     return this.patchPath(`${this._path}/item/${itemSlug}/`, values);\n//   }\n//   deleteItem(itemSlug: string) {\n//     return this.deletePath(`${this._path}/item/${itemSlug}/`);\n//   }\n\n//   patchCustomer(values: any) {\n//     if (values && this?.customer?.slug) values.cust_slug = this.customer.slug;\n//     return this.patchPath(`${this._path}/customer/`, values);\n//   }\n//   postCustomer(values: any) {\n//     return this._s.post(`${this._path}/customer/`, values);\n//   }\n// }\n\n// //   const methods = {\n// //     getItem,\n// //     postItem,\n// //     patchItem,\n// //     deleteItem,\n// //     patchCustomer,\n// //     postCustomer,\n// //   };\n\n// //   return Object.assign({ isValid: getIsValid() }, CrudModel(data, 'api/carts/'), methods);\n// // };\n\n// export const Customer = (data: any) => {\n//   // return Object.assign({}, CrudModel(data, 'api/carts/'), methods);\n// };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Response, uuid } from '@miq/utiljs';\nimport { ProductPriceDisplay } from '@shopy/storejs';\nimport { Card, HorizontalScrollGridLayout, Loading } from '@miq/componentjs';\n\nimport { Cart } from './models';\nimport { TCart } from './types';\nimport { ProductImage } from './components';\nimport { CartDeleteButton } from './buttons';\n\nexport default function CartListView() {\n  const { res, loading, refresh, ...request } = useRequest(() => Cart().list());\n\n  if (loading) return <Loading />;\n\n  const r = new Response<TCart>(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View className=\"sales-index-view\">\n      {r.items?.map((i) => {\n        const { customer_data = {}, items = [] } = i || {};\n        const cart = Cart(i);\n\n        return (\n          <Card\n            // border\n            style={{ marginBottom: 12 }}\n            actions={<CartDeleteButton instance={cart} onSuccess={() => refresh()} />}\n            title={<div className=\"\">{`${customer_data?.first_name} ${customer_data?.last_name}`}</div>}\n            text={new Date(cart?.created).toLocaleDateString(undefined, {\n              day: '2-digit',\n              weekday: 'short',\n              month: 'short',\n              year: '2-digit',\n            })}\n            footer={\n              i.products.length > 0 && (\n                <div className=\"fw-bold\">\n                  <ProductPriceDisplay retail_price_data={i?.total || i?.subtotal} />\n                </div>\n              )\n            }\n            key={i.slug}\n            className=\"mb-1\"\n          >\n            <Link to={`cart/${i.slug}/`}>\n              <HorizontalScrollGridLayout className=\"cart-items-preview\" style={{ marginBottom: 0 }}>\n                {items.map((i) => {\n                  return (\n                    <div key={uuid()}>\n                      <ProductImage product={i.product} {...{ width: 48, height: 48 }} />\n                    </div>\n                  );\n                })}\n              </HorizontalScrollGridLayout>\n            </Link>\n          </Card>\n        );\n      })}\n    </Staff.View>\n  );\n}\n"],"names":["CartItemDeleteButton","cartInstance","itemSlug","props","renderHeader","renderFooter","setOpen","className","onClick","destroyItem","then","r","onSuccess","catch","err","onError","render","getCN","CartDeleteButton","instance","label","destroy","res","handleDelete","ItemProductCard","product","size","ProductImage","width","height","truncateStr","name","inline","slug","style","src","cover_data","CartService","sizeSlug","this","post","_path","prodSlug","qty","values","timeout","delete","StaffService","Cart","data","StaffModel","CartListView","useRequest","list","loading","refresh","Response","isSuccess","items","map","i","customer_data","cart","marginBottom","actions","title","first_name","last_name","text","Date","created","toLocaleDateString","undefined","day","weekday","month","year","footer","products","length","retail_price_data","total","subtotal","to","uuid"],"sourceRoot":""}