{"version":3,"file":"static/js/430.fb579a04.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Category/forms.tsx","../../../../shopy/shopy-storejs/src/Category/index.tsx","../../../../shopy/shopy-storejs/src/Category/models.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { isRequired as isR } from '@miq/utiljs';\nimport { FormProps, IFormCallbackProps, IFormUpdateProps } from '@miq/formjs';\nimport Form, { DescriptionField, NameField, TextFieldProps, useForm } from '@miq/formjs';\n\nimport { StaffCategory } from './models';\n\nexport const CategoryCreateForm: React.FC<IFormCallbackProps> = (props) => {\n  const form = useForm({ name: '' });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return StaffCategory()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => {\n        form.handleError(err);\n        props?.onError?.(err);\n      });\n  };\n  return (\n    <CategoryForm context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <CategoryForm.NameField error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value={'Save category'} className=\"btn btn-primary\" />\n      </div>\n    </CategoryForm>\n  );\n};\n\ninterface ICategoryUpdateFormProps extends Omit<IFormUpdateProps, 'instance'> {\n  instance: ReturnType<typeof StaffCategory>;\n  onWillSubmit?: () => void;\n  fields: string[];\n}\n\nexport const CategoryUpdateForm: React.FC<ICategoryUpdateFormProps> = ({\n  instance = isR('Category instance'),\n  fields = [],\n  children,\n  ...props\n}) => {\n  const { onSuccess, onError, onWillSubmit, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return (\n    <CategoryForm {...rest} onSubmit={handleSubmit}>\n      {fields.includes('name') && (\n        <CategoryForm.NameField\n          label=\"Nom de la catégorie\"\n          error={context?.errors?.name}\n          text={`Ajoutez un nom qui décrit cette catégorie.\\nNous recommandons 65 caractères au max.`}\n        />\n      )}\n\n      {fields.includes('description') && (\n        <CategoryForm.DescriptionField\n          label=\"Description\"\n          error={context?.errors?.description}\n          text={`Décrivez cet catégorie.`}\n        />\n      )}\n\n      {fields.includes('position') && (\n        <CategoryForm.PositionField\n          label=\"Position\"\n          error={context?.errors?.position}\n          // text={`Décrivez cet ca`}\n        />\n      )}\n      {children}\n    </CategoryForm>\n  );\n};\n\nexport const CategoryForm = (props: FormProps) => <Form {...props} />;\n\nCategoryForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez le nom de la catégorie ...\" {...props} required />\n);\n\nCategoryForm.DescriptionField = (props: TextFieldProps) => <DescriptionField {...props} />;\nCategoryForm.PositionField = ({ label, error, ...props }: TextFieldProps) => (\n  <Form.Field {...{ label, error }}>\n    <Form.Text name=\"position\" type=\"number\" min={0} {...props} />\n  </Form.Field>\n);\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useRequest } from '@miq/hookjs';\nimport { ViewSection, Icons } from '@miq/componentjs';\n\nimport { TCategory } from '../types';\nimport { PublishedIcon } from '../components';\n\nimport { StaffCategory } from './models';\nimport { CategoryCreateForm, CategoryUpdateForm } from './forms';\nimport Form, { useForm } from '@miq/formjs';\n\nexport default function CategoryStaffIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, updateItem } = useRequest(() => StaffCategory().list({ params: { page } }), {\n    refreshDeps: [page],\n  });\n\n  const [isAdding, setAdding] = React.useState(false);\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Catégories\"\n      back=\"/staff/store/\"\n      actions={\n        <Staff.Button\n          onClick={() => setAdding(!isAdding)}\n          className=\"btn-primary-3\"\n          title=\"Add a new category\"\n          requiredPerms={['store.add_category']}\n        >\n          Ajouter\n        </Staff.Button>\n      }\n      requiredPerms={['store.view_category']}\n    >\n      {isAdding && (\n        <div className=\"miq-container center\">\n          <Staff.Section title=\"Add a category\" requiredPerms={['store.add_category']} border>\n            <CategoryCreateForm onSuccess={({ data }: any) => navigate(data.slug)} />\n          </Staff.Section>\n        </div>\n      )}\n\n      {r.items.length === 0 && !isAdding && (\n        <div className=\"text-center p-staff-list-empty py-3 my-3\">\n          <p className=\"fw-light text-md\">Ajouter une catégorie pour commencer</p>\n\n          <div className=\"my-4\">\n            <Staff.Button\n              onClick={() => setAdding(!isAdding)}\n              requiredPerms={['store.add_category']}\n              className=\"btn btn-primary btn-md\"\n            >\n              Add a category\n            </Staff.Button>\n          </div>\n        </div>\n      )}\n\n      {r.items\n        .sort((a: TCategory, b: TCategory) => (a.position! > b.position! ? 1 : -1))\n        .map((item: TCategory) => (\n          <CategoryStaffListItem\n            item={item}\n            onUpdate={(r) => {\n              updateItem(r.data);\n            }}\n            key={item.slug}\n          />\n        ))}\n    </Staff.View>\n  );\n}\n\nfunction CategoryStaffListItem({ item, ...props }: { item: TCategory; onUpdate: (payload: any) => void }) {\n  const [open, setOpen] = React.useState(false);\n  const instance = StaffCategory(item);\n\n  const form = useForm({\n    name: instance?.name || '',\n    description: instance?.description || '',\n    position: instance?.position || 0,\n  });\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div onClick={() => setOpen(!open)} className=\"d-flex align-items-center\">\n          <div style={{ minWidth: 48, width: 48, height: 48 }}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1\">\n            <div className=\"text-ellipsis\">\n              <span className=\"me-1\">{form.values.name}</span>\n\n              <PublishedIcon show={instance.is_published} />\n            </div>\n\n            <div className=\"text-sm\">\n              <span>Total: {instance.products_count} </span>\n              <span>\n                ({instance.published_count}/<span className=\"text-muted\">{instance.draft_count}</span>)\n              </span>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div>\n          <Staff.Link\n            to={`${instance.slug}/`}\n            className=\"btn btn-square btn-primary-3\"\n            requiredPerms={['store.change_category']}\n          >\n            <Icons.Edit />\n          </Staff.Link>\n        </div>\n      }\n      className=\"mb-1\"\n    >\n      {open && (\n        <div className=\"\">\n          <CategoryUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'description', 'position']}\n            onSuccess={props.onUpdate}\n          >\n            <div className=\"d-flex justify-content-center\">\n              <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n            </div>\n          </CategoryUpdateForm>\n        </div>\n      )}\n    </ViewSection>\n  );\n}\n\nexport * from './models';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCategory } from '../types';\n\nclass StaffCategoryService extends StaffService<TCategory> {\n  publish() {\n    return this.update({ is_published: true });\n  }\n\n  unpublish() {\n    return this.update({ is_published: false });\n  }\n}\n\nexport const StaffCategory = (data: TCategory = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<TCategory, StaffCategoryService>({ ...data, dt_published }, 'categories', StaffCategoryService);\n};\n"],"names":["CategoryCreateForm","props","form","useForm","name","CategoryForm","context","onSubmit","e","preventDefault","StaffCategory","create","values","then","res","onSuccess","catch","err","handleError","onError","className","NameField","error","errors","value","CategoryUpdateForm","instance","isR","fields","children","onWillSubmit","rest","fd","forEach","field","update","includes","label","text","DescriptionField","description","PositionField","position","placeholder","required","type","min","CategoryStaffIndexView","navigate","useNavigate","useSearchParams","page","get","useRequest","list","params","refreshDeps","updateItem","React","isAdding","setAdding","r","Response","isSuccess","title","back","actions","onClick","requiredPerms","border","data","slug","items","length","sort","a","b","map","item","CategoryStaffListItem","onUpdate","open","setOpen","style","minWidth","width","height","src","cover_data","show","is_published","products_count","published_count","draft_count","to","StaffCategoryService","this","StaffService","dt_published","Date","StaffModel"],"sourceRoot":""}