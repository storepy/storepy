{"version":3,"file":"static/js/44.6db5e2fd.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Category/forms.tsx","../../../../shopy/shopy-storejs/src/Category/models.tsx","../../../../shopy/shopy-storejs/src/Category/views.Update.tsx","../../../../shopy/shopy-storejs/src/Product/Attribute/index.jsx","../../../../shopy/shopy-storejs/src/Product/views.UpdateTabs.tsx","../../../../shopy/shopy-storejs/src/Product/views.lang.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { isRequired as isR } from '@miq/utiljs';\nimport { FormProps, IFormCallbackProps, IFormUpdateProps } from '@miq/formjs';\nimport Form, { DescriptionField, NameField, TextFieldProps, useForm } from '@miq/formjs';\n\nimport { StaffCategory } from './models';\n\nexport const CategoryCreateForm: React.FC<IFormCallbackProps> = (props) => {\n  const form = useForm({ name: '' });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return StaffCategory()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => {\n        form.handleError(err);\n        props?.onError?.(err);\n      });\n  };\n  return (\n    <CategoryForm context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <CategoryForm.NameField error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value={'Save category'} className=\"btn btn-primary\" />\n      </div>\n    </CategoryForm>\n  );\n};\n\ninterface ICategoryUpdateFormProps extends Omit<IFormUpdateProps, 'instance'> {\n  instance: ReturnType<typeof StaffCategory>;\n  onWillSubmit?: () => void;\n  fields: string[];\n}\n\nexport const CategoryUpdateForm: React.FC<ICategoryUpdateFormProps> = ({\n  instance = isR('Category instance'),\n  fields = [],\n  children,\n  ...props\n}) => {\n  const { onSuccess, onError, onWillSubmit, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return (\n    <CategoryForm {...rest} onSubmit={handleSubmit}>\n      {fields.includes('name') && (\n        <CategoryForm.NameField\n          label=\"Nom de la catégorie\"\n          error={context?.errors?.name}\n          text={`Ajoutez un nom qui décrit cette catégorie.\\nNous recommandons 65 caractères au max.`}\n        />\n      )}\n\n      {fields.includes('description') && (\n        <CategoryForm.DescriptionField\n          label=\"Description\"\n          error={context?.errors?.description}\n          text={`Décrivez cet catégorie.`}\n        />\n      )}\n\n      {fields.includes('position') && (\n        <CategoryForm.PositionField\n          label=\"Position\"\n          error={context?.errors?.position}\n          // text={`Décrivez cet ca`}\n        />\n      )}\n      {children}\n    </CategoryForm>\n  );\n};\n\nexport const CategoryForm = (props: FormProps) => <Form {...props} />;\n\nCategoryForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez le nom de la catégorie ...\" {...props} required />\n);\n\nCategoryForm.DescriptionField = (props: TextFieldProps) => <DescriptionField {...props} />;\nCategoryForm.PositionField = ({ label, error, ...props }: TextFieldProps) => (\n  <Form.Field {...{ label, error }}>\n    <Form.Text name=\"position\" type=\"number\" min={0} {...props} />\n  </Form.Field>\n);\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCategory } from '../types';\n\nclass StaffCategoryService extends StaffService<TCategory> {\n  publish() {\n    return this.update({ is_published: true });\n  }\n\n  unpublish() {\n    return this.update({ is_published: false });\n  }\n}\n\nexport const StaffCategory = (data: TCategory = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<TCategory, StaffCategoryService>({ ...data, dt_published }, 'categories', StaffCategoryService);\n};\n","// import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport Form, { useForm, MetaTitleField, MetaSlugField, MetaDescriptionField } from '@miq/formjs';\nimport { Response } from '@miq/utiljs';\nimport { useRequest } from '@miq/hookjs';\nimport { Icons } from '@miq/componentjs';\n\nimport { PublishButton, UnPublishButton } from '../components';\nimport { getImageComponent } from '../Product/views.UpdateTabs';\nimport { StaffImgUpdateButton, StaffImgAddButton, StaffImgViewSelect, StaffImgDeleteButton } from '@miq/staffjs/';\nimport { StaffCategory } from './models';\nimport { CategoryUpdateForm } from './forms';\nimport { TCategory } from '../types';\n\nconst mapData2Values = (data: TCategory = {}): TCategory => {\n  return {\n    name: data.name || '',\n    description: data.description || '',\n    is_published: data.is_published || false,\n\n    meta_title: data.meta_title || '',\n    meta_slug: data?.meta_slug || '',\n    meta_description: data?.meta_description || '',\n  };\n};\n\nexport default function CategoryStaffUpdateView() {\n  const { catSlug } = useParams();\n  const form = useForm<TCategory>(mapData2Values());\n\n  const { res, updateData } = useRequest(() => StaffCategory({ slug: catSlug }).retrieve(), {\n    refreshDeps: [catSlug],\n    onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {},\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  let instance = StaffCategory(r.data);\n\n  const handleSuccess = ({ data }: any) => updateData(data);\n\n  const { errors } = form;\n\n  return (\n    <Staff.View\n      title=\"Modifier cette catégorie\"\n      back=\"../\"\n      requiredPerms={['store.change_category']}\n      className=\"cat-staff-update-view\"\n    >\n      <div className=\"d-grid grid-md-4\">\n        <div className=\"p-md-1\">\n          <div className=\"p-1\">\n            <CoverCard {...{ instance, updateData }} />\n          </div>\n        </div>\n\n        <div className=\"span-md-3 span-lg-2\">\n          <Staff.Section title=\"Details\">\n            <CategoryUpdateForm\n              context={form}\n              instance={instance}\n              fields={['name', 'description']}\n              onSuccess={handleSuccess}\n            >\n              <div className=\"d-flex justify-content-center\">\n                <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n              </div>\n            </CategoryUpdateForm>\n          </Staff.Section>\n\n          <Staff.Section title=\"SEO\">\n            <CategoryUpdateForm\n              context={form}\n              instance={instance}\n              fields={['meta_title', 'meta_description', 'meta_slug']}\n              onSuccess={handleSuccess}\n            >\n              <MetaTitleField error={errors.meta_title} />\n              <MetaSlugField error={errors.meta_slug} />\n              <MetaDescriptionField error={errors.meta_description} />\n\n              <div className=\"d-flex justify-content-center\">\n                <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n              </div>\n            </CategoryUpdateForm>\n          </Staff.Section>\n        </div>\n\n        <div className=\"span-lg-1\">\n          <div style={{ top: 0, position: 'sticky' }}>\n            {instance.is_published ? (\n              <UnPublishButton instance={instance} onSuccess={({ data }: any) => updateData(data)}>\n                Dépublier cette catégorie\n              </UnPublishButton>\n            ) : (\n              <PublishButton\n                instance={instance}\n                onSuccess={({ data }: any) => updateData(data)}\n                onError={(err: any) => form.handleError(err)}\n              >\n                Publier cette catégorie\n              </PublishButton>\n            )}\n          </div>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst CoverCard = (props: { instance: ReturnType<typeof StaffCategory>; updateData: (r: any) => void }) => {\n  const { updateData, instance } = props;\n  const form = useForm({ view: 'src' });\n\n  const img = Staff.Img(instance?.cover_data || {});\n\n  if (!img?.slug)\n    return (\n      <div className=\"d-flex align-items-center justify-content-center flex-column text-center border-1 rounded p-3\">\n        <StaffImgAddButton\n          onSuccess={({ data }: any) => {\n            instance\n              .update({ cover: data.slug })\n              .then(({ data }: any) => updateData(data))\n              .catch((err: any) => {});\n          }}\n          label=\"Ajouter une image\"\n          className=\"btn-primary-3 btn-md\"\n        />\n      </div>\n    );\n\n  const Image = getImageComponent(form.values.view);\n  return (\n    <Form context={form} className=\"p-cover-update-form\">\n      <Staff.Section\n        border\n        title={\n          <StaffImgDeleteButton\n            onSuccess={() => updateData({ cover_data: null, cover: null })}\n            instance={img}\n            className=\"btn-danger-3\"\n          >\n            <Icons.Trash />\n          </StaffImgDeleteButton>\n        }\n        actions={<StaffImgViewSelect required name=\"view\" />}\n        className=\"p-image-card\"\n      >\n        <StaffImgUpdateButton\n          instance={img}\n          field={form.values.view}\n          onSuccess={({ data }: any) => updateData({ cover: data.slug, cover_data: data })}\n        >\n          <Image {...img} />\n        </StaffImgUpdateButton>\n      </Staff.Section>\n    </Form>\n  );\n};\n","import * as React from 'react';\nimport Form, { useForm } from '@miq/formjs';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\n\nexport const AttributeUpdateForm = ({ data, productInstance, ...props }) => {\n  const form = useForm({ name: data.name || '', value: data.value || '' });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchAttribute(data.slug, form.values)\n          .then((res) => onSuccess?.(res))\n          .catch((err) => {\n            form.handleError(err);\n            return onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-md-6 gap-1\">\n        <div className=\"span-md-2\">\n          <AttrNameField error={form.errors.name} />\n        </div>\n\n        <div className=\"span-md-3\">\n          <AttrValueField error={form.errors.value} className=\"\" />\n        </div>\n\n        <div className=\"span-md-1\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <AttributeDeleteButton {...{ productInstance, data, onSuccess, onError }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst formDefaultValues = { name: '', value: '' };\nexport const AttributeCreateForm = ({ productInstance, ...props }) => {\n  const form = useForm(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postAttribute(form.values)\n          .then((res) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-md-6 gap-1\">\n        <div className=\"span-md-2\">\n          <AttrNameField error={form.errors.name} />\n        </div>\n\n        <div className=\"span-md-3\">\n          <AttrValueField error={form.errors.value} className=\"\" />\n        </div>\n\n        <div className=\"span-md-1\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst AttrNameField = (props) => {\n  const { label, text, error, placeholder = `Entrez le nom de l'attribut ...`, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text {...rest} required name=\"name\" placeholder={placeholder} maxLength={30} minLength={2} />\n    </Form.Field>\n  );\n};\nconst AttrValueField = (props) => {\n  const { label, text, error, placeholder = `Entrez la valuer de l'attribut ...`, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text {...rest} required name=\"value\" placeholder={placeholder} maxLength={99} minLength={2} />\n    </Form.Field>\n  );\n};\n\nconst AttributeDeleteButton = ({ data, productInstance, ...props }) => {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer un attribut</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteAttribute(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onError?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this attribute:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"attr-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\n\nimport lang from './views.lang';\nimport formLang from './forms/lang';\n\nimport Staff, {\n  StaffImg,\n  StaffImgAddButton,\n  StaffImgDeleteButton,\n  StaffImgUpdateButton,\n  StaffImgViewSelect,\n} from '@miq/staffjs';\nimport { TLang } from '@miq/utiljs';\nimport { Button, Icons, TImg } from '@miq/componentjs';\nimport Form, { MetaDescriptionField, MetaSlugField, MetaTitleField, useForm } from '@miq/formjs';\n\nimport { CategoryChoicesType } from '../types';\n\nimport { StaffProduct } from './models';\nimport { SizeAddForm, SizeUpdateForm } from './Size';\nimport { ProductForm, ProductUpdateForm } from './forms';\nimport { AttributeCreateForm, AttributeUpdateForm } from './Attribute';\nimport { ProductDeleteButton, ProductImagesAddButton } from './buttons';\n\nconst i18n = (k: keyof TLang) => window.i18n(lang, k);\n\nexport type ProductUpdateTabProps = {\n  form: ReturnType<typeof useForm>;\n  instance: ReturnType<typeof StaffProduct>;\n  onUpdate: (data: any) => void;\n  categories: CategoryChoicesType;\n};\n\nexport const ProductUpdateInfoTab = (props: ProductUpdateTabProps) => {\n  const { form, instance, categories, onUpdate } = props;\n  const { errors } = form;\n  const PFormFields = (\n    <>\n      <ProductForm.NameField\n        error={errors.name}\n        label={window.i18n(formLang, 'NField.label')}\n        text={window.i18n(formLang, 'NField.text')}\n      />\n\n      <div className=\"d-grid grid-md-2 gap-1\">\n        <ProductForm.CategoryField\n          error={errors.category}\n          categories={categories}\n          label={window.i18n(formLang, 'CatField.label')}\n        />\n        <ProductForm.RetailPriceField label={window.i18n(formLang, 'RetailPField.label')} error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField\n        error={errors.is_pre_sale}\n        label={window.i18n(formLang, 'PresaleField.label')}\n      />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField\n          text={window.i18n(formLang, 'PresaleTextField.text')}\n          error={errors.is_pre_sale_text}\n        />\n      )}\n\n      <ProductForm.OnSaleCheckboxField error={errors.is_on_sale} label={window.i18n(formLang, 'OnsaleField.label')} />\n      {form.values.is_on_sale && (\n        <ProductForm.SalePriceField label={window.i18n(formLang, 'SalePField.label')} error={errors.sale_price} />\n      )}\n\n      <ProductForm.DescriptionField\n        error={errors.description}\n        label={window.i18n(formLang, 'DField.label')}\n        text={window.i18n(formLang, 'DField.text')}\n      />\n\n      <div className=\"my-4\">\n        <ProductForm.OosCheckboxField error={errors.is_oos} />\n      </div>\n\n      <div className=\"my-4\">\n        <ProductForm.IsExplicitCheckboxField error={errors.is_explicit} />\n      </div>\n    </>\n  );\n\n  return (\n    <Staff.Section>\n      <ProductUpdateForm\n        context={form}\n        {...{\n          instance,\n          fields: [\n            'name',\n            'category',\n            'description',\n            'retail_price',\n            'is_pre_sale',\n            'is_pre_sale_text',\n            'is_pre_sale_dt',\n            'is_on_sale',\n            'sale_price',\n            'is_oos',\n            'is_explicit',\n          ],\n          onSuccess: ({ data }) => onUpdate(data),\n        }}\n      >\n        <Staff.Section\n          // border\n          title={i18n('InfoTab.title')}\n          text={i18n('InfoTab.text')}\n          footer={\n            <div className=\"d-flex justify-content-center\">\n              <Form.Submit value={i18n('Btn.saveLabel')} className=\"btn-primary min-w-25 fw-bold\" />\n            </div>\n          }\n        >\n          {PFormFields}\n        </Staff.Section>\n      </ProductUpdateForm>\n\n      <Staff.Section border title={i18n('SeoTab.title')}>\n        <ProductUpdateForm\n          context={form}\n          {...{\n            instance,\n            fields: ['meta_title', 'meta_description', 'meta_slug'],\n            onSuccess: ({ data }) => onUpdate(data),\n          }}\n        >\n          <MetaTitleField error={errors.meta_title} />\n          <MetaSlugField error={errors.meta_slug} />\n          <MetaDescriptionField error={errors.meta_description} />\n\n          <div className=\"d-flex justify-content-center\">\n            <Form.Submit value={i18n('Btn.saveLabel')} className=\"btn-primary-3 min-w-25 fw-bold\" />\n          </div>\n        </ProductUpdateForm>\n      </Staff.Section>\n    </Staff.Section>\n  );\n};\n\nexport const ProductUpdateInventoryTab = (props: any) => {\n  const { instance, onUpdate } = props;\n  const [addAtr, setAddAtr] = React.useState(false);\n  const [addSize, setAddSize] = React.useState(false);\n\n  return (\n    <Staff.Section title={i18n('InventoryTab.title')}>\n      <div className=\"d-grid grid-md-3 gap-1\">\n        <div className=\"span-md-2\">\n          <Staff.Section\n            title=\"Tailles\"\n            text=\"Ajouter des tailles\"\n            actions={\n              <Button onClick={() => setAddSize(!addSize)} className=\"btn-primary-3\">\n                Ajouter une taille\n              </Button>\n            }\n          >\n            {addSize && (\n              <Staff.Section text=\"Ajouter une taille\">\n                <SizeAddForm productInstance={instance} onSuccess={({ data }: any) => onUpdate(data)} />\n              </Staff.Section>\n            )}\n\n            {instance.sizes.map((size: any) => {\n              return (\n                <SizeUpdateForm\n                  data={size}\n                  productInstance={instance}\n                  onSuccess={({ data }: any) => onUpdate(data)}\n                  key={size.slug}\n                />\n              );\n            })}\n          </Staff.Section>\n\n          <Staff.Section\n            title=\"Attributs\"\n            actions={\n              <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n                Ajouter un attribut\n              </Button>\n            }\n          >\n            {addAtr && (\n              <Staff.Section text=\"Ajouter un attribut au produit.\">\n                <AttributeCreateForm productInstance={instance} onSuccess={({ data }: any) => onUpdate(data)} />\n              </Staff.Section>\n            )}\n\n            {instance.attributes.map((attr: any) => (\n              <div className=\"mb-1\" key={attr.slug}>\n                <AttributeUpdateForm\n                  data={attr}\n                  productInstance={instance}\n                  onSuccess={({ data }: any) => onUpdate(data)}\n                />\n              </div>\n            ))}\n          </Staff.Section>\n        </div>\n      </div>\n    </Staff.Section>\n  );\n};\n\nexport const ProductUpdateSettingsTab = (props: any) => {\n  const { instance, listRes, navigate } = props;\n\n  return (\n    <Staff.Section title={i18n('SettingsTab.title')}>\n      <Staff.Section\n        title={i18n('SettingsTab.deleteSectionTitle')}\n        actions={\n          <ProductDeleteButton\n            {...{ instance }}\n            onSuccess={() => {\n              listRes.refresh();\n              return navigate(props.back);\n            }}\n            onError={(res) => {\n              if (res.status === 404) navigate('../');\n            }}\n          />\n        }\n      />\n    </Staff.Section>\n  );\n};\n\nexport const ProductUpdateMediaTab = (props: any) => {\n  const { instance, onUpdate } = props;\n  const { cover_data } = instance;\n  return (\n    <Staff.Section\n      title={i18n('MediaTab.title')}\n      actions={<ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />}\n    >\n      <div className=\"d-grid grid-md-3 grid-lg-4 gap-2\">\n        <CoverCard\n          {...props}\n          img={StaffImg(cover_data)}\n          onDeleteSuccess={() => onUpdate({ cover_data: null, cover: null })}\n        />\n\n        {instance.images_data.map((image: TImg) => {\n          const img = StaffImg(image);\n          const swapCover = () => instance.swapCover(img.slug).then(({ data }: any) => onUpdate(data));\n          return (\n            <ImageCard\n              {...props}\n              img={img}\n              actions={<Staff.Button onClick={swapCover}>Set as cover</Staff.Button>}\n              onDeleteSuccess={() =>\n                onUpdate({\n                  images_data: instance.images_data.filter((i: any) => i.slug !== img.slug),\n                  images: instance.images.filter((i: any) => i !== img.slug),\n                })\n              }\n              key={img.slug}\n            />\n          );\n        })}\n      </div>\n    </Staff.Section>\n  );\n};\n\nexport const getImageComponent = (view: string) => {\n  switch (view) {\n    case 'mobile':\n      return StaffImg.Mobile;\n    case 'square':\n      return StaffImg.Square;\n    case 'thumb':\n      return StaffImg.Thumb;\n    case 'picture':\n      return StaffImg.Picture;\n    default:\n      return StaffImg.Image;\n  }\n};\n\nconst CoverCard = (props: any) => {\n  const { img, onUpdate, instance } = props;\n  const form = useForm({ view: 'src' });\n\n  if (!img.slug)\n    return (\n      <div className=\"p-cover-add-btn d-flex align-items-center justify-content-center flex-column text-center border-1 rounded p-3\">\n        <p className=\"text-sm text-muted mb-3\">Ce produit n'a pas d'image principale</p>\n        <StaffImgAddButton\n          onSuccess={({ data }: any) => {\n            instance\n              .update({ cover: data.slug })\n              .then(({ data }: any) => onUpdate(data))\n              .catch((err: any) => {});\n          }}\n          label=\"Ajouter une image\"\n          className=\"btn-primary-3 btn-md\"\n        />\n      </div>\n    );\n\n  const Image = getImageComponent(form.values.view);\n  return (\n    <Form context={form} className=\"p-cover-update-form\">\n      <Staff.Section\n        border\n        title={<ImgDeleteButton {...props} img={img} />}\n        actions={<StaffImgViewSelect required name=\"view\" />}\n        className=\"p-image-card\"\n      >\n        <StaffImgUpdateButton\n          instance={img}\n          field={form.values.view}\n          onSuccess={({ data }: any) => onUpdate({ cover: data.slug, cover_data: data })}\n        >\n          <Image {...img} />\n        </StaffImgUpdateButton>\n      </Staff.Section>\n    </Form>\n  );\n};\n\nconst ImageCard = ({ img, actions, ...props }: any) => {\n  return (\n    <Staff.Section border title={<ImgDeleteButton {...props} img={img} />} actions={actions} className=\"p-image-card\">\n      <StaffImg.Image {...img} />\n    </Staff.Section>\n  );\n};\n\nconst ImgDeleteButton = ({ img, onDeleteSuccess }: any) =>\n  img && img.slug ? (\n    <StaffImgDeleteButton onSuccess={onDeleteSuccess} instance={img} className=\"btn-danger-3\">\n      <Icons.Trash />\n    </StaffImgDeleteButton>\n  ) : null;\n","import { TLang } from '@miq/utiljs';\n\nexport default {\n  //\n  'InfoTab.title': { fr: 'Détails', en: 'Details' },\n  'InfoTab.text': { fr: 'Modifier les informations de ce produit', en: \"Update product's info\" },\n\n  //\n  'SeoTab.title': { fr: 'Seo', en: 'Seo' },\n\n  //\n  'InventoryTab.title': { fr: 'Inventaire', en: 'Inventory' },\n\n  //\n  'MediaTab.title': { fr: 'Média', en: 'Media' },\n\n  //\n  'SettingsTab.title': { fr: 'Paramètres', en: 'Settings' },\n  'SettingsTab.deleteSectionTitle': { fr: 'Supprimer ce produit', en: 'Delete product' },\n\n  //\n  'CreateView.title': { fr: 'Ajouter un produit', en: 'Add product' },\n\n  //\n  'IndexRoute.title': { fr: 'Produits', en: 'Products' },\n  'IndexRoute.actionLinkLabel': { fr: 'Ajouter', en: 'Add product' },\n  'IndexRoute.noItemText': { fr: 'Ajouter un produit pour commencer', en: 'Add products to your shop to get started' },\n  'IndexRoute.addProductLinkLabel': { fr: 'Ajouter un produit', en: 'Add a new product' },\n  //\n\n  'Btn.saveLabel': { fr: 'Sauvegarder', en: 'Save' },\n\n  //\n} as TLang;\n"],"names":["CategoryCreateForm","props","form","useForm","name","CategoryForm","context","onSubmit","e","preventDefault","StaffCategory","create","values","then","res","onSuccess","catch","err","handleError","onError","className","NameField","error","errors","value","CategoryUpdateForm","instance","isR","fields","children","onWillSubmit","rest","fd","forEach","field","update","includes","label","text","DescriptionField","description","PositionField","position","placeholder","required","type","min","StaffCategoryService","this","is_published","StaffService","data","dt_published","Date","StaffModel","mapData2Values","meta_title","meta_slug","meta_description","CategoryStaffUpdateView","catSlug","useParams","useRequest","slug","retrieve","refreshDeps","setValues","response","updateData","r","Response","isSuccess","handleSuccess","title","back","requiredPerms","CoverCard","style","top","view","img","Staff","cover_data","cover","Image","getImageComponent","border","actions","AttributeUpdateForm","productInstance","patchAttribute","AttrNameField","AttrValueField","AttributeDeleteButton","formDefaultValues","AttributeCreateForm","postAttribute","maxLength","minLength","renderHeader","renderFooter","setOpen","onClick","deleteAttribute","render","i18n","k","window","lang","ProductUpdateInfoTab","categories","onUpdate","PFormFields","formLang","category","retail_price","is_pre_sale","is_pre_sale_text","is_on_sale","sale_price","is_oos","is_explicit","footer","ProductUpdateInventoryTab","React","addAtr","setAddAtr","addSize","setAddSize","Size","sizes","map","size","attributes","attr","ProductUpdateSettingsTab","listRes","navigate","refresh","status","ProductUpdateMediaTab","StaffImg","onDeleteSuccess","images_data","image","ImageCard","swapCover","filter","i","images","key","ImgDeleteButton","fr","en"],"sourceRoot":""}