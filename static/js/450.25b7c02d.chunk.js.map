{"version":3,"file":"static/js/450.25b7c02d.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/product/views.Update/tabs.InfoUpdate.tsx","../../../../shopy/shopy-storejs/src/product/views.Update/views.Update.tsx","../../../../shopy/shopy-storejs/src/product/views.lang.ts"],"sourcesContent":["import * as React from 'react';\n\nimport lang from '../views.lang';\nimport formLang from '../forms/lang';\n\nimport Staff from '@miq/staffjs';\nimport Form, { MetaDescriptionField, MetaSlugField, MetaTitleField, useForm } from '@miq/formjs';\n\nimport { CategoryChoicesType } from '../../types';\nimport { ProductForm, ProductUpdateForm } from '../forms';\n\nimport { TProductUpdateTabProps } from './utils';\n\nconst { i18n } = window;\n\ntype TProps = TProductUpdateTabProps<{ categories: CategoryChoicesType; form: ReturnType<typeof useForm> }>;\n\nexport default function ProductUpdateInfoTab(props: TProps) {\n  const { form, instance, onUpdate } = props;\n  const { errors } = form;\n\n  return (\n    <>\n      <div className=\"border-bottom mb-4\">\n        <ProductInfoUpdateForm {...props} />\n      </div>\n\n      <Staff.Section title={i18n(lang, 'SeoTab.title')}>\n        <ProductUpdateForm\n          context={form}\n          {...{\n            instance,\n            fields: ['meta_title', 'meta_description', 'meta_slug'],\n            onSuccess: ({ data }) => onUpdate(data),\n          }}\n        >\n          <MetaTitleField error={errors.meta_title} />\n          <MetaSlugField error={errors.meta_slug} />\n          <MetaDescriptionField error={errors.meta_description} />\n\n          <div className=\"d-flex justify-content-center\">\n            <Form.Submit value={i18n(lang, 'Btn.saveLabel')} className=\"btn-primary-3 btn-md min-w-25 fw-bold\" />\n          </div>\n        </ProductUpdateForm>\n      </Staff.Section>\n    </>\n  );\n}\n\nconst fields = [\n  'name',\n  'category',\n  'description',\n  'retail_price',\n  'is_pre_sale',\n  'is_pre_sale_text',\n  'is_pre_sale_dt',\n  'is_on_sale',\n  'sale_price',\n  'is_oos',\n  'is_explicit',\n];\n\nconst ProductInfoUpdateForm = (props: TProps) => {\n  const { form, instance, categories, onUpdate } = props;\n  const { errors } = form;\n  const sectionProps = { title: i18n(lang, 'InfoTab.title'), text: i18n(lang, 'InfoTab.text') };\n\n  return (\n    <ProductUpdateForm context={form} {...{ instance, fields, onSuccess: ({ data }) => onUpdate(data) }}>\n      <Staff.Section\n        {...sectionProps}\n        footer={\n          <div className=\"d-flex justify-content-center\">\n            <Form.Submit value={i18n(lang, 'Btn.saveLabel')} className=\"btn-md btn-primary min-w-25 fw-bold\" />\n          </div>\n        }\n      >\n        <ProductForm.NameField\n          error={errors.name}\n          label={window.i18n(formLang, 'NField.label')}\n          text={window.i18n(formLang, 'NField.text')}\n        />\n\n        <div className=\"d-grid grid-md-2 gap-1\">\n          <ProductForm.CategoryField\n            error={errors.category}\n            categories={categories}\n            label={window.i18n(formLang, 'CatField.label')}\n          />\n          <ProductForm.RetailPriceField\n            label={window.i18n(formLang, 'RetailPField.label')}\n            error={errors.retail_price}\n          />\n        </div>\n\n        <ProductForm.PresaleCheckboxField\n          error={errors.is_pre_sale}\n          label={window.i18n(formLang, 'PresaleField.label')}\n        />\n        {form.values.is_pre_sale && (\n          <ProductForm.PresaleTextField\n            text={window.i18n(formLang, 'PresaleTextField.text')}\n            error={errors.is_pre_sale_text}\n          />\n        )}\n\n        <ProductForm.OnSaleCheckboxField error={errors.is_on_sale} label={window.i18n(formLang, 'OnsaleField.label')} />\n        {form.values.is_on_sale && (\n          <ProductForm.SalePriceField label={window.i18n(formLang, 'SalePField.label')} error={errors.sale_price} />\n        )}\n\n        <ProductForm.DescriptionField\n          error={errors.description}\n          label={window.i18n(formLang, 'DField.label')}\n          text={window.i18n(formLang, 'DField.text')}\n        />\n\n        <div className=\"my-4\">\n          <ProductForm.OosCheckboxField error={errors.is_oos} />\n        </div>\n\n        <div className=\"my-4\">\n          <ProductForm.IsExplicitCheckboxField error={errors.is_explicit} />\n        </div>\n      </Staff.Section>\n    </ProductUpdateForm>\n  );\n};\n","import * as React from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\n\nimport './views.update.scss';\nimport lang from '../views.lang';\n\nimport Staff from '@miq/staffjs';\nimport { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Loading, QueryTabs } from '@miq/componentjs';\nimport { addForwardSlash, Response, TLang } from '@miq/utiljs';\n\nimport { emitter } from '../../events';\nimport { StaffProduct } from '../models';\nimport { PublishButton, UnPublishButton } from '../../components';\n\nimport { ProductCardItem } from '../components';\n\nimport ProductUpdateInfoTab from './tabs.InfoUpdate';\n\nconst ProductUpdateMediaTab = React.lazy(() => import('./tabs.MediaUpdate'));\nconst ProductUpdateSettingsTab = React.lazy(() => import('./tabs.SettingsUpdate'));\nconst ProductUpdateInventoryTab = React.lazy(() => import('./tabs.InventoryUpdate'));\n\nconst i18n = (k: keyof TLang) => window.i18n(lang, k);\n\n//#region FIELDS\n\nconst formInfoFields = [\n  'name',\n  'category',\n  'description',\n  'retail_price',\n  'is_pre_sale',\n  'is_pre_sale_text',\n  'is_pre_sale_dt',\n  'is_oos',\n  'is_on_sale',\n  'sale_price',\n  'is_explicit',\n];\nconst configFormFields = ['cost', 'color_group_pk', 'stage'];\nconst supplierFormFields = [\n  'supplier_name',\n  'supplier_item_id',\n  'supplier_item_sn',\n  'supplier_item_category',\n  'supplier_item_url',\n  'supplier_item_cost',\n  'supplier_item_cost_currency',\n  'supplier_order_id',\n];\nconst seoFields = ['meta_title', 'meta_description', 'meta_slug'];\nconst formFields = [...formInfoFields, ...configFormFields, ...supplierFormFields, ...seoFields];\nconst formDefaultValues: any = {\n  retail_price: 0.0,\n  is_pre_sale: false,\n  sale_price: 0.0,\n  is_on_sale: false,\n  is_published: false,\n};\nconst mapData2Values = (data: any = {}) => {\n  const values: any = {};\n  formFields.forEach((f) => {\n    const value = data?.[f];\n    if (value == null) {\n      values[f] = formDefaultValues[f] ?? '';\n      return;\n    }\n    values[f] = value;\n  });\n  return { ...formDefaultValues, ...values };\n};\n\n//#endregion FIELDS\n\n//#region ProductStaffUpdateView\n\nexport default function ProductStaffUpdateView(props: any) {\n  let { back } = props;\n  const { prodSlug } = useParams();\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n\n  const form = useForm(mapData2Values());\n  const { res, setRes, loading, ...request } = useRequest(() => StaffProduct({ slug: prodSlug }).retrieve(), {\n    refreshDeps: [prodSlug],\n    onSuccess: ({ data }) => {\n      document.title = `${data?.name} - Update product`;\n      form.setValues(mapData2Values(data));\n    },\n    onError: ({ response }) => {\n      if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const instance = StaffProduct(r.data);\n\n  const updateData = (d: any) => {\n    request.updateData(d);\n    emitter.update(d);\n  };\n\n  return (\n    <Staff.View\n      className=\"product-staff-update-view\"\n      requiredPerms={['store.change_product']}\n      title={<ProductCardItem data={{ ...instance.export() }} />}\n      back={`${addForwardSlash(back)}${`${params}` ? `?${params}` : ''}`}\n      actions={\n        instance.is_published ? (\n          <UnPublishButton instance={instance} onSuccess={({ data }) => updateData(data)}>\n            Dépublier\n          </UnPublishButton>\n        ) : (\n          <PublishButton\n            instance={instance}\n            onSuccess={({ data }) => updateData(data)}\n            onFailure={(err) => form.handleError(err)}\n          >\n            Publier\n          </PublishButton>\n        )\n      }\n    >\n      <Staff.Section title={<div className=\"mb-1\">{QButtons}</div>}>\n        <QueryTabs>\n          <QueryTabs.Tab index>\n            <ProductUpdateInfoTab {...{ form, instance }} categories={r?.data?.categories} onUpdate={updateData} />\n          </QueryTabs.Tab>\n\n          <QueryTabs.Tab value=\"media\">\n            <ProductUpdateMediaTab {...{ instance }} onUpdate={updateData} />\n          </QueryTabs.Tab>\n\n          <QueryTabs.Tab value=\"inventory\">\n            <ProductUpdateInventoryTab {...{ instance }} onUpdate={updateData} />\n          </QueryTabs.Tab>\n\n          <QueryTabs.Tab value=\"settings\">\n            <ProductUpdateSettingsTab {...{ instance }} onUpdate={updateData} to={back} />\n          </QueryTabs.Tab>\n        </QueryTabs>\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\n//#endregion ProductStaffUpdateView\n\nconst QButtons = (\n  <div className=\"query-buttons\">\n    <QueryTabs.Button index target=\"__tab\" className=\"btn-md\">\n      Info\n    </QueryTabs.Button>\n    <QueryTabs.Button target=\"__tab\" value=\"media\" className=\"btn-md\">\n      {i18n('MediaTab.title')}\n    </QueryTabs.Button>\n    <QueryTabs.Button target=\"__tab\" value=\"inventory\" className=\"btn-md\">\n      {i18n('InventoryTab.title')}\n    </QueryTabs.Button>\n    <QueryTabs.Button target=\"__tab\" value=\"settings\" className=\"btn-md\">\n      {i18n('SettingsTab.title')}\n    </QueryTabs.Button>\n  </div>\n);\n","import { TLang } from '@miq/utiljs';\n\nexport default {\n  //\n  'InfoTab.title': { fr: 'Détails', en: 'Details' },\n  'InfoTab.text': { fr: 'Modifier les informations de ce produit', en: \"Update product's info\" },\n\n  //\n  'SeoTab.title': { fr: 'Seo', en: 'Seo' },\n\n  //\n  'InventoryTab.title': { fr: 'Inventaire', en: 'Inventory' },\n\n  //\n  'MediaTab.title': { fr: 'Média', en: 'Media' },\n\n  //\n  'SettingsTab.title': { fr: 'Paramètres', en: 'Settings' },\n  'SettingsTab.deleteSectionTitle': { fr: 'Supprimer ce produit', en: 'Delete product' },\n\n  //\n  'CreateView.title': { fr: 'Ajouter un produit', en: 'Add product' },\n\n  //\n  'ListView.title': { fr: 'Produits', en: 'Products' },\n  'ListView.actionLinkLabel': { fr: 'Ajouter', en: 'Add product' },\n  'ListView.noItemText': { fr: 'Ajouter un produit pour commencer', en: 'Add products to your shop to get started' },\n  'ListView.addProductLinkLabel': { fr: 'Ajouter un produit', en: 'Add a new product' },\n  //\n\n  'Btn.saveLabel': { fr: 'Sauvegarder', en: 'Save' },\n\n  //\n} as TLang;\n"],"names":["i18n","window","ProductUpdateInfoTab","props","form","instance","onUpdate","errors","className","ProductInfoUpdateForm","title","lang","context","fields","onSuccess","data","error","meta_title","meta_slug","meta_description","value","categories","sectionProps","text","footer","name","label","formLang","category","retail_price","is_pre_sale","values","is_pre_sale_text","is_on_sale","sale_price","description","is_oos","is_explicit","ProductUpdateMediaTab","React","ProductUpdateSettingsTab","ProductUpdateInventoryTab","k","formFields","formDefaultValues","is_published","mapData2Values","forEach","f","ProductStaffUpdateView","back","prodSlug","useParams","useSearchParams","params","navigate","useNavigate","useForm","useRequest","StaffProduct","slug","retrieve","refreshDeps","document","setValues","onError","response","status","res","loading","setRes","request","r","Response","isSuccess","updateData","d","emitter","requiredPerms","export","addForwardSlash","actions","onFailure","err","handleError","QButtons","index","to","target","fr","en"],"sourceRoot":""}