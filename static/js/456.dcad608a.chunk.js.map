{"version":3,"file":"static/js/456.dcad608a.chunk.js","mappings":"oSAce,SAASA,KACtBC,EAAAA,EAAAA,IAAiB,4BACIC,EAAAA,EAAAA,MAAbC,SAAR,IAEA,EAA0BC,EAAAA,UAAe,GAAzC,eAAOC,EAAP,KAAeC,EAAf,KACA,EAIIF,EAAAA,WAAyDG,EAAAA,IAJ7D,IACEC,cAAAA,OADF,MACkB,CAAC,EADnB,EAEEC,EAFF,EAEEA,SACAC,EAHF,EAGEA,UAGF,IAAKD,EAAU,OAAO,SAAC,KAAD,IAEtB,IAAME,GAAOC,EAAAA,EAAAA,GAASJ,GAEtB,OACE,SAAC,UAAD,CACEK,OAAO,SAAC,IAAD,CAAcC,KAAMN,IAC3BO,SAAS,gBACTC,SACE,SAAC,YAAD,CAAcC,QAAS,kBAAMX,GAASD,EAAf,EAAwBQ,MAAM,WAAWK,UAAU,gBAA1E,oBAIFC,KAAK,0BARP,SAUGd,GACC,SAAC,IAAD,CACEe,SAAUT,EACVU,OAAQ,CAAC,aAAc,YAAa,QAAS,SAC7CC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,EAAGC,EAAW,EAAXA,KACdD,EAAEE,iBACFC,QAAQC,IAAIH,EAAKI,QACjBjB,EACGkB,OAAOL,EAAKI,QACZE,MAAK,SAACC,GACLL,QAAQC,IAAII,GACZrB,EAAU,gBAAiBqB,EAAIjB,MAC/BR,GAAQ,EACT,IACA0B,OAAM,SAACC,GACNT,EAAKU,YAAYD,EAClB,GACJ,EAhBH,UAkBE,gBAAKf,UAAU,qEAAf,UACE,SAAC,YAAD,CAAaiB,KAAK,SAASjB,UAAU,uBAArC,wBAMJ,IAIP,C","sources":["../../../../shopy/shopy-salejs/src/customer/views.Update.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loading } from '@miq/componentjs';\nimport Staff from '@miq/staffjs';\nimport { useDocumentTitle, useRequest, Response } from '@miq/hookjs';\n// import Form, { useForm } from '@miq/formjs';\n\nimport { Customer, TCustomer } from './utils';\nimport { CustomerCard } from './components';\nimport { SharedDataCtx, TSDState } from '@miq/contextjs';\nimport { CustomerForm } from './forms';\nimport Form from '@miq/formjs';\n\nexport default function CustomerUpdateView() {\n  useDocumentTitle('Update customer - Sales');\n  const { custSlug } = useParams();\n\n  const [isEdit, setEdit] = React.useState(false);\n  const {\n    customer_data = {},\n    isLoaded,\n    updateKey,\n  } = React.useContext<TSDState<{ customer_data: TCustomer }>>(SharedDataCtx);\n\n  if (!isLoaded) return <Loading />;\n\n  const inst = Customer(customer_data);\n\n  return (\n    <Staff.View\n      title={<CustomerCard data={customer_data} />}\n      headerCN=\"miq-container\"\n      actions={\n        <Staff.Button onClick={() => setEdit(!isEdit)} title=\"Modifier\" className=\"btn-primary-3\">\n          [Edit]\n        </Staff.Button>\n      }\n      back=\"/staff/sales/customers/\"\n    >\n      {isEdit ? (\n        <CustomerForm\n          instance={inst}\n          fields={['first_name', 'last_name', 'phone', 'email']}\n          onSubmit={({ e, form }) => {\n            e.preventDefault();\n            console.log(form.values);\n            inst\n              .update(form.values)\n              .then((res) => {\n                console.log(res);\n                updateKey('customer_data', res.data);\n                setEdit(false);\n              })\n              .catch((err) => {\n                form.handleError(err);\n              });\n          }}\n        >\n          <div className=\"d-flex flex-column justify-content-between align-items-center my-4\">\n            <Form.Submit type=\"submit\" className=\"btn-md btn-primary-3\">\n              Update\n            </Form.Submit>\n          </div>\n        </CustomerForm>\n      ) : (\n        ''\n      )}\n    </Staff.View>\n  );\n}\n"],"names":["CustomerUpdateView","useDocumentTitle","useParams","custSlug","React","isEdit","setEdit","SharedDataCtx","customer_data","isLoaded","updateKey","inst","Customer","title","data","headerCN","actions","onClick","className","back","instance","fields","onSubmit","e","form","preventDefault","console","log","values","update","then","res","catch","err","handleError","type"],"sourceRoot":""}