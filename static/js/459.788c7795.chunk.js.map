{"version":3,"file":"static/js/459.788c7795.chunk.js","mappings":"iNAQMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CASH,OATGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,WAAAA,MACJ,SAASC,GACP,OAAOC,KAAKC,IAAL,UAAYD,KAAKE,MAAjB,aAAmC,CAAEH,OAAAA,GAC7C,2BACD,SAAWA,GACT,OAAOC,KAAKC,IAAL,UAAYD,KAAKE,MAAjB,eAAqC,CAAEH,OAAAA,GAC/C,qBACD,SAAKA,GACH,OAAOC,KAAKC,IAAL,UAAYD,KAAKE,MAAjB,SAA+B,CAAEH,OAAAA,GACzC,OATGD,CAAuBK,EAAAA,IAYhBC,EAAU,WAA0B,IAAzBC,EAAwB,uDAAP,CAAC,EACxC,OAAOC,EAAAA,EAAAA,IAAqCD,EAAM,iBAAkBP,EACrE,C,uJCbc,SAASS,EAAT,GAAyE,IAArCC,EAAoC,EAApCA,UACjD,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOV,EAAP,KAUMW,GAVN,KACeX,EAAOE,IAAI,UACZF,EAAOE,IAAI,SACXF,EAAOE,IAAI,SACZF,EAAOE,IAAI,QACXF,EAAOE,IAAI,QACXF,EAAOE,IAAI,QACVF,EAAOE,IAAI,SACZF,EAAOE,IAAI,SAEZU,EAAAA,EAAAA,KAAW,kBAAMP,EAAAA,EAAAA,GAAQ,CAAEQ,KAAMJ,IAAaK,KAAKd,EAAxC,GAAiD,CAAEe,YAAa,CAACf,MAClFgB,EAAM,IAAIC,EAAAA,GAASN,EAAIK,KAC7B,OAAKA,EAAIE,WAGP,SAAC,UAAD,CAAYC,MAAM,OAAlB,UACE,gBAAKC,UAAU,OAAf,SACGJ,EAAIK,MAAMC,KAAI,SAACC,GACd,OAAO,SAAC,KAAD,CAAaC,IAAKD,EAAmBH,UAAU,SAAlBK,EAAAA,EAAAA,MACrC,QAPoB,IAW5B,C","sources":["../../../../shopy/shopy-storejs/src/insights/utils.ts","../../../../shopy/shopy-storejs/src/insights/views.HitList.tsx"],"sourcesContent":["import { StaffModel, StaffService } from '@miq/staffjs';\nimport { URLSearchParamsInit } from 'react-router-dom';\n\nexport type TInsight =\n  | { path: string; ip_count: number; msg_count: number; id_count: number; x_count: number }\n  | { slug: string }\n  | {};\n\nclass InsightService extends StaffService<TInsight> {\n  products(params?: URLSearchParamsInit) {\n    return this.get(`${this._path}products/`, { params });\n  }\n  categories(params?: URLSearchParamsInit) {\n    return this.get(`${this._path}categories/`, { params });\n  }\n  hits(params?: URLSearchParamsInit) {\n    return this.get(`${this._path}hits/`, { params });\n  }\n}\n\nexport const Insight = (data: TInsight = {}) => {\n  return StaffModel<TInsight, InsightService>(data, 'shopy-insights', InsightService);\n};\n\nexport type TInsightInstance = ReturnType<typeof Insight>;\n\nexport type TInsightOrInstance = TInsight | TInsightInstance;\n","import * as React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { uuid } from '@miq/utiljs';\nimport Staff, { HitListItem } from '@miq/staffjs';\nimport { Response, useRequest } from '@miq/hookjs';\n\nimport { Insight } from './utils';\n\nexport default function StoreInsightsHitListView({ storeSlug }: { storeSlug: string }) {\n  const [params, setParams] = useSearchParams();\n  const __path = params.get('__path');\n  const __url = params.get('__url');\n  const __ref = params.get('__ref');\n  const __ip = params.get('__ip');\n  const __ua = params.get('__ua');\n  const __dt = params.get('__dt');\n  const __msg = params.get('__msg');\n  const page = params.get('page');\n\n  const req = useRequest(() => Insight({ slug: storeSlug }).hits(params), { refreshDeps: [params] });\n  const res = new Response(req.res);\n  if (!res.isSuccess) return null;\n\n  return (\n    <Staff.View title=\"Hits\">\n      <div className=\"mb-2\">\n        {res.items.map((item) => {\n          return <HitListItem hit={item} key={uuid()} className=\"mb-2\" />;\n        })}\n      </div>\n    </Staff.View>\n  );\n}\n"],"names":["InsightService","params","this","get","_path","StaffService","Insight","data","StaffModel","StoreInsightsHitListView","storeSlug","useSearchParams","req","useRequest","slug","hits","refreshDeps","res","Response","isSuccess","title","className","items","map","item","hit","uuid"],"sourceRoot":""}