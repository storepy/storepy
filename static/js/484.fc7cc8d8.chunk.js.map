{"version":3,"file":"static/js/484.fc7cc8d8.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-salejs/src/cart/components.tsx","../../../../shopy/shopy-salejs/src/cart/utils.ts","../../../../shopy/shopy-salejs/src/cart/views.AddItem.tsx","../../../../shopy/shopy-salejs/src/cart/views.Update.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { truncateStr } from '@miq/utiljs';\nimport { ProductPriceDisplay, TProduct, TProductSize } from '@shopy/storejs';\n\nexport const ItemProductCard = ({ product, size }: { product: TProduct; size: TProductSize }) => (\n  <div className=\"d-flex align-items-center\">\n    <ProductImage {...{ product, width: 60, height: 60 }} />\n    <div className=\"flex-1 rounded p-1 \">\n      <div className=\"fw-bold\">{truncateStr(product?.name, 0, 25)}</div>\n      <ProductPriceDisplay {...product} inline />\n      {size && (\n        <div>\n          <span className=\"me-1\">Size:</span>\n          <span className=\"text-sm\">{size?.name}</span>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport const ProductImage = ({\n  product,\n  width,\n  height,\n  ...props\n}: {\n  product: TProduct;\n  width?: number | string;\n  height?: number | string;\n}) =>\n  product?.slug ? (\n    <div {...props} style={{ width: width, height: height }}>\n      <Staff.Img.Square slug=\"slug\" src=\"src\" {...product.cover_data} className=\"rounded\" />\n    </div>\n  ) : null;\n","import { getStaffModel, StaffService } from '@miq/staffjs';\nimport { TPriceData, TProductSize } from '@shopy/storejs';\n\nimport { TCustomer } from '../customer';\n\nconst timeout = 5000;\n\nexport type TAPIOrderItem = {\n  slug: string;\n  product: {\n    // slug: string;\n    meta_slug: string;\n    name: string;\n    name_truncated: string;\n    cover: string;\n    cover_data: {\n      src: string;\n      src_mobile: string;\n      thumb: string;\n      thumb_sq: string;\n      alt_text: string;\n      caption: string;\n    };\n    price: TPriceData;\n    retail_price: string;\n    retail_price_data: TPriceData;\n    sale_price: string;\n    sale_price_data: TPriceData;\n    is_on_sale: boolean;\n    is_oos: boolean;\n  };\n  size: string;\n  size_data: TProductSize;\n  quantity: number;\n};\n\nexport type TAPICart = {\n  slug?: string;\n  customer?: string;\n  customer_name?: string;\n  products?: string[];\n  items?: TAPIOrderItem[];\n};\n\nexport type TOrderItem = Record<string, any> & {\n  order?: string;\n  product?: string;\n  product_data?: any;\n  name?: string;\n  price?: string;\n  size?: string;\n  was_sale?: boolean;\n  img?: string;\n  quantity?: number;\n};\n\nexport type TCart = {\n  slug?: string;\n  customer?: string;\n  customer_name?: string;\n  customer_data?: TCustomer;\n  notes?: string;\n  is_completed?: boolean;\n\n  dt_delivery?: string;\n  items?: TOrderItem[];\n  products?: string[];\n\n  is_placed?: boolean;\n  subtotal?: TPriceData;\n  total?: TPriceData;\n\n  created?: string;\n  updated?: string;\n};\n\nclass CartService extends StaffService<TCart> {\n  get canDestroy(): boolean {\n    return this?.data?.products?.length === 0;\n  }\n\n  place() {\n    return this.post(`${this._path}place/`, {}, { timeout });\n  }\n\n  addItems(values: { size: string; quantity: number; product_slug: string }[]) {\n    return this.post(`${this._path}products/`, values);\n  }\n\n  addItem(prodSlug: string, values: { size: string; quantity: number }) {\n    return this.post(`${this._path}product/${prodSlug}/`, values);\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(itemSlug: string) {\n    return this.delete(`${this._path}item/${itemSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = getStaffModel<TCart, CartService>('carts', CartService);\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { ResultsResponse } from '@miq/hookjs';\nimport { uuid } from '@miq/utiljs';\nimport { useProductListRequest, ProductListFilterForm, TProduct, TProductSize } from '@shopy/storejs';\nimport { Button, HorizontalScrollGridLayout, Loading, SectionHeader, StickyFooterLayout } from '@miq/componentjs';\n\nimport { TCartInstance } from './utils';\nimport { ItemProductCard, ProductImage } from './components';\n\ntype TProps = {\n  cart: TCartInstance;\n  isOpen: boolean;\n  setOpen: any;\n  onSuccess: (res: any) => void;\n  onError?: (err: any) => void;\n};\n\ntype TSelect = TProduct & { sizeSlug: string };\n\nconst CartAddItemViewHeader = (props: TProps & { selected: TSelect[] }) => {\n  const { setOpen, selected = [] } = props;\n\n  return (\n    <div className=\"cart-add-item-view-header miq-container center px-1 pt-2\">\n      <SectionHeader\n        title={<span className=\"fw-bold mt-2\">Ajouter des produits</span>}\n        text=\"Tap on a product to add to the cart/ Cliquez sur un produit pour l'ajouter au panier\"\n        actions={<div onClick={() => setOpen?.(false)}> [ x ]</div>}\n      />\n\n      <HorizontalScrollGridLayout className=\"cart-items-preview\" style={{ minHeight: 48, paddingBottom: 0 }}>\n        {selected.map((i) => {\n          return (\n            <div key={uuid()}>\n              <ProductImage product={i} {...{ width: 48, height: 48 }} />\n            </div>\n          );\n        })}\n      </HorizontalScrollGridLayout>\n    </div>\n  );\n};\n\nexport default function CartAddItemView(props: TProps) {\n  const { res: productRes, loading } = useProductListRequest({}, { atc: '1' });\n  const [selected, setSelected] = React.useState<TSelect[]>([]);\n\n  if (!props.isOpen) return null;\n  if (loading) return <Loading />;\n\n  const r = new ResultsResponse<TProduct>(productRes);\n\n  const products = r.items || [];\n\n  const { cart } = props;\n  const cartSizes = cart?.items?.map(({ size }) => size) || [];\n\n  const addItems = () => {\n    const values = selected.map((s) => ({ product_slug: s.meta_slug!, size: s.sizeSlug, quantity: 1 }));\n\n    if (values.length === 0) return;\n\n    cart\n      .addItems(values)\n      .then((r) => {\n        setSelected([]);\n        props?.onSuccess?.(r);\n      })\n      .catch((err) => props?.onError?.(err));\n  };\n\n  return (\n    <StickyFooterLayout\n      style={{ zIndex: 10000 }}\n      className=\"bg-white m-1 rounded\"\n      header={<CartAddItemViewHeader {...props} {...{ selected }} />}\n      footer={\n        <div className=\"miq-container center\">\n          <div className=\"d-flex justify-content-between bg-white p-2\">\n            <div>\n              <Button onClick={() => props.setOpen(false)} className=\"\">\n                Annuler\n              </Button>\n            </div>\n            <div>\n              <Button disabled={selected.length === 0} onClick={() => addItems()} className=\"btn-primary fw-bold\">\n                Ajouter\n              </Button>\n            </div>\n          </div>\n        </div>\n      }\n    >\n      <Staff.Section header={<ProductListFilterForm fields={[]} />} className=\"miq-container center px-1\">\n        {products.map((product) => {\n          const { sizes = [] } = product;\n\n          return sizes\n            .filter(({ quantity }) => quantity >= 1)\n            .filter((i) => !cartSizes.includes(i.slug))\n            .map((size: TProductSize) => {\n              const checked = selected.find(({ sizeSlug }) => sizeSlug === size?.slug);\n              const isChecked = Boolean(checked);\n              return (\n                <div\n                  className=\"d-flex align-items-center mb-1 border-1 rounded\"\n                  key={uuid()}\n                  style={{ padding: 6 }}\n                  onClick={() => {\n                    if (isChecked) setSelected((items) => items.filter(({ sizeSlug }) => sizeSlug != size?.slug));\n                    else setSelected([{ ...product, sizeSlug: size.slug }, ...selected]);\n                  }}\n                >\n                  <div className=\"flex-1\">\n                    <ItemProductCard {...{ product, size }} />\n                  </div>\n\n                  <div style={{ minWidth: 24, marginLeft: 3, marginRight: 6 }}>\n                    <input type=\"checkbox\" name=\"selected\" className=\"me-2\" checked={isChecked} onChange={() => {}} />\n                  </div>\n                </div>\n              );\n            });\n        })}\n      </Staff.Section>\n    </StickyFooterLayout>\n  );\n}\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { Response, useDocumentTitle, useRequest } from '@miq/hookjs';\nimport { Button, Icons, Loading } from '@miq/componentjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { truncateStr, uuid } from '@miq/utiljs';\nimport { SizeQuantityField, SizeSelectField, TProduct, ProductPriceDisplay } from '@shopy/storejs';\n\nimport { TCart, Cart } from './utils';\nimport { ItemProductCard } from './components';\nimport CartAddItemView from './views.AddItem';\nimport { CartItemDeleteButton } from './buttons';\nimport { CustomerCard } from '../customer';\n\nexport default function CartUpdateView() {\n  useDocumentTitle('Add items to cart - Sales');\n  const { cartSlug } = useParams();\n\n  const { res, setRes, loading } = useRequest(() => Cart({ slug: cartSlug }).retrieve(), {\n    refreshDeps: [cartSlug],\n    // onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      // if (response?.status === 404) return navigate('../');\n    },\n  });\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const cart = Cart(r.data || {});\n\n  return (\n    <Staff.View title=\"Ajouter au panier\" back=\"/staff/sales/carts\">\n      <pre>{JSON.stringify(cart.export(), null, 2)}</pre>\n\n      <div className=\"miq-container center\">\n        <Staff.Section\n          border\n          title={`Panier (${cart?.products?.length} produits)`}\n          actions={\n            <>\n              <Button onClick={() => setOpen(true)} className=\"btn-primary-3 btn-round\" title=\"Ajouter des produits\">\n                <Icons.CartPlus />\n              </Button>\n            </>\n          }\n          footer={\n            <div className=\"\">\n              <div className=\"d-flex justify-content-between\">\n                <span className=\"\">Subtotal</span>\n                <span>\n                  <ProductPriceDisplay retail_price_data={cart?.subtotal} />\n                </span>\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                <span className=\"\">Total</span>\n                <span className=\"fw-bold\">\n                  <ProductPriceDisplay retail_price_data={cart?.subtotal} />\n                </span>\n              </div>\n            </div>\n          }\n        >\n          {cart && cart?.items?.length > 0 ? (\n            <>\n              {cart.items?.map((i) => {\n                // console.log(i);\n\n                return (\n                  <div key={uuid()} className=\"d-flex justify-content-between align-items-center\">\n                    <ItemProductCard {...i} size={i.size_data} />\n                    <div>\n                      <CartItemDeleteButton cartInstance={cart} itemSlug={i?.slug} onSuccess={(r) => setRes(r)} />\n                    </div>\n                  </div>\n                );\n              })}\n            </>\n          ) : (\n            <>Ajouter</>\n          )}\n        </Staff.Section>\n\n        <Staff.Section border title=\"Client\">\n          <CustomerCard data={cart.customer_data!} />\n        </Staff.Section>\n\n        <div className=\"text-center\">\n          <Button\n            onClick={() => {\n              cart\n                .place()\n                .then((r) => {\n                  setRes(r);\n                })\n                .catch((err) => console.log(err));\n            }}\n            disabled={cart.products!.length <= 0}\n            className=\"btn-primary btn-md fw-bold w-50\"\n          >\n            Confirmer\n          </Button>\n        </div>\n      </div>\n\n      {isOpen && (\n        <CartAddItemView\n          {...{ isOpen, setOpen, cart }}\n          onSuccess={(r) => {\n            setRes(r);\n            setOpen(false);\n          }}\n        />\n      )}\n    </Staff.View>\n  );\n}\n\nexport const ProductAddForm = ({\n  item,\n  onItemClick,\n  ...props\n}: {\n  item: TProduct;\n  onItemClick: (p: TProduct, size: string, qty: string) => Promise<TCart>;\n}) => {\n  const form = useForm({ quantity: 1, size: '' });\n\n  if (!item?.slug) return null;\n\n  const { sizes = [], is_oos, cover_data, name, size_count = 0 } = item;\n\n  const canAdd = !is_oos && size_count > 0;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        onItemClick(item, form.values.size, form.values.quantity).catch((err) => {\n          form.handleError(err);\n        });\n      }}\n    >\n      <Staff.Section\n        border\n        header={\n          <div className=\"d-flex\">\n            <div style={{ minWidth: 34, maxWidth: 50 }} className=\"me-1\">\n              <Staff.Img.Thumb src=\"src\" {...cover_data} className=\"rounded\" />\n            </div>\n\n            <div className=\"flex-1\" title={name}>\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{truncateStr(name!, 0, 45)}</span>\n              </div>\n\n              <div className=\"d-flex flex-column flex-md-ro justify-content-between\">\n                <div className=\"d-grid grid-md-2 gap-1 flex-1\">\n                  <SizeSelectField required sizes={sizes.filter((i) => i.quantity > 0)} error={form.errors.size} />\n                  <SizeQuantityField max={sizes.find((i) => i.slug === form.values.size)?.quantity || 0} min={1} />\n                </div>\n                <div className=\"text-right\">\n                  <Form.Submit className=\"btn btn-primary-2 btn-md fw-bold\">Ajouter</Form.Submit>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        actions={<ProductPriceDisplay {...item} className=\"d-flex flex-wrap\" />}\n        className=\"mb-1\"\n      ></Staff.Section>\n    </Form>\n  );\n};\n"],"names":["ItemProductCard","product","size","className","ProductImage","width","height","truncateStr","name","inline","props","slug","style","src","cover_data","timeout","CartService","this","data","products","length","post","_path","values","prodSlug","itemSlug","delete","StaffService","Cart","getStaffModel","CartAddItemViewHeader","setOpen","selected","title","text","actions","onClick","minHeight","paddingBottom","map","i","uuid","CartAddItemView","useProductListRequest","atc","productRes","res","loading","React","setSelected","isOpen","ResultsResponse","items","cart","cartSizes","zIndex","header","footer","disabled","s","product_slug","meta_slug","sizeSlug","quantity","addItems","then","r","onSuccess","catch","err","onError","fields","sizes","filter","includes","checked","find","isChecked","Boolean","padding","minWidth","marginLeft","marginRight","type","onChange","CartUpdateView","useDocumentTitle","cartSlug","useParams","useRequest","retrieve","refreshDeps","response","setRes","Response","isSuccess","back","JSON","stringify","export","border","retail_price_data","subtotal","size_data","cartInstance","CustomerCard","customer_data","place","console","log","ProductAddForm","item","onItemClick","form","useForm","is_oos","size_count","context","onSubmit","e","preventDefault","handleError","maxWidth","required","error","errors","max","min"],"sourceRoot":""}