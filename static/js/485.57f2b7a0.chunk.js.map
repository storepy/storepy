{"version":3,"file":"static/js/485.57f2b7a0.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-orderjs/src/views.CartUpdate.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Cart } from './models';\nimport { Response, truncateStr } from '@miq/utiljs';\nimport { Loading } from '@miq/componentjs';\nimport { CustomerCard } from './components';\nimport Form, { useForm } from '@miq/formjs';\nimport {\n  useProductListRequest,\n  ProductListFilterForm,\n  SizeQuantityField,\n  SizeSelectField,\n  TProduct,\n  ProductPriceDisplay,\n} from '@shopy/storejs';\nimport { TOrder } from './types';\n\nexport default function CartUpdateView() {\n  const [params] = useSearchParams();\n  const { cartSlug } = useParams();\n\n  const qForm = useForm({ q: '' });\n  const { res: productRes } = useProductListRequest(undefined, { published: 'include', atc: 1 });\n\n  const { res, setRes, loading, ...request } = useRequest(() => Cart({ slug: cartSlug }).retrieve(), {\n    refreshDeps: [cartSlug],\n    // onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      // if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const cart = Cart(r.data);\n  const products = new Response(productRes).items || [];\n\n  console.log(r.data);\n\n  return (\n    <Staff.View title=\"Modifier une commande\">\n      <Staff.Section border title=\"Client\" actions={<>Modifier</>}>\n        <CustomerCard data={cart.customer_data} />\n      </Staff.Section>\n\n      <Staff.Section border title=\"Produits\" actions={<>Ajouter des produits</>}>\n        {/* {cart?.items?.map(item=><CartItem)} */}\n      </Staff.Section>\n\n      <div className=\"d-grid grid-md-6 gap-2\">\n        <div className=\"span-md-3\">\n          <Staff.Section\n            title=\"Ajouter des produits\"\n            header={\n              <>\n                <ProductListFilterForm />\n              </>\n            }\n          >\n            {products\n              .filter((i) => !cart.data.products.includes(i.slug))\n              .map((product) => {\n                return (\n                  <div className=\"\" key={product.slug}>\n                    <ProductAddForm\n                      item={product}\n                      onItemClick={(product, size, qty) => {\n                        return cart.addItem(product.slug!, size, qty).then((r) => {\n                          setRes(r);\n                          return r;\n                        });\n                      }}\n                    />\n                  </div>\n                );\n              })}\n          </Staff.Section>\n        </div>\n\n        <div className=\"span-md-3\">\n          <div className=\"\">\n            <Staff.Section border title=\"Panier\" actions={cart.items.length} footer={<>Confirmer</>}>\n              {cart.items.map((i) => {\n                const { product, size, quantity } = i;\n                return (\n                  <div className=\"\" key={i.slug}>\n                    <div className=\"p\">{product.name}</div>\n                    <div className=\"d-flex justify-content-between\">\n                      <span className=\"\">{size}</span>\n\n                      <span className=\"\">{quantity}</span>\n                    </div>\n                    <div className=\"\">{}</div>\n                  </div>\n                );\n              })}\n\n              <div className=\"mt-4\">\n                <div className=\"\">\n                  <span className=\"\">Subtotal</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"\">Total</span>\n                </div>\n              </div>\n            </Staff.Section>\n          </div>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nexport const ProductAddForm = ({\n  item,\n  onItemClick,\n  ...props\n}: {\n  item: TProduct;\n  onItemClick: (p: TProduct, size: string, qty: string) => Promise<TOrder>;\n}) => {\n  const form = useForm({ quantity: 1, size: '' });\n\n  if (!item?.slug) return null;\n\n  const { sizes = [], is_oos, category_data, cover_data, name, size_count = 0 } = item;\n\n  const canAdd = !is_oos && size_count > 0;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        onItemClick(item, form.values.size, form.values.quantity).catch((err) => {\n          form.handleError(err);\n        });\n      }}\n    >\n      <Staff.Section\n        border\n        header={\n          <div className=\"d-flex\">\n            <div style={{ minWidth: 34, maxWidth: 50 }} className=\"me-1\">\n              <Staff.Img.Thumb src=\"src\" {...cover_data} className=\"rounded\" />\n            </div>\n\n            <div className=\"flex-1\" title={name}>\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{truncateStr(name!, 0, 45)}</span>\n              </div>\n\n              <div className=\"d-flex flex-column flex-md-ro justify-content-between\">\n                <div className=\"d-grid grid-md-2 gap-1 flex-1\">\n                  <SizeSelectField required sizes={sizes.filter((i) => i.quantity > 0)} error={form.errors.size} />\n                  <SizeQuantityField max={sizes.find((i) => i.slug === form.values.size)?.quantity || 0} min={1} />\n                </div>\n                <div className=\"text-right\">\n                  <Form.Submit className=\"btn btn-primary-2 btn-md fw-bold\">Ajouter</Form.Submit>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        actions={<ProductPriceDisplay {...item} className=\"d-flex flex-wrap\" />}\n        className=\"mb-1\"\n      ></Staff.Section>\n    </Form>\n  );\n};\n"],"names":["CartUpdateView","useSearchParams","cartSlug","useParams","productRes","useForm","q","useProductListRequest","undefined","published","atc","res","useRequest","Cart","slug","retrieve","refreshDeps","onError","response","setRes","loading","r","Response","isSuccess","cart","data","products","items","console","log","title","border","actions","customer_data","className","header","filter","i","includes","map","product","ProductAddForm","item","onItemClick","size","qty","addItem","then","length","footer","quantity","name","form","sizes","cover_data","is_oos","category_data","size_count","context","onSubmit","e","preventDefault","values","catch","err","handleError","style","minWidth","maxWidth","src","truncateStr","required","error","errors","max","find","min"],"sourceRoot":""}