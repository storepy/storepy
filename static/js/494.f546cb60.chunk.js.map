{"version":3,"file":"static/js/494.f546cb60.chunk.js","mappings":"4PAqDe,SAASA,IAAsB,IAAD,MACrCC,EAAMC,EAAAA,WAAiBC,EAAAA,IACrBC,EAA2DH,EAA3DG,SAAUC,EAAiDJ,EAAjDI,SAAUC,EAAuCL,EAAvCK,OAAQC,EAA+BN,EAA/BM,KAAMC,EAAyBP,EAAzBO,eAAgBC,EAASR,EAATQ,KAC1D,GAAiBC,EAAAA,EAAAA,OAAjB,eAEmBC,IAAI,OAEvB,OAAKP,GAKH,UAAC,UAAD,CACEQ,MAAM,OACNC,KAAK,UACLC,SACE,SAAC,aAAD,CAAeC,GAAG,YAAYC,UAAU,gCAAgCJ,MAAM,gBAA9E,UACE,SAAC,QAAD,MALN,WASE,SAAC,aAAD,WACE,iBAAKI,UAAU,8CAAf,WACiB,OAAdR,QAAc,IAAdA,GAAA,UAAAA,EAAgBS,cAAhB,eAAwBC,iBACvB,SAACC,EAAD,CACEP,MAAM,kBACNQ,IAAI,KACJC,KAAM,CAAEN,GAAI,UAAWO,KAAM,kBAAmBC,MAAO,CAAC,6BAH1D,UAKE,yBAAW,OAANjB,QAAM,IAANA,OAAA,EAAAA,EAAQkB,QAAS,OAI1B,SAACL,EAAD,CACEP,MAAM,WACNQ,IAAI,kBACJC,KAAM,CAAEN,GAAI,WAAYO,KAAM,oBAAqBC,MAAO,CAAC,uBAH7D,UAKE,yBAAa,OAARlB,QAAQ,IAARA,OAAA,EAAAA,EAAUmB,QAAS,OAG1B,SAACL,EAAD,CACEC,IAAI,oBACJR,MAAM,aACNS,KAAM,CAAEN,GAAI,aAAcO,KAAM,sBAAuBC,MAAO,CAAC,wBAHjE,UAKE,yBAAS,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,QAAS,WAlC5B,OAuCGf,QAvCH,IAuCGA,OAvCH,EAuCGA,EAAMgB,KAAI,SAACC,GACV,OACE,iBAAkBV,UAAU,iCAA5B,WACE,0BAAOU,EAAEC,iBACT,gBAAKX,UAAU,gBAAf,SAAgCU,EAAEE,QAElC,0BAAOF,EAAEF,WAJDK,EAAAA,EAAAA,WAWd,SAAC,aAAD,CAAejB,MAAM,iBAAiBI,UAAU,OAAhD,gBACGT,QADH,IACGA,GADH,UACGA,EAAMuB,iBADT,iBACG,EACGC,QAAO,SAACC,GAAD,OAAOA,EAAEC,yBAFtB,aACG,EAEGR,KAAI,WAA4BO,GAA5B,IAAGC,EAAH,EAAGA,eAAgBT,EAAnB,EAAmBA,MAAnB,OACJ,2BACGS,EADH,KACqBT,IADXQ,WA7DE,KAsExB,IAAMb,EAID,SAAC,GAA2C,IAAzCe,EAAwC,EAAxCA,SAAUtB,EAA8B,EAA9BA,MAAOS,EAAuB,EAAvBA,KAAuB,IAAjBD,IAAAA,OAAiB,MAAX,KAAW,EACtCL,EAAOM,EAAPN,GACR,OACE,iBAAKC,UAAU,iBAAf,WACE,UAAC,aAAD,CAAeD,GAAIK,EAAnB,UACGR,IAAS,gBAAKI,UAAU,kBAAf,SAAkCJ,IAC3CsB,MAGH,SAAC,UAAD,CAAYnB,GAAIA,EAAIoB,cAAed,EAAKE,MAAxC,UACO,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMC,OAAN,UAAiBD,EAAKC,KAAtB","sources":["../../../../shopy/shopy-storejs/src/IndexView.tsx"],"sourcesContent":["import * as React from 'react';\nimport Staff from '@miq/staffjs';\n\nimport { Icons } from '@miq/componentjs';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { useSearchParams } from 'react-router-dom';\nimport { useHitListRequest, hitsByPath } from '@miq/staffjs';\nimport { Response, uuid } from '@miq/utiljs';\n\nconst TopViewsSection = () => {\n  const { res } = useHitListRequest('/shop/');\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const paths = hitsByPath(r.items);\n\n  return (\n    <Staff.Section title=\"Top Views\" text=\"This data is based on the last 100 hits.\" className=\"my-2\">\n      {Object.entries(paths)\n        .sort((a, b) => (a?.[1].length > b?.[1].length ? -1 : 1))\n        .map((i) => {\n          const [path, hits] = i;\n          const { session_data } = hits.find((i) => i.session_data) || {};\n          const { name, img } = session_data;\n\n          return (\n            <Staff.Section\n              title={\n                <div className=\"text-sm\">\n                  {name && <div className=\"\">{session_data?.name}</div>}\n                  <div className=\"fw-normal text-muted\">{path}</div>\n                </div>\n              }\n              actions={\n                <div>\n                  {img && (\n                    <div style={{ maxWidth: 20 }}>\n                      <Staff.Img.Image {...{ src: img }} className=\"rounded\" />\n                    </div>\n                  )}\n                </div>\n              }\n              border\n              className=\"mb-1\"\n              key={path}\n            />\n          );\n        })}\n    </Staff.Section>\n  );\n};\n\nexport default function ShopStaffIndexView() {\n  const ctx = React.useContext(SharedDataCtx);\n  const { isLoaded, products, orders, cats, shopy_settings, hits } = ctx;\n  const [params] = useSearchParams();\n\n  const tab = params.get('tab');\n\n  if (!isLoaded) return null;\n\n  // console.log(hits);\n\n  return (\n    <Staff.View\n      title=\"Shop\"\n      back=\"/staff/\"\n      actions={\n        <Staff.NavLink to=\"settings/\" className=\"btn btn-round btn-secondary-3\" title=\"Shop settings\">\n          <Icons.Adjustments />\n        </Staff.NavLink>\n      }\n    >\n      <Staff.Section>\n        <div className=\"d-grid grid-2 grid-sm-3 grid-md-4 grid-lg-6\">\n          {shopy_settings?.config?.has_suppliers && (\n            <CardLink\n              title=\"Supplier Orders\"\n              tab=\"./\"\n              link={{ to: 'orders/', text: 'View all orders', perms: ['store.view_supplierorder'] }}\n            >\n              <h3>{orders?.count || 0}</h3>\n            </CardLink>\n          )}\n\n          <CardLink\n            title=\"Products\"\n            tab=\"./?tab=products\"\n            link={{ to: 'products', text: 'View all products', perms: ['store.view_product'] }}\n          >\n            <h3>{products?.count || 0}</h3>\n          </CardLink>\n\n          <CardLink\n            tab=\"./?tab=categories\"\n            title=\"Categories\"\n            link={{ to: 'categories', text: 'View all categories', perms: ['store.view_category'] }}\n          >\n            <h3>{cats?.count || 0}</h3>\n          </CardLink>\n        </div>\n      </Staff.Section>\n\n      {hits?.map((h) => {\n        return (\n          <div key={uuid()} className=\"d-flex justify-content-between\">\n            <span>{h.created__date}</span>\n            <div className=\"text-ellipsis\">{h.path}</div>\n            {/* <span>{h.session || h.url || h.ip || h.user_agent}</span> */}\n            <span>{h.count}</span>\n          </div>\n        );\n      })}\n\n      {/* <TopViewsSection /> */}\n\n      <Staff.Section title=\"Top Categories\" className=\"my-2\">\n        {cats?.cat_count\n          ?.filter((i) => i.category__name)\n          ?.map(({ category__name, count }, i) => (\n            <div key={i}>\n              {category__name}: {count}\n            </div>\n          ))}\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\nconst CardLink: React.FC<{\n  title: string;\n  tab?: string;\n  link: { to: string; text: string; perms: string[] };\n}> = ({ children, title, link, tab = './' }) => {\n  const { to } = link;\n  return (\n    <div className=\"card-link mb-3\">\n      <Staff.NavLink to={tab}>\n        {title && <div className=\"card-link-title\">{title}</div>}\n        {children}\n      </Staff.NavLink>\n\n      <Staff.Link to={to} requiredPerms={link.perms}>\n        {link?.text && `${link.text} Â»`}\n      </Staff.Link>\n    </div>\n  );\n};\n"],"names":["ShopStaffIndexView","ctx","React","SharedDataCtx","isLoaded","products","orders","cats","shopy_settings","hits","useSearchParams","get","title","back","actions","to","className","config","has_suppliers","CardLink","tab","link","text","perms","count","map","h","created__date","path","uuid","cat_count","filter","i","category__name","children","requiredPerms"],"sourceRoot":""}