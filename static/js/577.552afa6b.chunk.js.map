{"version":3,"file":"static/js/577.552afa6b.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-salejs/src/cart/utils.ts","../../../../shopy/shopy-salejs/src/cart/views.Create.tsx"],"sourcesContent":["import { getStaffModel, StaffService } from '@miq/staffjs';\nimport { TPriceData, TProductSize } from '@shopy/storejs';\n\nimport type { TDiscount } from '../discount/types';\nimport type { TCustomer } from '../customer';\n\nconst timeout = 5000;\n//     ^?\n\nexport type TAPIOrderItem = {\n  slug: string;\n  product: {\n    // slug: string;\n    meta_slug: string;\n    name: string;\n    name_truncated: string;\n    cover: string;\n    cover_data: {\n      src: string;\n      src_mobile: string;\n      thumb: string;\n      thumb_sq: string;\n      alt_text: string;\n      caption: string;\n    };\n    price: TPriceData;\n    retail_price: string;\n    retail_price_data: TPriceData;\n    sale_price: string;\n    sale_price_data: TPriceData;\n    is_on_sale: boolean;\n    is_oos: boolean;\n  };\n  size: string;\n  size_data: TProductSize;\n  quantity: number;\n};\n\nexport type TAPICart = {\n  slug?: string;\n  customer?: string;\n  customer_name?: string;\n  products?: string[];\n  items?: TAPIOrderItem[];\n};\n\nexport type TOrderItem = Record<string, any> & {\n  order?: string;\n  product?: string;\n  product_data?: any;\n  name?: string;\n  price?: string;\n  size?: string;\n  was_sale?: boolean;\n  img?: string;\n  quantity?: number;\n};\n\nexport type TCart = {\n  slug?: string;\n  customer?: string;\n  customer_name?: string;\n  customer_data?: TCustomer;\n  notes?: string;\n  is_paid?: boolean;\n  discounts?: TDiscount[];\n\n  dt_delivery?: string;\n  items?: TOrderItem[];\n  products?: string[];\n\n  is_placed?: boolean;\n  subtotal?: TPriceData;\n  total?: TPriceData;\n\n  created?: string;\n  updated?: string;\n};\n\nclass CartService extends StaffService<TCart> {\n  get createdDt() {\n    return this.data?.created\n      ? new Date(this.data.created!).toLocaleDateString(undefined, {\n          day: '2-digit',\n          weekday: 'short',\n          month: 'short',\n          year: '2-digit',\n        })\n      : null;\n  }\n\n  get canDestroy(): boolean {\n    return this?.data?.products?.length === 0;\n  }\n\n  mark_paid() {\n    return this.post(`${this._path}pay/`, {}, { timeout });\n  }\n\n  place() {\n    return this.post(`${this._path}place/`, {}, { timeout });\n  }\n\n  postDiscount(values: Exclude<TDiscount, 'slug' | 'amt_data'>) {\n    return this.post(`${this._path}discount/`, values);\n  }\n  destroyDiscount(discountSlug: string) {\n    return this.delete(`${this._path}discount/${discountSlug}/`);\n  }\n\n  addItems(values: { size: string; quantity: number; product_slug: string }[]) {\n    return this.post(`${this._path}products/`, values);\n  }\n\n  addItem(prodSlug: string, values: { size: string; quantity: number }) {\n    return this.post(`${this._path}product/${prodSlug}/`, values);\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(itemSlug: string) {\n    return this.delete(`${this._path}item/${itemSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = getStaffModel<TCart, CartService>('carts', CartService);\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n//            ^?\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\n\nimport { Cart } from './utils';\nimport { Button, Icons } from '@miq/componentjs';\n\nimport { TCustomer, CustomerForm, CustomerCard, Customer } from '../customer';\nimport { useDocumentTitle } from '@miq/hookjs';\n\nexport default function CartCreateView() {\n  useDocumentTitle('Add cart - Sales');\n  const navigate = useNavigate();\n  const [customer, setCustomer] = React.useState<TCustomer>();\n\n  const createCart = (customer: TCustomer) => {\n    Cart({})\n      .create({ customer: customer.slug })\n      .then(({ data }) => {\n        return navigate(`/staff/sales/carts/${data.slug}/`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Staff.View title=\"Ajouter une commande\" back=\"/staff/sales/\">\n      <div className=\"d-flex justify-content-center my-3\">\n        <div className=\"w-md-65\">\n          <Staff.Section title=\"Client\" text=\"Selectionez ou ajoutez un noubeau client\" headerCN=\"mb-4\">\n            {customer && customer.slug ? (\n              <div className=\"\">\n                <CustomerCard data={customer} />\n\n                <div className=\"d-flex justify-content-between mt-4\">\n                  <Button className=\"btn btn-round\" onClick={() => setCustomer(undefined)}>\n                    <Icons.ArrowLeft />\n                  </Button>\n\n                  <Button\n                    onClick={() => {\n                      createCart(customer);\n                    }}\n                    className=\"btn btn-primary-3\"\n                  >{`Continuer »`}</Button>\n                </div>\n              </div>\n            ) : (\n              <CustomerForm\n                allowSuggestions={true}\n                fields={['first_name', 'last_name', 'phone', 'email']}\n                onSubmit={({ e, form }) => {\n                  e.preventDefault();\n                  Customer()\n                    .create(form.values)\n                    .then(({ data }) => {\n                      createCart(data);\n                    })\n                    .catch((err) => {\n                      form.handleError(err);\n                    });\n                }}\n                onSuccess={({ data }) => {}}\n                onCustomerSelect={setCustomer}\n              >\n                <div className=\"d-flex justify-content-center my-4\">\n                  <Button type=\"submit\" className=\"btn btn-md btn-primary fw-bold\">\n                    {`Continuer »`}\n                  </Button>\n                </div>\n              </CustomerForm>\n            )}\n          </Staff.Section>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n"],"names":["timeout","CartService","this","data","created","Date","toLocaleDateString","undefined","day","weekday","month","year","products","length","post","_path","values","discountSlug","delete","prodSlug","itemSlug","StaffService","Cart","getStaffModel","CartCreateView","useDocumentTitle","navigate","useNavigate","React","customer","setCustomer","createCart","create","slug","then","catch","err","console","log","title","back","className","text","headerCN","CustomerCard","onClick","CustomerForm","allowSuggestions","fields","onSubmit","e","form","preventDefault","Customer","handleError","onSuccess","onCustomerSelect","type"],"sourceRoot":""}