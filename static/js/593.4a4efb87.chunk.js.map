{"version":3,"file":"static/js/593.4a4efb87.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/views.Index.tsx"],"sourcesContent":["import * as React from 'react';\n// import { Chart } from 'react-charts';\n\nimport Staff, { API, HitWindowSearchField } from '@miq/staffjs';\nimport { Icons, HorizontalScrollGridLayout, ViewSection, Loading, Button } from '@miq/componentjs';\nimport { SharedDataCtx } from '@miq/contextjs';\n\nimport { getImgUrl, truncateStr, uuid } from '@miq/utiljs';\nimport { Response, useDocumentTitle, useRequest } from '@miq/hookjs';\nimport { useSearchParams } from 'react-router-dom';\n\n//\n\nconst TopItemCard = (props: any) => {\n  const { data, top } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\" title={`${data?.name}: ${data?.count}`}>\n      {data.img && (\n        <div className=\"bg-gray-100 rounded\" style={{ width: 48, maxWidth: 48 }}>\n          <img\n            src={getImgUrl(data.img)}\n            alt={data?.name && truncateStr(data?.name, 0, 4)}\n            className=\"rounded\"\n            style={{ objectFit: 'cover', width: '100%', height: 'auto', aspectRatio: '1/1' }}\n          />\n        </div>\n      )}\n      {top && (\n        <div className=\"ms-1\">\n          <div className=\"text-ellipsis fw-bold\">{data?.name}</div>\n          <div className=\"text-muted text-sm\">{data?.count} vues</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst PerformanceCard = ({ settingSlug, ...props }: any) => {\n  let [params] = useSearchParams();\n  const window = params.get('__window');\n\n  const ctx = React.useContext(SharedDataCtx);\n  const { stats } = ctx;\n  if (!stats) return null;\n\n  return (\n    <Staff.Section\n      title=\"Insights\"\n      actions={\n        <div className=\"d-flex align-items-center\">\n          <HitWindowSearchField options={['today', 'last_7', 'last_30']} />\n          <Staff.Link to=\"insights\" className=\"btn btn-primary-3 ms-1\">\n            {`Insights>`}\n          </Staff.Link>\n        </div>\n      }\n    >\n      <div className=\"d-grid gap-2 mb-3\">\n        <div className=\"\">Messages: {stats?.msg_count}</div>\n        <div className=\"\">Visitors: {stats?.visitor_count}</div>\n        <div className=\"\">Page views: {stats?.views_count}</div>\n      </div>\n    </Staff.Section>\n  );\n};\n\nexport default function ShopStaffIndexView() {\n  useDocumentTitle('Store');\n  const ctx = React.useContext(SharedDataCtx);\n  const { isLoaded, products, orders, cats, shopy_settings, site = {}, stats } = ctx;\n  const settingSlug = site.settings;\n\n  return (\n    <Staff.View\n      title=\"Commerce\"\n      className=\"no-bg\"\n      back=\"/staff/\"\n      actions={\n        <div className=\"d-flex\">\n          <Staff.NavLink to=\"notifications/\" className=\"btn btn-round btn-secondary-3\" title=\"Action needed\">\n            <Icons.Notification />\n          </Staff.NavLink>\n\n          <Staff.NavLink to=\"settings/\" className=\"btn btn-round btn-secondary-3\" title=\"Shop settings\">\n            <Icons.Adjustments />\n          </Staff.NavLink>\n        </div>\n      }\n    >\n      <Staff.Section>\n        <div className=\"d-grid grid-2 grid-sm-3 grid-md-4 grid-lg-6\">\n          {shopy_settings?.config?.has_suppliers && (\n            <CardLink\n              title=\"Supplier Orders\"\n              tab=\"./\"\n              link={{ to: 'orders/', text: 'View all orders', perms: ['store.view_supplierorder'] }}\n            >\n              <h3>{orders?.count || 0}</h3>\n            </CardLink>\n          )}\n\n          <CardLink\n            title=\"Products\"\n            tab=\"./?tab=products\"\n            link={{ to: 'products/', text: 'View all products', perms: ['store.view_product'] }}\n          >\n            <h3>{products?.count || 0}</h3>\n          </CardLink>\n\n          <CardLink\n            tab=\"./?tab=categories\"\n            title=\"Categories\"\n            link={{ to: 'categories/', text: 'View all categories', perms: ['store.view_category'] }}\n          >\n            <h3>{cats?.count || 0}</h3>\n          </CardLink>\n        </div>\n      </Staff.Section>\n\n      {settingSlug && <PerformanceCard {...{ settingSlug }} />}\n\n      <Staff.Section title=\"Produits les plus vus\" className=\"my-2\">\n        <div className=\"d-grid grid-5 grid-md-10 gap-2\">\n          {stats?.prods?.map((p) => {\n            return (\n              <div key={p.name}>\n                <div style={{ position: 'relative' }}>\n                  <img\n                    src={getImgUrl(p?.cover_data?.thumb_sq)}\n                    title={`(${p?.count}) ${p?.name}`}\n                    alt={`${p?.name}:${p?.count}`}\n                    className=\"rounded\"\n                    style={{ objectFit: 'cover', width: '100%', height: 'auto', aspectRatio: '1/1' }}\n                  />\n                  <div\n                    className=\"d-flex align-items-center justify-content-center\"\n                    style={{\n                      position: 'absolute',\n                      bottom: 10,\n                      left: 5,\n                      padding: '2px 4px',\n                      backgroundColor: 'white',\n                      borderRadius: 6,\n                    }}\n                  >\n                    {p?.count}\n                  </div>\n                </div>\n                <div className=\"text-sm text-ellipsis\">{p?.name}</div>\n              </div>\n            );\n          })}\n        </div>\n      </Staff.Section>\n\n      <Staff.Section title=\"CatÃ©gories les plus vues\" className=\"my-2\">\n        <div className=\"d-grid grid-5 grid-md-10 gap-2\">\n          {stats?.cats?.map((p) => {\n            return (\n              <div key={p.name}>\n                <div style={{ position: 'relative' }}>\n                  <img\n                    src={getImgUrl(p?.cover_data?.thumb_sq)}\n                    title={`(${p?.count}) ${p?.name}`}\n                    alt={`${p?.name}:${p?.count}`}\n                    className=\"rounded\"\n                    style={{ objectFit: 'cover', width: '100%', height: 'auto', aspectRatio: '1/1' }}\n                  />\n                  <div\n                    className=\"d-flex align-items-center justify-content-center\"\n                    style={{\n                      position: 'absolute',\n                      bottom: 10,\n                      left: 5,\n                      padding: '2px 4px',\n                      backgroundColor: 'white',\n                      borderRadius: 6,\n                    }}\n                  >\n                    {p?.count}\n                  </div>\n                </div>\n                <div className=\"text-sm text-ellipsis\">{p?.name}</div>\n              </div>\n            );\n          })}\n        </div>\n      </Staff.Section>\n\n      <Staff.Section title=\"Nombre de produits par categorie\" className=\"my-2\">\n        {cats?.cat_count\n          ?.filter((i) => i.category__name)\n          ?.map(({ category__name, count }, i) => (\n            <div key={i}>\n              {category__name}: {count}\n            </div>\n          ))}\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\nconst CardLink: React.FC<{\n  title: string;\n  tab?: string;\n  link: { to: string; text: string; perms: string[] };\n  children: React.ReactNode;\n}> = ({ children, title, link, tab = './' }) => {\n  const { to } = link;\n  return (\n    <div className=\"card-link mb-3\">\n      <Staff.NavLink to={tab}>\n        {title && <div className=\"card-link-title\">{title}</div>}\n        {children}\n      </Staff.NavLink>\n\n      <Staff.Link to={to} requiredPerms={link.perms}>\n        {link?.text && `${link.text} Â»`}\n      </Staff.Link>\n    </div>\n  );\n};\n"],"names":["PerformanceCard","settingSlug","useSearchParams","stats","get","React","SharedDataCtx","title","actions","className","options","to","msg_count","visitor_count","views_count","ShopStaffIndexView","useDocumentTitle","ctx","products","isLoaded","orders","cats","shopy_settings","site","settings","back","config","has_suppliers","CardLink","tab","link","text","perms","count","prods","map","p","style","position","src","getImgUrl","cover_data","thumb_sq","name","alt","objectFit","width","height","aspectRatio","bottom","left","padding","backgroundColor","borderRadius","cat_count","filter","i","category__name","children","requiredPerms"],"sourceRoot":""}