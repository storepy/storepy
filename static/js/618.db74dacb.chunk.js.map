{"version":3,"file":"static/js/618.db74dacb.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/category/forms.tsx","../../../../shopy/shopy-storejs/src/category/views.Update.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { isRequired as isR } from '@miq/utiljs';\nimport { FormProps, SelectFieldProps, TFormCallbackProps, TFormUpdateProps } from '@miq/formjs';\nimport Form, { DescriptionField, NameField, TextFieldProps, useForm } from '@miq/formjs';\n\nimport { StaffCategory } from './utils';\nimport { CategoryChoicesType } from '../types';\n\nexport const CategoryCreateForm: React.FC<TFormCallbackProps> = (props) => {\n  const form = useForm({ name: '' });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return StaffCategory({})\n      .create(form.values)\n      .then((res) => props?.onSuccess?.(res))\n      .catch((err) => {\n        form.handleError(err);\n        props?.onFailure?.(err);\n      });\n  };\n  return (\n    <CategoryForm context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <CategoryForm.NameField error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value=\"Save category\" className=\"btn btn-primary\" />\n      </div>\n    </CategoryForm>\n  );\n};\n\ninterface ICategoryUpdateFormProps extends TFormUpdateProps {\n  instance: ReturnType<typeof StaffCategory>;\n  categories?: CategoryChoicesType;\n  onWillSubmit?: () => void;\n  fields: string[];\n}\n\nexport const CategoryUpdateForm: React.FC<ICategoryUpdateFormProps> = ({\n  instance = isR('Category instance'),\n  categories,\n  fields = [],\n  children,\n  ...props\n}) => {\n  const { onSuccess, onError, onWillSubmit, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return (\n    <CategoryForm {...rest} onSubmit={handleSubmit}>\n      {fields.includes('parent') && categories && (\n        <CategoryForm.ParentField\n          categories={categories}\n          label=\"Catégorie mère\"\n          error={context?.errors?.parent}\n          // text={`Ajoutez un nom qui décrit cette catégorie.\\nNous recommandons 65 caractères au max.`}\n        />\n      )}\n\n      {fields.includes('name') && (\n        <CategoryForm.NameField label=\"Nom\" error={context?.errors?.name} text={`65 caractères au max.`} />\n      )}\n\n      {fields.includes('description') && (\n        <CategoryForm.DescriptionField\n          label=\"Description\"\n          error={context?.errors?.description}\n          text={`Décrivez cet catégorie.`}\n        />\n      )}\n\n      {fields.includes('position') && (\n        <CategoryForm.PositionField\n          label=\"Position\"\n          error={context?.errors?.position}\n          // text={`Décrivez cet ca`}\n        />\n      )}\n      {children}\n    </CategoryForm>\n  );\n};\n\nexport const CategoryForm = (props: FormProps) => <Form {...props} />;\n\nCategoryForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez le nom de la catégorie ...\" {...props} required />\n);\n\nCategoryForm.DescriptionField = (props: TextFieldProps) => <DescriptionField {...props} />;\n\nCategoryForm.ParentField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} name=\"parent\" nullValue={{ label: 'Aucune ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nCategoryForm.PositionField = ({ label, error, ...props }: TextFieldProps) => (\n  <Form.Field {...{ label, error }}>\n    <Form.Text name=\"position\" type=\"number\" min={0} {...props} />\n  </Form.Field>\n);\n","import * as React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useRequest, Response } from '@miq/hookjs';\nimport { Icons, Loading } from '@miq/componentjs';\nimport Staff, { StaffImg } from '@miq/staffjs';\nimport Form, { useForm, MetaTitleField, MetaSlugField, MetaDescriptionField } from '@miq/formjs';\nimport { StaffImgAddButton, StaffImgDeleteButton } from '@miq/staffjs/';\n\nimport type { TCategory } from '../types';\nimport { PublishButton, UnPublishButton } from '../components';\n\nimport { StaffCategory } from './utils';\nimport { CategoryUpdateForm } from './forms';\nimport { SharedDataCtx, TSDState } from '@miq/contextjs';\n\nconst mapData2Values = (data: TCategory = {}): TCategory => {\n  return {\n    name: data.name || '',\n    parent: data.parent || '',\n    description: data.description || '',\n    is_published: data.is_published || false,\n\n    meta_title: data.meta_title || '',\n    meta_slug: data?.meta_slug || '',\n    meta_description: data?.meta_description || '',\n  };\n};\n\nexport default function CategoryStaffUpdateView() {\n  const { catSlug } = useParams();\n  const ctx = React.useContext<TSDState<{ category: TCategory; top_categories: any }>>(SharedDataCtx);\n  const { category, top_categories } = ctx;\n\n  const form = useForm<TCategory>(mapData2Values(category));\n\n  if (catSlug !== category?.slug) return <Loading icon />;\n\n  let instance = StaffCategory(category!);\n\n  const updateData = (data: any) => ctx.updateData({ category: { ...category, ...data } });\n\n  const handleSuccess = ({ data }: any) => updateData(data);\n\n  const { errors } = form;\n\n  return (\n    <Staff.View\n      title=\"Modifier cette catégorie\"\n      back=\"../\"\n      requiredPerms={['store.change_category']}\n      className=\"cat-staff-update-view\"\n    >\n      <div className=\"d-grid grid-md-4\">\n        <div className=\"p-md-1\">\n          <div className=\"p-1\">\n            <CoverCard {...{ instance, updateData }} />\n          </div>\n        </div>\n\n        {catSlug === category?.slug && (\n          <div className=\"span-md-3 span-lg-2\">\n            <Staff.Section title=\"Details\">\n              <CategoryUpdateForm\n                context={form}\n                instance={instance}\n                categories={top_categories}\n                fields={['name', 'parent', 'description']}\n                onSuccess={handleSuccess}\n              >\n                <div className=\"d-flex justify-content-center\">\n                  <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n                </div>\n              </CategoryUpdateForm>\n            </Staff.Section>\n\n            <Staff.Section title=\"SEO\">\n              <CategoryUpdateForm\n                context={form}\n                instance={instance}\n                fields={['meta_title', 'meta_description', 'meta_slug']}\n                onSuccess={handleSuccess}\n              >\n                <MetaTitleField error={errors.meta_title} />\n                <MetaSlugField error={errors.meta_slug} />\n                <MetaDescriptionField error={errors.meta_description} />\n\n                <div className=\"d-flex justify-content-center\">\n                  <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n                </div>\n              </CategoryUpdateForm>\n            </Staff.Section>\n          </div>\n        )}\n\n        <div className=\"span-lg-1\">\n          <div style={{ top: 0, position: 'sticky' }}>\n            {instance.is_published ? (\n              <UnPublishButton\n                instance={instance}\n                onSuccess={({ data }: any) => {\n                  updateData(data);\n                }}\n              >\n                Dépublier cette catégorie\n              </UnPublishButton>\n            ) : (\n              <PublishButton\n                instance={instance}\n                onSuccess={({ data }: any) => updateData(data)}\n                onFailure={(err: any) => form.handleError(err)}\n              >\n                Publier cette catégorie\n              </PublishButton>\n            )}\n          </div>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst CoverCard = (props: { instance: ReturnType<typeof StaffCategory>; updateData: (r: any) => void }) => {\n  const { updateData, instance } = props;\n  const form = useForm({ view: 'src' });\n\n  const img = Staff.Img(instance?.cover_data || {});\n\n  if (!img?.slug)\n    return (\n      <div className=\"d-flex align-items-center justify-content-center flex-column text-center border-1 rounded p-3\">\n        <StaffImgAddButton\n          onSuccess={({ data }) => {\n            instance\n              .updateCover(data.slug)\n              .then(({ data }) => updateData(data))\n              .catch((err) => {});\n          }}\n          label=\"Ajouter une image\"\n          className=\"btn-primary-3 btn-md\"\n        />\n      </div>\n    );\n\n  return (\n    <Form context={form} className=\"p-cover-update-form\">\n      <Staff.Section\n        border\n        actions={\n          <StaffImgDeleteButton\n            onSuccess={() => updateData({ cover_data: null, cover: null })}\n            instance={img}\n            className=\"btn-danger-3 btn-square\"\n          >\n            <Icons.Trash />\n          </StaffImgDeleteButton>\n        }\n        className=\"p-image-card\"\n      >\n        <StaffImg.Image {...img} />\n      </Staff.Section>\n    </Form>\n  );\n};\n"],"names":["CategoryCreateForm","props","form","useForm","name","CategoryForm","context","onSubmit","e","preventDefault","StaffCategory","create","values","then","res","onSuccess","catch","err","handleError","onFailure","className","NameField","error","errors","value","CategoryUpdateForm","instance","isR","categories","fields","children","onError","onWillSubmit","rest","fd","forEach","field","update","includes","ParentField","label","parent","text","DescriptionField","description","PositionField","position","placeholder","required","nullValue","items","map","cat","key","type","min","CategoryStaffUpdateView","catSlug","useParams","ctx","React","SharedDataCtx","category","top_categories","data","is_published","meta_title","meta_slug","meta_description","mapData2Values","slug","icon","updateData","handleSuccess","title","back","requiredPerms","CoverCard","style","top","view","img","Staff","cover_data","border","actions","cover","updateCover"],"sourceRoot":""}