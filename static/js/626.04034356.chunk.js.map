{"version":3,"file":"static/js/626.04034356.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-orderjs/src/components.tsx","../../../../shopy/shopy-orderjs/src/forms/fields.tsx","../../../../shopy/shopy-orderjs/src/views.Index.tsx","../../../../shopy/shopy-orderjs/src/index.tsx","../../../../shopy/shopy-orderjs/src/models.tsx","../../../../shopy/shopy-storejs/src/Product/Size/index.tsx","../../../../shopy/shopy-storejs/src/Product/buttons.tsx","../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/forms/fields.tsx","../../../../shopy/shopy-storejs/src/Product/forms/index.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/Supplier/forms.tsx","../../../../shopy/shopy-storejs/src/Supplier/SupplierProductList.tsx","../../../../shopy/shopy-storejs/src/Supplier/OrderUpdateView.tsx","../../../../shopy/shopy-storejs/src/Supplier/components.tsx","../../../../shopy/shopy-storejs/src/Supplier/index.tsx","../../../../shopy/shopy-storejs/src/Supplier/models.tsx","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events.tsx","../../../../shopy/shopy-storejs/src/types.ts","../../../../shopy/shopy-storejs/src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TCustomer } from './types';\n\nexport const CustomerCard = ({ data, ...props }: { data: TCustomer }) => {\n  if (!data || !data.slug) return null;\n\n  const { first_name, last_name, email, phone } = data;\n\n  return (\n    <div className=\"customer-card\">\n      <div className=\"fw-bold\">{`${first_name} ${last_name}`}</div>\n      <div className=\"\">{phone}</div>\n      <div className=\"text-muted text-sm\">{email}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { EmailField, FirstNameField, TextFieldProps } from '@miq/formjs';\nimport { Customer } from '../models';\nimport { TCustomer } from '../types';\nimport { Response } from '@miq/utiljs';\n\nconst CustomerSelect = ({ customers, onItemClick }: { customers: TCustomer[]; onItemClick: (p) => void }) => {\n  return (\n    <div className=\"mt-1 border-1 rounded bg-white\">\n      {customers.map((cust) => {\n        return (\n          <div\n            className=\"d-flex justify-content-between p-1 border-bottom\"\n            onClick={() => onItemClick(cust)}\n            key={cust?.slug}\n          >\n            <div className=\"fw-bold\">{`${cust.first_name} ${cust.last_name}`}</div>\n            <div className=\"text-muted text-sm\">{cust.phone}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const CustomerLNameField = ({\n  label = 'Nom',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps & { allowSuggestions?: boolean; onCustomerSelect?: (p: TCustomer) => void }) => {\n  const [customers, setCustomers] = React.useState<TCustomer[]>([]);\n\n  const handleDebounce = ({ value }) => {\n    if (!allowSuggestions || !value || value.length < 3) return;\n\n    Customer()\n      .find(value)\n      .then((r) => {\n        const items = new Response(r).items;\n\n        if (items.length > 0) setCustomers(items);\n        else setCustomers([]);\n      })\n      .catch((err) => {});\n  };\n\n  const { onCustomerSelect, allowSuggestions, ...rest } = props;\n\n  return (\n    <div className=\"\">\n      <Form.Field {...{ label, error, text }} className={fieldCN}>\n        <div className=\"span-md-3\">\n          <Form.Text required name=\"last_name\" {...rest} maxLength={99} minLength={2} onDebounce={handleDebounce} />\n\n          {allowSuggestions && Boolean(customers.length) && (\n            <CustomerSelect\n              customers={customers}\n              onItemClick={(p) => {\n                onCustomerSelect?.(p);\n              }}\n            />\n          )}\n        </div>\n      </Form.Field>\n    </div>\n  );\n};\n\nexport const CustomerFNameField = (props: TextFieldProps) => <FirstNameField required {...props} />;\nexport const CustomerEmailField = (props: TextFieldProps) => <EmailField {...props} />;\n\nexport const CustomerPhoneField = ({\n  label = 'Numéro de téléphone',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps) => (\n  <Form.Field {...{ label, error, text }} className={fieldCN}>\n    <Form.Phone required name=\"phone\" {...props} />\n  </Form.Field>\n);\n\nexport const CustomerFields = {\n  LName: CustomerLNameField,\n  FName: CustomerFNameField,\n  Email: CustomerEmailField,\n  Phone: CustomerPhoneField,\n};\n","import { ViewSection } from '@miq/componentjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CustomerCard } from './components';\nimport { Cart } from './models';\nimport { TCart } from './types';\n\nexport default function SalesIndexView() {\n  const { res, setRes, loading, ...request } = useRequest(() => Cart().list());\n\n  const r = new Response<TCart>(res);\n\n  return (\n    <Staff.View\n      title=\"Sales\"\n      actions={\n        <>\n          <Staff.Link to=\"cart/\" className=\"btn btn-primary\">\n            Ajouter une commande\n          </Staff.Link>\n        </>\n      }\n    >\n      {r.items?.map((i) => {\n        const { customer, items = [] } = i || {};\n\n        return (\n          <ViewSection key={i.slug}>\n            <Link to={`cart/${i.slug}/`}>\n              <CustomerCard data={customer} />\n              {items.map((i) => {\n                return <div key={i.slug}>{i?.product?.name}</div>;\n              })}\n            </Link>\n          </ViewSection>\n        );\n      })}\n    </Staff.View>\n  );\n}\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport SalesIndexView from './views.Index';\n\nconst CartCreateView = React.lazy(() => import('./views.CartCreate'));\nconst CartUpdateView = React.lazy(() => import('./views.CartUpdate'));\n// const OrderCreateView = React.lazy(() => import('./OrdCreateView'));\n\nexport default function SalesStaffRoutes() {\n  return (\n    <Routes>\n      {/* <Route path=\":catMetaSlug/:prodMetaSlug/\" element={<ProductView />} /> */}\n      {/* <Route path=\"cart/\" element={<CartDetailView />} /> */}\n      <Route path=\"cart/:cartSlug/\" element={<CartUpdateView />} />\n      <Route path=\"cart/\" element={<CartCreateView />} />\n      <Route path=\"/\" element={<SalesIndexView />} />\n    </Routes>\n  );\n}\n\nexport { CustomerFields } from './forms/fields';\nexport * from './types';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCart, TCustomer } from './types';\n\nconst timeout = 5000;\n\nclass CustomerService extends StaffService<TCustomer> {\n  find(q: string) {\n    return this.list({ params: { q } });\n  }\n}\n\nexport const Customer = (data: TCustomer = {}) => {\n  return StaffModel<TCustomer, CustomerService>(data, 'customers', CustomerService);\n};\n\nexport type TCustomerInstance = ReturnType<typeof Customer>;\n\n/**\n * CART\n */\n\nclass CartService extends StaffService<TCart> {\n  addItem(prodSlug: string, size: string, qty?: string) {\n    return this.post(`${this._path}item/${prodSlug}/`, { size, qty });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = (data: TCart = {}) => {\n  return StaffModel<TCart, CartService>(data, 'carts', CartService);\n};\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n\n// export const Cart = (data: any) => {\n//   getIsValid(data: Record<string, any>): boolean {\n//     return data && data.slug && data.products && Boolean(data.items.length);\n//   }\n\n//   getItem(meta_slug: string) {\n//     return;\n//     // return this.items?.find((i: any) => i.product.meta_slug === meta_slug);\n//   }\n\n//   postItem(prod_meta_slug: string, values: any) {\n//     // values may contain size and other info\n\n//     if (this.slug && values) values.cart_slug = this.slug;\n//     return this.postPath(`${this._endpoint}items/`, { ...values, prod_meta_slug });\n//   }\n\n//   patchItem(itemSlug: string, values: any) {\n//     return this.patchPath(`${this._path}/item/${itemSlug}/`, values);\n//   }\n//   deleteItem(itemSlug: string) {\n//     return this.deletePath(`${this._path}/item/${itemSlug}/`);\n//   }\n\n//   patchCustomer(values: any) {\n//     if (values && this?.customer?.slug) values.cust_slug = this.customer.slug;\n//     return this.patchPath(`${this._path}/customer/`, values);\n//   }\n//   postCustomer(values: any) {\n//     return this._s.post(`${this._path}/customer/`, values);\n//   }\n// }\n\n// //   const methods = {\n// //     getItem,\n// //     postItem,\n// //     patchItem,\n// //     deleteItem,\n// //     patchCustomer,\n// //     postCustomer,\n// //   };\n\n// //   return Object.assign({ isValid: getIsValid() }, CrudModel(data, 'api/carts/'), methods);\n// // };\n\n// export const Customer = (data: any) => {\n//   // return Object.assign({}, CrudModel(data, 'api/carts/'), methods);\n// };\n","import * as React from 'react';\nimport Form, { FormFieldProps, IFormCallbackProps, SelectFieldProps, TextFieldProps, useForm } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { StaffProduct } from '../models';\nimport { TProductSize } from '../../types';\n\ntype UpdateFormProps = IFormCallbackProps & {\n  data: any;\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\nexport const SizeUpdateForm = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  const form = useForm<TProductSize>({\n    name: data.name || '',\n    code: data.code || '',\n    quantity: data.quantity || 0,\n  });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n\n  const { onSuccess, onError } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchSize(data.slug, form.values)\n          .then((res: any) => onSuccess?.(res))\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <SizeDeleteButton {...{ productInstance, data, onSuccess, onError }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst commonSizes: { [k: string]: any } = {\n  xs: { name: 'Extra-small', code: 'XS' },\n  s: { name: 'Small', code: 'S' },\n  m: { name: 'Medium', code: 'M' },\n  l: { name: 'Large', code: 'L' },\n  xl: { name: 'Extra-large', code: 'XL' },\n};\nconst formDefaultValues: TProductSize = { name: '', code: '', quantity: 1 };\n\nexport const SizeAddForm = ({ productInstance, ...props }: Omit<UpdateFormProps, 'data'>) => {\n  const form = useForm<TProductSize>(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postSize(form.values)\n          .then((res: any) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-flex my-2\">\n        <Button\n          onClick={() => form.setValues({ ...form.values, name: 'One-size', code: 'ONESIZE' })}\n          className=\"size-select-btn me-1\"\n        >\n          One/size\n        </Button>\n\n        {Object.keys(commonSizes).map((key: string) => {\n          const data = commonSizes[key];\n          return (\n            <Button\n              onClick={() => form.setValues({ ...form.values, ...data })}\n              className=\"size-select-btn me-1\"\n              key={key}\n            >\n              {key}\n            </Button>\n          );\n        })}\n      </div>\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst SizeNameField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        placeholder=\"Entrez le nom de la taille ...\"\n        {...rest}\n        required\n        name=\"name\"\n        maxLength={20}\n        minLength={2}\n      />\n    </Form.Field>\n  );\n};\nconst SizeCodeField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez le code de la taille ...\" {...rest} required name=\"code\" maxLength={10} />\n    </Form.Field>\n  );\n};\n\nexport const SizeQuantityField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez la quantité ...\" {...rest} required type=\"number\" name=\"quantity\" min={0} />\n    </Form.Field>\n  );\n};\n\nexport const SizeSelectField = (props: SelectFieldProps & { sizes: TProductSize[] }) => {\n  const { label, text, error, sizes, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"size\" nullValue={{ label: 'Sélectionnez une taille ...' }}>\n        {sizes?.map((size) => {\n          return <Form.Option label={size.code?.toUpperCase()} value={size.slug!} key={size.slug} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nconst SizeSkuField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Sku\" {...rest} name=\"sku\" maxLength={99} minLength={2} />\n    </Form.Field>\n  );\n};\n\nconst SizeDeleteButton = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer une taille</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteSize(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onError?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this size:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"size-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\n\nimport { getCN } from '@miq/utiljs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { ImgAddButtonProps, StaffImgAddButton } from '@miq/staffjs';\n\nimport { emitter } from '../events';\n\nimport { TStaffProductInstance } from './models';\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: TStaffProductInstance;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\n/**\n * Button component for deleting a product\n * ```js\n * <ProductDeleteButton instance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TStaffProductInstance>, 'context'> & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\nimport { NavLink, useParams, useSearchParams } from 'react-router-dom';\n\nimport { getCN } from '@miq/utiljs';\nimport { Button, Icons, ViewSection } from '@miq/componentjs';\nimport Staff, { StaffImg } from '@miq/staffjs';\n\nimport { emitter } from '../events';\nimport { TSupplierOrderInstance } from '../Supplier';\nimport { TProduct, TProductStageData } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\n\nexport const ProductListItem = ({\n  item,\n  ...props\n}: {\n  item: TProduct;\n  orderInstance?: TSupplierOrderInstance;\n  stages: TProductStageData[];\n  params?: URLSearchParams;\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  if (!item?.slug) return null;\n\n  const instance = StaffProduct(item);\n\n  return (\n    <ViewSection\n      border\n      header={\n        <div className=\"\" onClick={() => setOpen(!open)}>\n          <ProductListItemHeader {...props} {...{ instance }} />\n        </div>\n      }\n      className=\"mb-1\"\n    />\n  );\n};\n\nconst ProductListItemHeader = ({\n  instance,\n  ...props\n}: {\n  instance: TStaffProductInstance;\n  orderInstance?: TSupplierOrderInstance;\n  stages: TProductStageData[];\n  params?: URLSearchParams;\n}) => {\n  const { orderInstance, stages, params } = props;\n  const { supplier_item = { cost: 0 }, stage } = instance;\n\n  const stageData = stages?.find((i) => i.value === stage);\n  const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n\n  return (\n    <div className=\"d-flex\">\n      <div className=\"d-flex flex-1\">\n        <div style={{ width: 48 }}>\n          <Staff.Img.Thumb src=\"src\" {...instance.cover_data} className=\"rounded\" />\n        </div>\n\n        <div className=\"ms-1 d-grid grid-md-4 flex-1 gap-2\">\n          <div className=\"span-md-2\">\n            {instance.is_oos && <span className=\"text-sm text-danger\">Out of stock</span>}\n            <div className=\"text-sm d-flex align-items-center\">\n              <div className=\"text-ellipsis me-1 fw-bold\">{instance.name_truncated}</div>\n              <PublishedIcon show={instance.is_published || false} />\n            </div>\n\n            <div className=\"d-flex text-sm\">\n              <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n              <div className=\"text-muted px-1\">{`|`}</div>\n              {supplier_item && supplier_item?.cost && (\n                <div className=\"text-muted\">{`${supplier_item?.cost} ${orderInstance?.currency || 'USD'}`}</div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"d-flex align-items-center\">\n            <Button\n              className={getCN(['btn-round', instance.is_pinned && 'btn-primary-3'])}\n              style={{ width: 20, height: 20, padding: 8 }}\n              onClick={(e) => {\n                e.stopPropagation();\n                instance.update({ is_pinned: !instance.is_pinned }).then(({ data }) => {\n                  emitter.update(data);\n                });\n              }}\n              title=\"This product is pinned\"\n            >\n              <Icons.PinAngle />\n            </Button>\n\n            <Staff.Link to={`./${to}`} className=\"btn btn-square btn-primary-3 ms-1\" title=\"Edit product\">\n              <Icons.PencilSquare />\n            </Staff.Link>\n          </div>\n\n          <div className=\"text-sm text-left\">\n            <div>\n              <span className=\"\">\n                {instance?.category_data?.name || \"' - '\"}\n                {supplier_item && <span className=\"text-muted\">{` | ${supplier_item.category}`}</span>}\n              </span>\n            </div>\n\n            <span>{`Sizes: ${instance.size_count}`}</span>\n            {stageData && <span className=\"text-muted\">{` - ${stageData.label}`}</span>}\n\n            {supplier_item && (\n              <a className=\"ms-1\" href={supplier_item.url} target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"d-flex align-items-center\">\n        \n      </div> */}\n    </div>\n  );\n};\n\nexport const ProductCardItem = ({ data, ...props }: { data: TProduct }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: TProduct[];\n  itempath: string;\n};\n\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  const { prodSlug } = useParams();\n\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: TProduct) => {\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug} className={getCN([prodSlug === item.slug && 'active'])}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import Form, { CheckboxFieldProps, SelectFieldProps, TextChoicesType, TextFieldProps } from '@miq/formjs';\nimport { DescriptionField as DField, NameField as NField } from '@miq/formjs';\nimport { CategoryChoicesType } from '../../types';\n\nexport const NameField = (props: TextFieldProps) => (\n  <NField placeholder=\"Entrez un titre clair et concis ...\" {...props} />\n);\nexport const DescriptionField = (props: TextFieldProps) => (\n  <DField placeholder=\"Décrivez les caractéristiques et les avantages ...\" {...props} />\n);\n\nexport const CategoryField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nexport const SalePriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        required\n        placeholder=\"Prix réduit\"\n        {...rest}\n        type=\"number\"\n        name=\"sale_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport const OnSaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_on_sale\" />\n    </Form.Field>\n  );\n};\n\nexport const PresaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_pre_sale\" />\n    </Form.Field>\n  );\n};\n\nexport const OosCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = 'En rupture de stock', text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_oos\" />\n    </Form.Field>\n  );\n};\n\nexport const PresaleTextField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.TextAreaX placeholder=\"\" {...rest} name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </Form.Field>\n  );\n};\n\nexport const RetailPriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        required\n        placeholder=\"Prix\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        {...rest}\n        type=\"number\"\n        name=\"retail_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport type TProductStageSelectFieldProps = SelectFieldProps & { stages: TextChoicesType };\n\nexport const StageSelectField = (props: TProductStageSelectFieldProps) => {\n  const { label, text, error, required = true, stages, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select required={required} name={'stage'} nullValue={{ label: 'Select stage' }} {...rest}>\n        {stages?.map?.((stage) => {\n          return <Form.Option {...stage} key={stage.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nexport const IsExplicitCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = 'Exclude from facebook feed', text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_explicit\" />\n    </Form.Field>\n  );\n};\n","import * as React from 'react';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\n\nimport { Button } from '@miq/componentjs';\nimport { getCN, isRequired as isR } from '@miq/utiljs';\n\nimport Form, { FormProps, IFormCallbackProps, IFormUpdateProps, useForm } from '@miq/formjs';\n\nimport { emitter } from '../../events';\nimport { CategoryChoicesType } from '../../types';\nimport { SupplierOrder } from '../../Supplier';\nimport { StaffProduct, TStaffProductInstance } from '../models';\n\nimport * as ProductFields from './fields';\n\n/**\n *\n */\n\ninterface IProductUpdateFormProps extends IFormUpdateProps<TStaffProductInstance> {\n  onWillSubmit?: () => void;\n  fields?: string[];\n}\n\nexport const ProductQuickUpdateForm = (\n  props: Omit<IProductUpdateFormProps, 'context'> & { categories: CategoryChoicesType; orderSlug?: string }\n) => {\n  const { instance, categories, orderSlug, ...rest } = props;\n\n  const form = useForm({\n    name: instance.name || '',\n    category: instance.category || '',\n    description: instance.description || '',\n    retail_price: instance?.retail_price || 0.0,\n    is_pre_sale: instance.is_pre_sale || false,\n    is_pre_sale_text: instance.is_pre_sale_text || '',\n  });\n\n  const { errors } = form;\n  const { fields = ['name', 'category', 'description', 'retail_price', 'is_pre_sale', 'is_pre_sale_text'] } = props;\n\n  return (\n    <ProductUpdateForm {...rest} context={form} instance={instance} fields={fields}>\n      <ProductForm.NameField error={errors.name} />\n\n      <ProductForm.DescriptionField error={errors.description} />\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        {categories && <ProductForm.CategoryField categories={categories} error={errors.category} />}\n        <ProductForm.RetailPriceField error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label=\"En pré-vente\" error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField label=\"Pre-sale text\" placeholder=\"Explain ...\" error={errors.is_pre_sale_text} />\n      )}\n\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div>\n          {orderSlug && instance?.slug && (\n            <Button\n              onClick={() => {\n                SupplierOrder({ slug: orderSlug }).destroyItem(instance.slug!);\n              }}\n            >\n              Remove from order\n            </Button>\n          )}\n        </div>\n\n        <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 btn-md\" />\n      </div>\n    </ProductUpdateForm>\n  );\n};\n\nexport function ProductUpdateForm({ children, ...props }: IProductUpdateFormProps) {\n  const {\n    instance = isR('StaffProduct instance'),\n    fields = isR('fields instance'),\n    onSuccess,\n    onError,\n    ...rest\n  } = props;\n\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props?.onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      if (field == 'is_pre_sale_dt' && !value) return;\n\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then(({ data }: any) => {\n        onSuccess?.(data);\n        emitter.update(data);\n      })\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm {...rest} onSubmit={handleSubmit}>\n      {children}\n    </ProductForm>\n  );\n}\n\n/**\n *\n */\n\nexport interface ProductCreateFormProps extends IFormCallbackProps {}\n\nexport const ProductCreateForm: React.FC<ProductCreateFormProps> = (props) => {\n  const form = useForm({ name: '', retail_price: '', description: '' });\n\n  const { errors } = form;\n\n  const handleCreate = (e: React.FormEvent) => {\n    e.preventDefault();\n    StaffProduct()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => form.handleError(err));\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleCreate}>\n      <ProductForm.NameField label=\"Nom du produit\" error={errors.name} />\n      <ProductForm.RetailPriceField required={false} label=\"Prix du produit\" error={errors.retail_price} />\n      <ProductForm.DescriptionField label=\"Description du produit\" error={errors.description} />\n\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductForm>\n  );\n};\n\n/**\n *\n */\n\nexport const ProductForm = (props: FormProps) => <Form {...props} />;\n\n/**\n *\n */\n\nProductForm.NameField = ProductFields.NameField;\nProductForm.DescriptionField = ProductFields.DescriptionField;\nProductForm.CategoryField = ProductFields.CategoryField;\nProductForm.SalePriceField = ProductFields.SalePriceField;\nProductForm.OnSaleCheckboxField = ProductFields.OnSaleCheckboxField;\nProductForm.OosCheckboxField = ProductFields.OosCheckboxField;\nProductForm.PresaleTextField = ProductFields.PresaleTextField;\nProductForm.RetailPriceField = ProductFields.RetailPriceField;\nProductForm.StageSelectField = ProductFields.StageSelectField;\nProductForm.PresaleCheckboxField = ProductFields.PresaleCheckboxField;\nProductForm.IsExplicitCheckboxField = ProductFields.IsExplicitCheckboxField;\n\n//\n//\n//\n\nexport const ProductListFilterForm = ({\n  children,\n  ...props\n}: {\n  children?: React.ReactNode;\n  categories?: CategoryChoicesType;\n}) => {\n  const [params, setParams] = useSearchParams();\n  const [q, setQ] = React.useState<string>(params.get('q') || '');\n  const { categories, ...rest } = props;\n\n  return (\n    <form\n      {...rest}\n      action=\".\"\n      method=\"GET\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (!q) params.delete('q');\n        else params.set('q', q);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {children || (\n        <>\n          <div className=\"mb-2 d-flex\">\n            <input\n              type=\"text\"\n              name=\"q\"\n              value={q}\n              onChange={(e) => {\n                const { value } = e.target;\n                setQ(value);\n                if (!value && params.get('q')) params.delete('q');\n              }}\n              className=\"miq-form-input flex-1\"\n              placeholder=\"Cherchez un produit par nom, categorie ou numero de serie ...\"\n            />\n            <Form.Submit value={'Search'} className=\"btn-primary-3 ms-1\" />\n          </div>\n\n          {categories && <ProductListFilterForm.Category {...{ params, setParams, categories }} />}\n\n          <ProductListFilterForm.Published {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.Sale {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.PreSale {...{ params, setParams }} className=\"mb-1\" />\n        </>\n      )}\n    </form>\n  );\n};\n\ntype TParamsProps = {\n  params: URLSearchParams;\n  setParams: (\n    nextInit: URLSearchParamsInit,\n    navigateOptions?:\n      | {\n          replace?: boolean | undefined;\n          state?: any;\n        }\n      | undefined\n  ) => void;\n};\n\ntype QuerySelectFieldProps = TParamsProps & {\n  emptyLabel?: string;\n  name: string;\n  children?: React.ReactNode;\n  className?: string;\n};\n\nProductListFilterForm.Category = (props: Omit<QuerySelectFieldProps, 'name'> & { categories: CategoryChoicesType }) => {\n  const { categories, ...rest } = props;\n\n  return (\n    <QuerySelectField emptyLabel=\"Categorie ...\" {...rest} name=\"cat\">\n      <option value=\"no-cat\">Sans catégorie</option>\n\n      {categories.items.map((cat) => {\n        return (\n          <option value={cat.value} key={cat.slug}>\n            {cat.label}\n          </option>\n        );\n      })}\n    </QuerySelectField>\n  );\n};\n\nProductListFilterForm.Published = (props: Omit<QuerySelectFieldProps, 'name'>) => {\n  return (\n    <QuerySelectField emptyLabel=\"Tous les produits ...\" {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"pinned\">Produits épinglés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n      <option value=\"explicit\">Produits exclus de Facebook</option>\n    </QuerySelectField>\n  );\n};\n\nconst QuerySelectField = ({ children, ...props }: QuerySelectFieldProps) => {\n  const { name, params, setParams, emptyLabel } = props;\n  return (\n    <select\n      className={getCN(['miq-select', props.className])}\n      name={name}\n      value={params.get(name) || ''}\n      onChange={(e) => {\n        const { value } = e.target;\n\n        if (!value) params.delete(name);\n        else params.set(name, value);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {emptyLabel && <option value=\"\">{emptyLabel}</option>}\n      {children}\n    </select>\n  );\n};\n\nProductListFilterForm.PreSale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"presale\" label=\"En pré-vente\" />;\n};\n\nProductListFilterForm.Sale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"sale\" label=\"En promo\" />;\n};\n\ntype QueryToggleFieldProps = Omit<QuerySelectFieldProps, 'emptyLabel'> & { label: string; inputId?: string };\n\nconst QueryToggleField = (props: QueryToggleFieldProps) => {\n  const { label, name, params, setParams, inputId } = props;\n\n  return (\n    <div className={getCN(['miq-query-filter-toggle d-flex align-items-center', props.className])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox me-1\"\n        id={inputId}\n        onChange={(e) => {\n          const { checked } = e.target;\n          if (!checked) params.delete(name);\n          else params.set(name, `${checked}`);\n          params.delete('page');\n          setParams(params);\n        }}\n        checked={Boolean(params.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TProduct } from '../types';\n\nclass StaffProductService extends StaffService<TProduct> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: TProduct) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<TProduct, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n\nexport type TStaffProductInstance = ReturnType<typeof StaffProduct>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (\n  orderSlug?: string,\n  filter?: { published?: 'include' | 'exclude'; atc?: 0 | 1 }\n) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale, q, ...filter };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct({}).list({ params: searchParams }), {\n    refreshDeps: [q, page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import * as React from 'react';\nimport Form, {\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  useForm,\n  TextFieldProps,\n  CheckboxFieldProps,\n  SelectFieldProps,\n  TextChoicesType,\n} from '@miq/formjs';\nimport { SupplierOrder } from './models';\nimport { ProductForm } from '../Product/forms';\nimport { TProductStageSelectFieldProps } from '../Product/forms/fields';\n\ninterface ISupplierOrderUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof SupplierOrder>;\n  fields: string[];\n}\n\nexport const SupplierOrderUpdateForm: React.FC<ISupplierOrderUpdateFormProps> = ({ instance, fields, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <SupplierOrderForm {...rest} onSubmit={handleSubmit} />;\n};\n\n//#region ==================================== SUPPLIER ORDER FORM\n\nexport const SupplierOrderForm = (props: FormProps) => <Form {...props} />;\n\nSupplierOrderForm.NameField = (props: TextFieldProps) => {\n  const { label = 'Name', text = 'Write a name to help remember your order.', error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Nom\" maxLength={99} {...rest} name=\"name\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.OrderIDField = (props: TextFieldProps) => {\n  const { label = 'Order ID', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Order ID\" maxLength={99} {...rest} name=\"order_id\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.IsPaidField = (props: CheckboxFieldProps) => {\n  const { label = 'Payé', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error} checkbox>\n      <Form.Checkbox {...rest} name=\"is_paid\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.TotalCostField = (props: TextFieldProps) => {\n  const { label = 'Coût total', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text min=\"0\" step=\"0.01\" {...rest} required type=\"number\" name=\"total_cost\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.CurrencyField = (props: SelectFieldProps & { currencies: TextChoicesType }) => {\n  const { label, text = 'Select the supplier currency.', error, currencies, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"currency\" nullValue={{ label: 'Sélectionnez une monnaie ...' }}>\n        {currencies?.map((curr) => {\n          return <Form.Option {...curr} key={curr.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.SupplierField = (props: SelectFieldProps & { suppliers: TextChoicesType }) => {\n  const { label, text = 'Select the supplier.', error, suppliers, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"supplier\" nullValue={{ label: 'Sélectionnez le supplier ...' }}>\n        {suppliers?.map((supplier) => {\n          return <Form.Option {...supplier} key={supplier.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.StageSelectField = (props: TProductStageSelectFieldProps) => (\n  <ProductForm.StageSelectField required={false} {...props} />\n);\n\n//#endregion ==================================== SUPPLIER ORDER FORM\n\ninterface ISupplierOrderProductAddFormProps extends IFormCallbackProps {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  children?: React.ReactNode;\n}\n\nexport const SupplierOrderProductAddForm = ({ children, ...props }: ISupplierOrderProductAddFormProps) => {\n  const { orderInstance, onSuccess, onError } = props;\n  const supplier = orderInstance?.supplier?.toLowerCase();\n\n  const form = useForm({ supplier_name: supplier, url: '' });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const { url } = form.values;\n\n    const handleSuccess = (res: any) => {\n      setLoading(false);\n      form.setValue('url', '');\n      return onSuccess?.(res);\n    };\n\n    const handleError = (err: any) => {\n      form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n      setLoading(false);\n      return onError?.(err);\n    };\n\n    const urlErrMsg = `Invalid Url: does not match supplier ${orderInstance.supplier}`;\n\n    switch (supplier) {\n      case 'fnova':\n        if (!url.includes('fashionnova')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postFnova(url).then(handleSuccess).catch(handleError);\n      case 'plt':\n        if (!url.includes('prettylittlething')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postPlt(url).then(handleSuccess).catch(handleError);\n\n      default:\n        if (!url.includes(supplier)) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postShein(url).then(handleSuccess).catch(handleError);\n    }\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n      <Form.Field error={form.errors.url}>\n        <div className=\"d-flex flex-column flex-md-row align-items-center\">\n          <Form.Text\n            required\n            autoFocus\n            name=\"url\"\n            type=\"url\"\n            placeholder={`Add ${supplier} product source url ...`}\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <div className=\"mt-1 mt-md-0\">\n            <Form.Submit value=\"Add product\" className=\"btn btn-primary-3\" disabled={isLoading} />\n          </div>\n        </div>\n      </Form.Field>\n\n      {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n    </Form>\n  );\n};\n\nconst u = 'https://www.fashionnova.com/products/jessa-denim-mini-dress-white';\nconst shein404 = 'https://us.shein.com/Clear-Acrylic-Frame-Glasses-p-1792787-cat-2842.html';\nconst fnovavariant = 'https://www.fashionnova.com/products/kayla-seamless-bandeau-olive?variant=12191869272188';\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport './supplier-product-list.scss';\n\nimport Staff from '@miq/staffjs';\nimport { Button, HorizontalScrollGridLayout, Icons, Pagination, ViewSection } from '@miq/componentjs';\n\nimport { StaffProduct } from '../Product';\nimport { useProductListRequest } from '../Product';\nimport { ProductForm, ProductQuickUpdateForm } from '../Product/forms';\nimport { ProductDeleteButton } from '../Product/';\nimport { CategoryChoicesType, TProduct, TProductStageData } from '../types';\n\nimport { SupplierOrder } from './models';\nimport Form, { useForm } from '@miq/formjs';\n\nexport type SupplierProductListProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nexport default function SupplierProductList({\n  orderInstance,\n  refreshOrder,\n  categories,\n  stages,\n}: SupplierProductListProps) {\n  const { ordSlug } = useParams();\n  const { res = { data: { results: [] } }, refresh } = useProductListRequest(ordSlug);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const form = useForm({ category: '' });\n\n  const updateCategories = () => {\n    const { category } = form.values;\n    if (!category) return;\n\n    orderInstance\n      .updateCategories(category, selected)\n      .then((r) => {\n        refresh();\n        form.setValue('category', '');\n      })\n      .catch((err) => {});\n  };\n\n  const isSelected = selected.length !== 0;\n\n  return (\n    <Staff.Section\n      actions={\n        isSelected && (\n          <>\n            <span className=\"p-1\" onClick={() => setSelected([])} style={{ cursor: 'pointer' }}>\n              [x]\n            </span>\n          </>\n        )\n      }\n      footer={<Pagination {...res.data} component={Staff.NavLink} to />}\n      className=\"supplier-p-list\"\n    >\n      {res.data?.results.length ? (\n        <>\n          {isSelected && (\n            <div className=\"bg-white p-1\" style={{ position: 'sticky', top: 0, zIndex: 1000 }}>\n              <Form context={form}>\n                <div className=\"d-flex\">\n                  {categories && <ProductForm.CategoryField categories={categories} error={form.errors.category} />}\n                </div>\n              </Form>\n\n              <Button className=\"btn-primary\" onClick={updateCategories}>\n                Publier\n              </Button>\n            </div>\n          )}\n\n          {res.data.results.map((item: TProduct) => (\n            <SupplierProductListItem\n              {...{ orderInstance, categories, selected, setSelected, refreshOrder, stages }}\n              instance={StaffProduct(item)}\n              key={item.slug}\n            />\n          ))}\n        </>\n      ) : null}\n    </Staff.Section>\n  );\n}\n\ntype TSPListItemProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  instance: ReturnType<typeof StaffProduct>;\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nconst ItemCheckBox = ({ instance, selected, setSelected }: TSPListItemProps) => (\n  <input\n    type=\"checkbox\"\n    name=\"selected\"\n    className=\"me-2\"\n    checked={selected.includes(instance.slug!)}\n    onChange={({ target }) => {\n      const { checked } = target;\n      if (checked) setSelected([...selected, instance.slug!]);\n      else setSelected((selected) => selected.filter((i) => i !== instance.slug));\n    }}\n  />\n);\n\nconst SupplierProductListItem = (props: TSPListItemProps) => {\n  // Used for deleted items\n  const [hide, setHide] = React.useState<boolean>(false);\n\n  const { instance, categories } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  if (hide) return null;\n\n  const { supplier_item, stage } = instance;\n  const { orderInstance, stages = [] } = props;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-items-center\">\n          <ItemCheckBox {...props} />\n\n          <div style={{ width: 48, height: 48 }} onClick={() => setOpen(!open)}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1\">\n            <div className=\"text-ellipsis\">{instance.name}</div>\n            <div className=\"text-sm\">\n              {instance.is_on_sale && instance.sale_price && (\n                <span className=\"\">\n                  {instance.sale_price} {`<-`}{' '}\n                </span>\n              )}\n              <span className=\"\">{instance.retail_price}</span>\n              <span className=\"text-muted\">\n                {' | '}\n                {supplier_item.cost} {orderInstance.currency}\n              </span>\n              <span className=\"\">\n                {' - '}\n                {instance.category_data?.name || \"' - '\"}\n                <span className=\"text-muted\">\n                  {' | '}\n                  {supplier_item.category}\n                </span>\n              </span>\n              {stageData && (\n                <span className=\"text-muted\">\n                  {' - '}\n                  {stageData.label}\n                </span>\n              )}\n\n              <a className=\"btn ms-1\" href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <ProductDeleteButton\n            instance={instance}\n            onSuccess={() => {\n              setHide(true);\n              props?.refreshOrder?.();\n            }}\n            className=\"me-2\"\n          />\n          <Staff.Link to={`./${instance.slug}/`} className=\"btn btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"suppier-p-list-item bg-white\"\n    >\n      {open && (\n        <HorizontalScrollGridLayout className=\"form-tab no-scroll-bar gap-2\">\n          <ProductQuickUpdateForm instance={instance} categories={categories} orderSlug={orderInstance?.slug} />\n\n          <div className=\"\">\n            <div className=\"mb-1\">\n              {`${supplier_item.item_id ? <span className=\"\">Item ID: {supplier_item.item_id}</span> : ''}`}\n            </div>\n            <ul>\n              {supplier_item.category && (\n                <li className=\"mb-1\">\n                  <div className=\"text-sm\">Supplier Category</div>\n                  <div className=\"text-muted\">{supplier_item.category}</div>\n                </li>\n              )}\n              <li className=\"mb-1\">\n                <div className=\"text-sm\">FOB Cost({orderInstance.currency})</div>\n                <div className=\"text-muted\">{supplier_item.cost}</div>\n              </li>\n\n              {supplier_item.url && (\n                <li className=\"\">\n                  <a href={supplier_item.url} target=\"_blank\" className=\"text-underline\" rel=\"noopener noreferrer\">\n                    View supplier product page\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        </HorizontalScrollGridLayout>\n      )}\n    </ViewSection>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Icons, Loading, ViewSection, ButtonProps } from '@miq/componentjs';\nimport { SupplierOrderForm, SupplierOrderProductAddForm, SupplierOrderUpdateForm } from './forms';\nimport SupplierProductList from './SupplierProductList';\nimport { TSupplierOrder } from '../types';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { ProductListFilterForm } from '../Product/forms';\n\nconst formFields: { [key: string]: any } = {\n  name: '',\n  order_id: '',\n  stage: '',\n  currency: 'USD',\n  supplier: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nconst mapDataToValues = (data: any = {}): TSupplierOrder => {\n  const values: any = {};\n  Object.keys(formFields).forEach((k) => {\n    values[k] = data[`${k}`] || formFields[`${k}`];\n  });\n  return values;\n};\n\nexport default function OrderUpdateView() {\n  const { ordSlug } = useParams();\n\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { suppliers, currencies } = React.useContext(SharedDataCtx) as any;\n\n  const { setValues } = form;\n  const {\n    res,\n    loading,\n    setLoading,\n    setRes: setOrder,\n    refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  // console.log(r.data.stages);\n\n  if (!instance.supplier || !instance.currency)\n    return (\n      <Staff.View title=\"Modifier une commande\" back=\"/staff/store/orders/\">\n        <Staff.Section className=\"d-flex justify-content-center mt-4\">\n          <SupplierOrderUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'currency', 'supplier']}\n            onSuccess={(res) => setOrder(res)}\n          >\n            <SupplierOrderForm.NameField required label=\"Nom\" error={form.errors.currency} />\n            <SupplierOrderForm.SupplierField\n              required\n              label=\"Supplier\"\n              suppliers={suppliers}\n              error={form.errors.supplier}\n            />\n            <SupplierOrderForm.CurrencyField\n              required\n              label=\"Supplier Currency\"\n              currencies={currencies}\n              error={form.errors.currency}\n            />\n\n            <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n          </SupplierOrderUpdateForm>\n        </Staff.Section>\n      </Staff.View>\n    );\n\n  return (\n    <Staff.View\n      title={form.values.name}\n      back=\"/staff/store/orders/\"\n      actions={\n        <Staff.NavLink to=\"settings/\">\n          <Icons.Gear />\n        </Staff.NavLink>\n      }\n    >\n      <div className=\"d-flex flex-column flex-xl-row\">\n        <div className=\"w-100\">\n          <Staff.Section header={<Header {...{ instance, setLoading, setOrder, categories: r?.data?.categories }} />}>\n            {loading ? (\n              <Loading icon />\n            ) : (\n              <SupplierProductList\n                orderInstance={instance}\n                categories={r?.data?.categories}\n                stages={r?.data?.stages}\n                refreshOrder={refreshOrder}\n              />\n            )}\n          </Staff.Section>\n        </div>\n\n        <div className=\"min-w-35 ps-md-1\">\n          <DetailDisplaySection {...{ loading, instance }} />\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst DetailDisplaySection = ({\n  loading,\n  instance,\n}: {\n  loading: boolean;\n  instance: ReturnType<typeof SupplierOrder>;\n}) => {\n  return (\n    <Staff.Section\n      border\n      className=\"bg-white mb-1\"\n      title={`Order Details${!loading && ` (${instance.products?.length})`}`}\n      text={`Supplier: ${instance.supplier} | Currency: ${instance.currency}`}\n    >\n      <div className=\"mb-2\">\n        Categories\n        <ul>\n          {instance?.by_categories\n            ?.filter((i) => i?.category__name)\n            ?.map(({ category__name: name, ...i }) => (\n              <DetailDisplaySection.Li title={name} key={name}>\n                : {i.count}\n              </DetailDisplaySection.Li>\n            ))}\n        </ul>\n      </div>\n\n      <ul className=\"mb-3\">\n        <DetailDisplaySection.Li title=\"Average cost: \">\n          {instance.avg_cost} {instance.currency}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Total cost: \">\n          {`${instance.total_cost || instance?.items_cost?.amountWithSymbol} ${instance.currency}`}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Est. revenue: \">{instance?.items_revenue?.amount}</DetailDisplaySection.Li>\n      </ul>\n    </Staff.Section>\n  );\n};\n\nDetailDisplaySection.Li = ({ children, title }: { children: React.ReactNode; title: string }) => (\n  <li>\n    <span className=\"mr-2 text-muted\">{title}</span>\n    {children}\n  </li>\n);\n\nconst Header = ({ instance, setLoading, setOrder, categories }: any) => {\n  const [tab, setTab] = React.useState<'filter' | 'add'>('filter');\n\n  const render = () => {\n    switch (tab) {\n      case 'add':\n        return (\n          <SupplierOrderProductAddForm\n            orderInstance={instance}\n            onSuccess={(res) => {\n              setLoading();\n              setOrder(res);\n            }}\n          />\n        );\n\n      default:\n        return <ProductListFilterForm categories={categories} />;\n    }\n  };\n\n  return (\n    <Staff.Section\n      border\n      title={\n        <div>\n          <HeaderButton tab={tab} onClick={() => setTab('filter')} active={tab === 'filter'}>\n            <Icons.Funnel />\n          </HeaderButton>\n        </div>\n      }\n      actions={\n        <HeaderButton tab={tab} onClick={() => setTab('add')} active={tab === 'add'}>\n          <Icons.Plus />\n        </HeaderButton>\n      }\n      className=\"bg-white mb-1\"\n    >\n      <div className=\"\" style={{ top: 0, position: 'sticky' }}>\n        {render()}\n      </div>\n    </Staff.Section>\n  );\n};\nconst HeaderButton = ({\n  children,\n  tab,\n  active,\n  ...props\n}: ButtonProps & { tab: string; children: React.ReactNode; active: boolean }) => {\n  return (\n    <Staff.Button\n      className=\"btn-primary-3\"\n      style={{ border: active ? '1px solid var(--blue-600)' : undefined }}\n      {...props}\n    >\n      {children}\n    </Staff.Button>\n  );\n};\n\nexport const OrderSettingUpdateView = () => {\n  const { ordSlug } = useParams();\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { setValues } = form;\n  const {\n    res,\n    // setRes: setOrder,\n    // refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  return (\n    <Staff.View title={`${instance.name} Order Update`} back={`/staff/store/orders/${ordSlug}/`}>\n      <SupplierOrderUpdateForm\n        {...{ instance, context: form, fields: ['is_paid', 'order_id', 'total_cost', 'stage'] }}\n        // onSuccess={(r) => setOrder({ ...res, ...r })}\n      >\n        <ViewSection border footer={<Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />}>\n          <SupplierOrderForm.IsPaidField error={form.errors.is_paid} className=\"my-2\" />\n          {form.values.is_paid && (\n            <>\n              <SupplierOrderForm.OrderIDField required={form.values.is_paid} error={form.errors.order_id} />\n              <SupplierOrderForm.TotalCostField required={form.values.is_paid} error={form.errors.total_cost} />\n            </>\n          )}\n\n          <SupplierOrderForm.StageSelectField {...{ stages: r.data.stages }} />\n        </ViewSection>\n      </SupplierOrderUpdateForm>\n    </Staff.View>\n  );\n};\n","import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { SupplierOrder, TSupplierOrderInstance } from './models';\nimport Staff from '@miq/staffjs';\n\ntype TSupplierOrderDeleteButtonProps = Omit<IFormUpdateProps<TSupplierOrderInstance>, 'context'> & {\n  label?: string;\n};\n\nexport const SupplierOrderDeleteButton: React.FC<TSupplierOrderDeleteButtonProps> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['s-order-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const SupplierOrderAddButton = (props: { onSuccess: (p?: any) => void; label?: string; className?: string }) => {\n  const { label = 'Add order' } = props;\n\n  return (\n    <Staff.Button\n      onClick={() => {\n        SupplierOrder()\n          .create({})\n          .then((r) => props?.onSuccess?.(r))\n          .catch((err: any) => {\n            // console.log(err);\n          });\n      }}\n      className={props.className}\n      requiredPerms={['store.add_supplierorder']}\n      title={'Add a new order'}\n    >\n      {label}\n    </Staff.Button>\n  );\n};\n\nexport const SupplierPrice = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { Pagination, Table } from '@miq/componentjs';\n\nimport { TSupplierOrder } from '../types';\n\nimport { SupplierOrder } from './models';\nimport { SupplierOrderAddButton, SupplierOrderDeleteButton, SupplierPrice } from './components';\n\nconst SupplierOrderRow = ({ item, removeItem }: { item: TSupplierOrder; removeItem: (payload: any) => void }) => {\n  const { name = 'New order', slug, is_paid, items, items_revenue, supplier } = item || {};\n\n  return (\n    <Table.Tr>\n      <Table.Td>\n        <Staff.Link to={`${slug}/`} className=\"\">\n          <div className={getCN(['fw-bold text-ellipsis', is_paid && 'text-line-through'])}>{name}</div>\n        </Staff.Link>\n        <span className=\"text-sm\">{item.avg_cost}</span>\n      </Table.Td>\n\n      <Table.Td>{items?.length}</Table.Td>\n\n      <Table.Td>{supplier}</Table.Td>\n\n      <Table.Td>\n        <SupplierPrice {...item.total_cost_data} />\n      </Table.Td>\n      <Table.Td>\n        <SupplierPrice {...items_revenue} />\n      </Table.Td>\n\n      <Table.Td>\n        <SupplierOrderDeleteButton instance={SupplierOrder(item)} onSuccess={() => removeItem?.({ slug })} />\n      </Table.Td>\n    </Table.Tr>\n  );\n};\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, removeItem } = useRequest(() => SupplierOrder().list({ params: { page } }), { refreshDeps: [page] });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const { items } = r;\n\n  return (\n    <Staff.View\n      title=\"Supplier Orders\"\n      back=\"/staff/store/\"\n      actions={\n        <SupplierOrderAddButton onSuccess={({ data }: any) => navigate(`${data.slug}/`)} className=\"btn-primary-3\" />\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      {Boolean(items.length) ? (\n        <Staff.Section footer={<Pagination {...r.data} component={Staff.Link} to />}>\n          <Table\n            border\n            items={items}\n            header={\n              <>\n                <Table.Th />\n                <Table.Th>Items</Table.Th>\n                <Table.Th>Supplier</Table.Th>\n\n                <Table.Th>Total Cost</Table.Th>\n                <Table.Th>Est. Revenue</Table.Th>\n                <Table.Th />\n              </>\n            }\n            renderItem={(item) => <SupplierOrderRow {...{ item, removeItem }} key={item.slug} />}\n            className=\"w-100\"\n          />\n        </Staff.Section>\n      ) : (\n        <div className=\"p-4\">\n          <div className=\"text-center\">\n            <div className=\"mb-4 text-md\">Add a supplier order to get started.</div>\n            <SupplierOrderAddButton\n              onSuccess={({ data }: any) => navigate(`${data.slug}/`)}\n              label=\"Add an order\"\n              className=\"btn-md btn-primary fw-bold\"\n            />\n          </div>\n        </div>\n      )}\n    </Staff.View>\n  );\n}\n\n// EXPORTS\n\nexport * from './models';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TSupplierOrder } from '../types';\n\nconst timeout = 10000;\n\nclass SupplierOrderService extends StaffService<TSupplierOrder> {\n  updateCategories(category: string, slugs: string[]) {\n    return this.post(`${this._path}batch/`, { slugs, category }, { timeout });\n  }\n\n  postFnova(url: string) {\n    return this.post(`${this._path}fnova/`, { url }, { timeout });\n  }\n  postPlt(url: string) {\n    return this.post(`${this._path}plt/`, { url }, { timeout });\n  }\n\n  postShein(url: string) {\n    return this.post(`${this._path}shein/`, { url }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n}\n\nexport const SupplierOrder = (data: TSupplierOrder = {}) =>\n  StaffModel<TSupplierOrder, SupplierOrderService>(data, 'supplierorders', SupplierOrderService);\n\nexport type TSupplierOrderInstance = ReturnType<typeof SupplierOrder>;\n\nexport type SupplierType = {\n  slug?: string;\n  name_choices: any;\n  created: any;\n  updated: any;\n};\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, TProduct } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: TProduct & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n","import { ImgType } from '@miq/componentjs';\nimport { TextChoicesType } from '@miq/formjs';\nimport { WithMetaFields } from '@miq/utiljs';\n\nexport type PriceDataType = { currency: string; amount: string; amountWithSymbol: string };\nexport type PriceType = number | PriceDataType;\n\nexport type TProduct = WithMetaFields<{\n  slug?: string;\n\n  category?: string;\n  category_data?: TCategory;\n  name?: string;\n\n  cover?: string;\n  cover_data?: ImgType;\n  images?: string[];\n  images_data?: ImgType[];\n\n  readonly name_truncated?: string;\n  description?: string;\n  retail_price?: PriceType;\n  retail_price_data?: PriceDataType;\n  is_on_sale?: boolean;\n  sale_price?: PriceType;\n  sale_price_data?: PriceDataType;\n  is_pre_sale?: boolean;\n  is_pre_sale_text?: string;\n  is_pre_sale_dt?: string | Date;\n  url?: string;\n\n  has_attributes?: boolean;\n  attributes?: any[];\n  sizes?: any[];\n  size_count: number | undefined;\n\n  is_pinned?: boolean;\n  is_explicit?: boolean;\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  supplier_item: SupplierItemType;\n  position?: number;\n  color_group_pk?: string;\n  stage?: string;\n  is_oos: boolean | undefined;\n\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type CategoryChoicesType = {\n  items: TextChoicesType;\n};\n\nexport type TProductStageData = { name: string; label: string; value: string };\n\nexport type TCategory = WithMetaFields<{\n  slug?: string;\n  supplier_item_id?: string;\n  name?: string;\n  description?: string;\n  cover?: ImgType;\n  position?: number;\n\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  cover_data?: ImgType;\n  products_count?: number;\n  published_count?: number;\n  draft_count?: number;\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type SupplierItemType = {\n  slug?: string;\n  item_id?: string;\n  item_sn?: string;\n  category?: string;\n  url?: string;\n  cost?: number;\n  created?: string;\n  updated?: string;\n};\n\nexport enum SupplierName {\n  SHEIN = 'SHEIN',\n  PLT = 'PLT',\n  FNOVA = 'FNOVA',\n}\n\nexport type TSupplierOrder = {\n  slug?: string;\n  name?: string;\n  supplier?: string;\n  order_id?: string;\n  products?: TProduct[];\n  items?: any[];\n  items_cost?: number;\n  items_revenue?: number;\n  avg_cost?: number;\n  by_categories?: { category__name: string; count: number }[] | undefined;\n\n  currency?: string;\n  is_paid?: boolean;\n  is_paid_dt?: string;\n  is_fulfilled_dt?: string;\n  total_cost?: number;\n  total_cost_data?: PriceDataType;\n};\n\nexport type TProductSize = {\n  slug?: string;\n  name?: string;\n  code?: string;\n  quantity?: number;\n};\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { SharedDataCtx, SharedDataState } from '@miq/contextjs';\nimport { OrderSettingUpdateView } from './Supplier/OrderUpdateView';\n\nconst ShopStaffIndexView = React.lazy(() => import('./IndexView'));\n\nconst SupplierOrderIndexView = React.lazy(() => import('./Supplier'));\nconst SupplierOrderProductUpdateView = React.lazy(() => import('./Supplier/OrderProductUpdateView'));\nconst SupplierOrderUpdateView = React.lazy(() => import('./Supplier/OrderUpdateView'));\n\nconst CategoryIndexView = React.lazy(() => import('./Category'));\nconst CategoryUpdateView = React.lazy(() => import('./Category/views.Update'));\n\nconst ProductIndexView = React.lazy(() => import('./Product/views.Index'));\nconst ShopSettingUpdateView = React.lazy(() => import('./Setting'));\n\nexport default function ShopStaffRoutes() {\n  const { shopy_settings } = React.useContext(SharedDataCtx) as SharedDataState & { shopy_settings: any | null };\n\n  if (!shopy_settings) return null;\n\n  return (\n    <Routes>\n      <Route\n        path=\"orders/*\"\n        element={\n          <Routes>\n            <Route path={`:ordSlug/:prodSlug/`} element={<SupplierOrderProductUpdateView />} />\n            <Route path={`:ordSlug/settings/`} element={<OrderSettingUpdateView />} />\n            <Route path={`:ordSlug/`} element={<SupplierOrderUpdateView />} />\n            <Route path=\"/*\" element={<SupplierOrderIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"products/*\"\n        element={\n          <Routes>\n            <Route path=\"/*\" element={<ProductIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"categories/*\"\n        element={\n          <Routes>\n            <Route path=\":catSlug/\" element={<CategoryUpdateView />} />\n            <Route index element={<CategoryIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route path=\"settings/\" element={<ShopSettingUpdateView />} />\n      <Route path=\"/\" element={<ShopStaffIndexView />} />\n    </Routes>\n  );\n}\n\nexport * from './types';\n\nexport { useProductListRequest } from './Product/utils';\nexport { ProductListFilterForm } from './Product/forms';\nexport { ProductListItem } from './Product/components';\nexport { ProductPriceDisplay } from './components';\nexport { SizeQuantityField, SizeSelectField } from './Product/Size';\n"],"names":["CustomerCard","data","slug","first_name","last_name","email","phone","className","CustomerSelect","customers","onItemClick","map","cust","onClick","CustomerLNameField","label","text","error","fieldCN","props","React","setCustomers","onCustomerSelect","allowSuggestions","rest","required","name","maxLength","minLength","onDebounce","value","length","Customer","find","then","r","items","Response","catch","err","Boolean","p","CustomerFNameField","CustomerEmailField","CustomerPhoneField","CustomerFields","LName","FName","Email","Phone","SalesIndexView","useRequest","Cart","list","res","setRes","loading","title","actions","to","i","customer","product","CartCreateView","CartUpdateView","SalesStaffRoutes","path","element","CustomerService","q","this","params","StaffService","StaffModel","CartService","prodSlug","size","qty","post","_path","values","timeout","delete","SizeUpdateForm","productInstance","form","useForm","code","quantity","onSuccess","onError","context","onSubmit","e","preventDefault","patchSize","handleError","SizeNameField","errors","SizeCodeField","SizeQuantityField","SizeDeleteButton","commonSizes","xs","s","m","l","xl","formDefaultValues","SizeAddForm","postSize","setValues","Object","keys","key","placeholder","type","min","SizeSelectField","sizes","nullValue","toUpperCase","renderHeader","renderFooter","setOpen","deleteSize","render","ProductImagesAddButton","multiple","onSuccessMulti","resArray","imgsArray","filter","images","includes","update","ProductDeleteButton","instance","destroy","emitter","handleDelete","getCN","ProductListItem","item","open","StaffProduct","border","header","ProductListItemHeader","orderInstance","stages","supplier_item","cost","stage","stageData","style","width","src","cover_data","is_oos","name_truncated","show","is_published","export","currency","is_pinned","height","padding","stopPropagation","category_data","category","size_count","href","url","target","rel","ProductCardItem","ProductCardList","itempath","useSearchParams","useParams","NameField","DescriptionField","CategoryField","categories","cat","SalePriceField","step","OnSaleCheckboxField","checkbox","PresaleCheckboxField","OosCheckboxField","PresaleTextField","RetailPriceField","StageSelectField","IsExplicitCheckboxField","ProductQuickUpdateForm","orderSlug","description","retail_price","is_pre_sale","is_pre_sale_text","fields","ProductUpdateForm","ProductForm","SupplierOrder","destroyItem","children","isR","onWillSubmit","fd","forEach","field","ProductCreateForm","create","ProductFields","ProductListFilterForm","setParams","get","setQ","action","method","set","onChange","Category","Published","Sale","PreSale","QuerySelectField","emptyLabel","QueryToggleField","inputId","id","checked","htmlFor","StaffProductService","patch","sizeSlug","attrSlug","dt_published","Date","useProductListRequest","page","published","presale","sale","searchParams","supplier_order_slug","refreshDeps","SupplierOrderUpdateForm","SupplierOrderForm","OrderIDField","IsPaidField","TotalCostField","CurrencyField","currencies","curr","SupplierField","suppliers","supplier","SupplierOrderProductAddForm","toLowerCase","supplier_name","isLoading","setLoading","handleSuccess","setValue","setErrors","urlErrMsg","postFnova","postPlt","postShein","autoFocus","disabled","SupplierProductList","refreshOrder","ordSlug","results","refresh","selected","setSelected","isSelected","cursor","footer","component","Staff","position","top","zIndex","updateCategories","SupplierProductListItem","ItemCheckBox","hide","setHide","is_on_sale","sale_price","Product","item_id","formFields","order_id","is_paid","total_cost","mapDataToValues","k","OrderUpdateView","SharedDataCtx","retrieve","setOrder","isSuccess","back","Header","icon","DetailDisplaySection","products","by_categories","category__name","Li","count","avg_cost","items_cost","amountWithSymbol","items_revenue","amount","tab","setTab","HeaderButton","active","undefined","OrderSettingUpdateView","SupplierOrderDeleteButton","SupplierOrderAddButton","requiredPerms","SupplierPrice","SupplierOrderRow","removeItem","total_cost_data","SupplierOrderIndexView","navigate","useNavigate","renderItem","SupplierOrderService","slugs","PublishButton","publish","UnPublishButton","unpublish","PriceDisplay","lineThrough","ProductPriceDisplay","retail_price_data","sale_price_data","isSale","PublishedIcon","ToastEmitter","CrudEmitter","args","prefix","payload","emit","EventEmitter","useCrudEmitter","callbacks","match","on","onCreate","call","onUpdate","onDestroy","SupplierName","ShopStaffIndexView","SupplierOrderProductUpdateView","SupplierOrderUpdateView","CategoryIndexView","CategoryUpdateView","ProductIndexView","ShopSettingUpdateView","ShopStaffRoutes","shopy_settings","index"],"sourceRoot":""}