{"version":3,"file":"static/js/654.d8e19721.chunk.js","mappings":"mVA4FaA,EAAe,SAAC,GAOF,IANzBC,EAMwB,EANxBA,SACAC,EAKwB,EALxBA,SAGAC,GAEwB,EAJxBC,UAIwB,EAHxBC,QAGwB,EAFxBF,kBACGG,GACqB,YAChBC,EAAWD,EAAXC,OACFC,GAAOC,EAAAA,EAAAA,IAAmBC,EAAa,OAACR,QAAD,IAACA,OAAD,EAACA,EAAUS,SAAUJ,IAE1DK,EAAWJ,EAAXI,OACFC,EAAc,CAAEC,UAAW,YAAaC,QAAS,oBAEvD,OACE,UAAC,MAAD,kBAAUT,GAAV,IAAiBU,QAASR,EAAMM,UAAU,gBAA1C,WACE,iBAAKA,UAAU,cAAf,WACS,OAANP,QAAM,IAANA,OAAA,EAAAA,EAAQU,SAAS,gBAChB,SAAC,MAAD,gBACEC,kBAAgB,EAChBC,MAAOP,EAAOQ,WACVP,GAHN,IAIEV,iBAAkBA,EAClBW,UAAU,OAIP,OAANP,QAAM,IAANA,OAAA,EAAAA,EAAQU,SAAS,iBAAiB,SAAC,MAAD,QAAoBE,MAAOP,EAAOS,YAAgBR,KAE9E,OAANN,QAAM,IAANA,OAAA,EAAAA,EAAQU,SAAS,YAAY,SAAC,MAAD,QAAoBE,MAAOP,EAAOU,OAAWT,KACpE,OAANN,QAAM,IAANA,OAAA,EAAAA,EAAQU,SAAS,YAAY,SAAC,MAAD,QAAoBE,MAAOP,EAAOW,OAAWV,OAG5EZ,OAIDS,EAAgB,SAACc,EAAkBjB,GAClCiB,IAAMA,EAAO,CAAEH,WAAY,GAAID,UAAW,GAAIG,MAAO,GAAID,MAAO,KACrE,IAAMG,EAAgB,GAKtB,OAJM,OAANlB,QAAM,IAANA,GAAAA,EAAQmB,SAAQ,SAACC,GACfF,EAAGE,GAASH,EAAMG,MAGbF,G,4BC9HM,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,EAAgCC,EAAAA,WAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,OACE,SAAC,UAAD,CAAYC,MAAM,uBAAuBC,KAAK,gBAA9C,UACE,gBAAKrB,UAAU,qCAAf,UACE,gBAAKA,UAAU,UAAf,UACE,SAAC,aAAD,CAAeoB,MAAM,SAASE,KAAK,2CAA2CC,SAAS,OAAvF,SACGL,GAAYA,EAASM,MACpB,iBAAKxB,UAAU,GAAf,WACE,SAAC,KAAD,CAAcU,KAAMQ,KAEpB,iBAAKlB,UAAU,sCAAf,WACE,SAAC,KAAD,CAAQA,UAAU,gBAAgByB,QAAS,kBAAMN,OAAYO,IAA7D,UACE,SAAC,QAAD,OAGF,SAAC,KAAD,CACED,QAAS,YA1BR,SAACP,IAClBS,EAAAA,EAAAA,KACGC,OAAO,CAAEV,SAAUA,EAASM,OAC5BK,MAAK,YAAe,IAAZnB,EAAW,EAAXA,KACP,OAAOK,EAAS,GAAD,OAAIL,EAAKc,KAAT,SAEhBM,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAoBEG,CAAWhB,IAEblB,UAAU,oBAJZ,mCASJ,SAACd,EAAD,CACEO,OAAQ,CAAC,aAAc,YAAa,QAAS,SAC7CH,UAAW,YAAc,EAAXoB,MACdrB,iBAAkB8B,EAHpB,UAKE,gBAAKnB,UAAU,qCAAf,UACE,SAAC,KAAD,CAAQmC,KAAK,SAASnC,UAAU,iCAAhC","sources":["../../../../shopy/shopy-orderjs/src/forms/index.tsx","../../../../shopy/shopy-orderjs/src/views.CartCreate.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Form, { IFormUpdateProps, useForm } from '@miq/formjs';\nimport { TCart, TCustomer, TOrderItem } from '../types';\nimport { TCustomerInstance } from '../models';\nimport { CustomerEmailField, CustomerFNameField, CustomerLNameField, CustomerPhoneField } from './fields';\nimport { SizeQuantityField, SizeSelectField, TProduct } from '@shopy/storejs';\n\nexport const OrderItemUpdateForm = ({\n  product,\n  cart,\n  fields,\n  onSuccess,\n  children,\n  ...props\n}: {\n  product: TProduct;\n  onSuccess: (p: TCart) => void;\n  fields: string[];\n  cart?: TCart;\n  children?: React.ReactNode;\n}) => {\n  let { sizes = [], meta_slug: productSlug } = product || {};\n  const { products = [], items = [] } = cart || {};\n\n  const item = items.find((i: TOrderItem) => i?.product?.meta_slug === productSlug);\n\n  const form = useForm<TOrderItem>({\n    quantity: 1,\n    size: item ? item.size : '',\n\n    //# customer\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n  });\n\n  const { errors, values } = form;\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!values.size) {\n      form.setError('size', 'Veuillez choisir votre taille');\n      return;\n    }\n\n    const fd: any = { quantity: values.quantity, size: values.size };\n\n    // if (item && item.slug) {\n    //   patchOrderItem(item.slug!, fd).then(({ data }) => {\n    //     onSuccess?.(data);\n    //   });\n    // } else {\n    //   fd['customer'] = form.values;\n    //   postOrderItem(productSlug!, fd).then(({ data }) => {\n    //     onSuccess?.(data);\n    //   });\n    // }\n  };\n\n  sizes = sizes?.filter((i) => i.quantity > 0);\n\n  return (\n    <Form context={form} onSubmit={handleSubmit} className=\"order-item-form\">\n      <>\n        {fields.includes('size') && <SizeSelectField required label=\"Taille\" error={errors.size} sizes={sizes} />}\n\n        {fields.includes('quantity') && (\n          <SizeQuantityField\n            error={errors.quantity}\n            max={sizes.find((i) => i.slug === form.values.size)?.quantity || 0}\n            min={1}\n          />\n        )}\n      </>\n\n      {children}\n    </Form>\n  );\n};\n\ntype TFormUpdateProps<T, I> = IFormUpdateProps<T> & {\n  fields: string[];\n  instance?: I;\n};\n\ntype TCustomerFormProps = Omit<TFormUpdateProps<TCustomer, TCustomerInstance>, 'context'> & {\n  onCustomerSelect?: (p: TCustomer) => void;\n};\n\nexport const CustomerForm = ({\n  children,\n  instance,\n  onSuccess,\n  onError,\n  onCustomerSelect,\n  ...props\n}: TCustomerFormProps) => {\n  const { fields } = props;\n  const form = useForm<TCustomer>(getCustomerFD(instance?.export(), fields));\n\n  const { errors } = form;\n  const sharedProps = { className: 'span-md-3', fieldCN: 'd-grid grid-md-5' };\n\n  return (\n    <Form {...props} context={form} className=\"customer-form\">\n      <div className=\"base-fields\">\n        {fields?.includes('last_name') && (\n          <CustomerLNameField\n            allowSuggestions\n            error={errors.last_name}\n            {...sharedProps}\n            onCustomerSelect={onCustomerSelect}\n            className=\"\"\n          />\n        )}\n\n        {fields?.includes('first_name') && <CustomerFNameField error={errors.first_name} {...sharedProps} />}\n\n        {fields?.includes('phone') && <CustomerPhoneField error={errors.phone} {...sharedProps} />}\n        {fields?.includes('email') && <CustomerEmailField error={errors.email} {...sharedProps} />}\n      </div>\n\n      {children}\n    </Form>\n  );\n};\nconst getCustomerFD = (data?: TCustomer, fields?: string[]) => {\n  if (!data) data = { first_name: '', last_name: '', email: '', phone: '' };\n  const fd: TCustomer = {};\n  fields?.forEach((field) => {\n    fd[field] = data![field];\n  });\n\n  return fd;\n};\nconst CustomerSearchInput = (props) => {\n  return <Form.Text {...props} />;\n};\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { CustomerForm } from './forms';\nimport { Cart } from './models';\nimport { Button, Icons } from '@miq/componentjs';\nimport { TCustomer } from './types';\nimport { CustomerCard } from './components';\n\nexport default function CartCreateView() {\n  const navigate = useNavigate();\n  const [customer, setCustomer] = React.useState<TCustomer>();\n\n  const createCart = (customer: TCustomer) => {\n    Cart()\n      .create({ customer: customer.slug })\n      .then(({ data }) => {\n        return navigate(`${data.slug}/`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Staff.View title=\"Ajouter une commande\" back=\"/staff/sales/\">\n      <div className=\"d-flex justify-content-center my-3\">\n        <div className=\"w-md-65\">\n          <Staff.Section title=\"Client\" text=\"Selectionez ou ajoutez un noubeau client\" headerCN=\"mb-4\">\n            {customer && customer.slug ? (\n              <div className=\"\">\n                <CustomerCard data={customer} />\n\n                <div className=\"d-flex justify-content-between mt-4\">\n                  <Button className=\"btn btn-round\" onClick={() => setCustomer(undefined)}>\n                    <Icons.ArrowLeft />\n                  </Button>\n\n                  <Button\n                    onClick={() => {\n                      createCart(customer);\n                    }}\n                    className=\"btn btn-primary-3\"\n                  >{`Continuer »`}</Button>\n                </div>\n              </div>\n            ) : (\n              <CustomerForm\n                fields={['first_name', 'last_name', 'phone', 'email']}\n                onSuccess={({ data }) => {}}\n                onCustomerSelect={setCustomer}\n              >\n                <div className=\"d-flex justify-content-center my-4\">\n                  <Button type=\"submit\" className=\"btn btn-md btn-primary fw-bold\">\n                    {`Continuer »`}\n                  </Button>\n                </div>\n              </CustomerForm>\n            )}\n          </Staff.Section>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n"],"names":["CustomerForm","children","instance","onCustomerSelect","onSuccess","onError","props","fields","form","useForm","getCustomerFD","export","errors","sharedProps","className","fieldCN","context","includes","allowSuggestions","error","last_name","first_name","phone","email","data","fd","forEach","field","CartCreateView","navigate","useNavigate","React","customer","setCustomer","title","back","text","headerCN","slug","onClick","undefined","Cart","create","then","catch","err","console","log","createCart","type"],"sourceRoot":""}