{"version":3,"file":"static/js/67.4ae8630d.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-orderjs/src/models.tsx","../../../../shopy/shopy-orderjs/src/forms/fields.tsx","../../../../shopy/shopy-orderjs/src/forms/index.tsx","../../../../shopy/shopy-orderjs/src/components/index.tsx","../../../../shopy/shopy-orderjs/src/CartCreateView.tsx","../../../../shopy/shopy-orderjs/src/CartUpdateView.tsx","../../../../shopy/shopy-orderjs/src/IndexView.tsx","../../../../shopy/shopy-orderjs/src/index.tsx","../../../../shopy/shopy-storejs/src/Product/Size/index.tsx","../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/forms/index.tsx","../../../../shopy/shopy-storejs/src/Product/forms/fields.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/Supplier/forms.tsx","../../../../shopy/shopy-storejs/src/Supplier/SupplierProductList.tsx","../../../../shopy/shopy-storejs/src/Supplier/OrderUpdateView.tsx","../../../../shopy/shopy-storejs/src/Supplier/components.tsx","../../../../shopy/shopy-storejs/src/Supplier/index.tsx","../../../../shopy/shopy-storejs/src/Supplier/models.tsx","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events/index.tsx","../../../../shopy/shopy-storejs/src/types.ts","../../../../shopy/shopy-storejs/src/index.tsx"],"sourcesContent":["import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCart, TCustomer } from './types';\n\nconst timeout = 5000;\n\nclass CustomerService extends StaffService<TCustomer> {\n  find(q: string) {\n    return this.list({ params: { q } });\n  }\n}\n\nexport const Customer = (data: TCustomer = {}) => {\n  return StaffModel<TCustomer, CustomerService>(data, 'customers', CustomerService);\n};\n\nexport type TCustomerInstance = ReturnType<typeof Customer>;\n\n/**\n * CART\n */\n\nclass CartService extends StaffService<TCart> {\n  addItem(prodSlug: string, size: string, qty?: string) {\n    return this.post(`${this._path}item/${prodSlug}/`, { size, qty });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = (data: TCart = {}) => {\n  return StaffModel<TCart, CartService>(data, 'carts', CartService);\n};\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n\n// export const Cart = (data: any) => {\n//   getIsValid(data: Record<string, any>): boolean {\n//     return data && data.slug && data.products && Boolean(data.items.length);\n//   }\n\n//   getItem(meta_slug: string) {\n//     return;\n//     // return this.items?.find((i: any) => i.product.meta_slug === meta_slug);\n//   }\n\n//   postItem(prod_meta_slug: string, values: any) {\n//     // values may contain size and other info\n\n//     if (this.slug && values) values.cart_slug = this.slug;\n//     return this.postPath(`${this._endpoint}items/`, { ...values, prod_meta_slug });\n//   }\n\n//   patchItem(itemSlug: string, values: any) {\n//     return this.patchPath(`${this._path}/item/${itemSlug}/`, values);\n//   }\n//   deleteItem(itemSlug: string) {\n//     return this.deletePath(`${this._path}/item/${itemSlug}/`);\n//   }\n\n//   patchCustomer(values: any) {\n//     if (values && this?.customer?.slug) values.cust_slug = this.customer.slug;\n//     return this.patchPath(`${this._path}/customer/`, values);\n//   }\n//   postCustomer(values: any) {\n//     return this._s.post(`${this._path}/customer/`, values);\n//   }\n// }\n\n// //   const methods = {\n// //     getItem,\n// //     postItem,\n// //     patchItem,\n// //     deleteItem,\n// //     patchCustomer,\n// //     postCustomer,\n// //   };\n\n// //   return Object.assign({ isValid: getIsValid() }, CrudModel(data, 'api/carts/'), methods);\n// // };\n\n// export const Customer = (data: any) => {\n//   // return Object.assign({}, CrudModel(data, 'api/carts/'), methods);\n// };\n","import * as React from 'react';\n\nimport Form, { EmailField, FirstNameField, TextFieldProps } from '@miq/formjs';\nimport { Customer } from '../models';\nimport { TCustomer } from '../types';\nimport { Response } from '@miq/utiljs';\nimport { CustomerCard } from '../components';\nimport { Button } from '@miq/componentjs';\n\nconst CustomerSelect = ({ customers, onItemClick }: { customers: TCustomer[]; onItemClick: (p) => void }) => {\n  return (\n    <div className=\"mt-1 border-1 rounded bg-white\">\n      {customers.map((cust) => {\n        return (\n          <div\n            className=\"d-flex justify-content-between p-1 border-bottom\"\n            onClick={() => onItemClick(cust)}\n            key={cust?.slug}\n          >\n            <div className=\"fw-bold\">{`${cust.first_name} ${cust.last_name}`}</div>\n            <div className=\"text-muted text-sm\">{cust.phone}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const CustomerLNameField = ({\n  label = 'Nom',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps & { allowSuggestions?: boolean; onCustomerSelect?: (p: TCustomer) => void }) => {\n  const [customers, setCustomers] = React.useState<TCustomer[]>([]);\n\n  const handleDebounce = ({ value }) => {\n    if (!allowSuggestions || !value || value.length < 3) return;\n\n    Customer()\n      .find(value)\n      .then((r) => {\n        const items = new Response(r).items;\n\n        if (items.length > 0) setCustomers(items);\n        else setCustomers([]);\n      })\n      .catch((err) => {});\n  };\n\n  const { onCustomerSelect, allowSuggestions, ...rest } = props;\n\n  return (\n    <div className=\"\">\n      <Form.Field {...{ label, error, text }} className={fieldCN}>\n        <div className=\"span-md-3\">\n          <Form.Text required name=\"last_name\" {...rest} maxLength={99} minLength={2} onDebounce={handleDebounce} />\n\n          {allowSuggestions && Boolean(customers.length) && (\n            <CustomerSelect\n              customers={customers}\n              onItemClick={(p) => {\n                onCustomerSelect?.(p);\n              }}\n            />\n          )}\n        </div>\n      </Form.Field>\n    </div>\n  );\n};\n\nexport const CustomerFNameField = (props: TextFieldProps) => <FirstNameField required {...props} />;\nexport const CustomerEmailField = (props: TextFieldProps) => <EmailField {...props} />;\n\nexport const CustomerPhoneField = ({\n  label = 'Numéro de téléphone',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps) => (\n  <Form.Field {...{ label, error, text }} className={fieldCN}>\n    <Form.Phone required name=\"phone\" {...props} />\n  </Form.Field>\n);\n\nexport const CustomerFields = {\n  LName: CustomerLNameField,\n  FName: CustomerFNameField,\n  Email: CustomerEmailField,\n  Phone: CustomerPhoneField,\n};\n","import * as React from 'react';\nimport Form, { FormProps, IFormUpdateProps, useForm } from '@miq/formjs';\nimport { TCustomer } from './types';\nimport { TCustomerInstance } from './models';\nimport { CustomerEmailField, CustomerFNameField, CustomerLNameField, CustomerPhoneField } from './fields';\n\ntype TFormUpdateProps<T, I> = IFormUpdateProps<T> & {\n  fields: string[];\n  instance?: I;\n};\n\ntype TCustomerFormProps = Omit<TFormUpdateProps<TCustomer, TCustomerInstance>, 'context'> & {\n  onCustomerSelect?: (p: TCustomer) => void;\n};\n\nexport const CustomerForm = ({\n  children,\n  instance,\n  onSuccess,\n  onError,\n  onCustomerSelect,\n  ...props\n}: TCustomerFormProps) => {\n  const { fields } = props;\n  const form = useForm<TCustomer>(getCustomerFD(instance?.export(), fields));\n\n  const { errors } = form;\n  const sharedProps = { className: 'span-md-3', fieldCN: 'd-grid grid-md-5' };\n\n  return (\n    <Form {...props} context={form} className=\"customer-form\">\n      <div className=\"base-fields\">\n        {fields?.includes('last_name') && (\n          <CustomerLNameField\n            allowSuggestions\n            error={errors.last_name}\n            {...sharedProps}\n            onCustomerSelect={onCustomerSelect}\n            className=\"\"\n          />\n        )}\n\n        {fields?.includes('first_name') && <CustomerFNameField error={errors.first_name} {...sharedProps} />}\n\n        {fields?.includes('phone') && <CustomerPhoneField error={errors.phone} {...sharedProps} />}\n        {fields?.includes('email') && <CustomerEmailField error={errors.email} {...sharedProps} />}\n      </div>\n\n      {children}\n    </Form>\n  );\n};\nconst getCustomerFD = (data?: TCustomer, fields?: string[]) => {\n  if (!data) data = { first_name: '', last_name: '', email: '', phone: '' };\n  const fd: TCustomer = {};\n  fields?.forEach((field) => {\n    fd[field] = data![field];\n  });\n\n  return fd;\n};\nconst CustomerSearchInput = (props) => {\n  return <Form.Text {...props} />;\n};\n","import * as React from 'react';\nimport { TCustomer } from '../types';\n\nexport const CustomerCard = ({ data, ...props }: { data: TCustomer }) => {\n  if (!data || !data.slug) return null;\n\n  const { first_name, last_name, email, phone } = data;\n\n  return (\n    <div className=\"customer-card\">\n      <div className=\"fw-bold\">{`${first_name} ${last_name}`}</div>\n      <div className=\"\">{phone}</div>\n      <div className=\"text-muted text-sm\">{email}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { CustomerForm } from './forms';\nimport { Cart } from './models';\nimport { Button, Icons } from '@miq/componentjs';\nimport { TCustomer } from './types';\nimport { CustomerCard } from './components';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function CartCreateView() {\n  const navigate = useNavigate();\n  const [customer, setCustomer] = React.useState<TCustomer>();\n\n  const createCart = (customer: TCustomer) => {\n    Cart()\n      .create({ customer: customer.slug })\n      .then(({ data }) => {\n        return navigate(`${data.slug}/`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Staff.View title=\"Ajouter une commande\">\n      <div className=\"d-flex justify-content-center my-3\">\n        <div className=\"w-md-65\">\n          <Staff.Section title=\"Client\" text=\"Selectionez ou ajoutez un noubeau client\" headerCN=\"mb-4\">\n            {customer && customer.slug ? (\n              <div className=\"\">\n                <CustomerCard data={customer} />\n\n                <div className=\"d-flex justify-content-between mt-4\">\n                  <Button className=\"btn btn-round\" onClick={() => setCustomer(undefined)}>\n                    <Icons.ArrowLeft />\n                  </Button>\n\n                  <Button\n                    onClick={() => {\n                      createCart(customer);\n                    }}\n                    className=\"btn btn-primary-3\"\n                  >{`Continuer »`}</Button>\n                </div>\n              </div>\n            ) : (\n              <CustomerForm\n                fields={['first_name', 'last_name', 'phone', 'email']}\n                onSuccess={({ data }) => {}}\n                onCustomerSelect={setCustomer}\n              >\n                <div className=\"d-flex justify-content-center my-4\">\n                  <Button type=\"submit\" className=\"btn btn-md btn-primary fw-bold\">\n                    {`Continuer »`}\n                  </Button>\n                </div>\n              </CustomerForm>\n            )}\n          </Staff.Section>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n","import * as React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Cart } from './models';\nimport { Response, truncateStr } from '@miq/utiljs';\nimport { Loading } from '@miq/componentjs';\nimport { CustomerCard } from './components';\nimport Form, { useForm } from '@miq/formjs';\nimport {\n  useProductListRequest,\n  ProductListFilterForm,\n  SizeQuantityField,\n  SizeSelectField,\n  TProduct,\n  ProductPriceDisplay,\n} from '@shopy/storejs';\nimport { TOrder } from './types';\n\nexport default function CartUpdateView() {\n  const [params] = useSearchParams();\n  const { cartSlug } = useParams();\n\n  const qForm = useForm({ q: '' });\n  const { res: productRes } = useProductListRequest(undefined, { published: 'include', atc: 1 });\n\n  const { res, setRes, loading, ...request } = useRequest(() => Cart({ slug: cartSlug }).retrieve(), {\n    refreshDeps: [cartSlug],\n    // onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      // if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const cart = Cart(r.data);\n  const products = new Response(productRes).items || [];\n\n  console.log(r.data);\n\n  return (\n    <Staff.View title=\"Modifier une commande\" className=\"\">\n      <div className=\"d-grid grid-md-6 gap-2\">\n        <div className=\"span-md-3\">\n          <Staff.Section\n            title=\"Ajouter des produits\"\n            header={\n              <>\n                <ProductListFilterForm />\n              </>\n            }\n          >\n            {products\n              .filter((i) => !cart.data.products.includes(i.slug))\n              .map((product) => {\n                return (\n                  <div className=\"\" key={product.slug}>\n                    <ProductAddForm\n                      item={product}\n                      onItemClick={(product, size, qty) => {\n                        return cart.addItem(product.slug!, size, qty).then((r) => {\n                          setRes(r);\n                          return r;\n                        });\n                      }}\n                    />\n                  </div>\n                );\n              })}\n          </Staff.Section>\n        </div>\n\n        <div className=\"span-md-3\">\n          <div className=\"\">\n            <Staff.Section border title=\"Client\" actions={<>Modifier</>}>\n              <CustomerCard data={cart.customer_data} />\n            </Staff.Section>\n\n            <Staff.Section border title=\"Panier\" actions={cart.items.length} footer={<>Confirmer</>}>\n              {cart.items.map((i) => {\n                const { product, size, quantity } = i;\n                return (\n                  <div className=\"\" key={i.slug}>\n                    <div className=\"p\">{product.name}</div>\n                    <div className=\"d-flex justify-content-between\">\n                      <span className=\"\">{size}</span>\n\n                      <span className=\"\">{quantity}</span>\n                    </div>\n                    <div className=\"\">{}</div>\n                  </div>\n                );\n              })}\n\n              <div className=\"mt-4\">\n                <div className=\"\">\n                  <span className=\"\">Subtotal</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"\">Total</span>\n                </div>\n              </div>\n            </Staff.Section>\n          </div>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nexport const ProductAddForm = ({\n  item,\n  onItemClick,\n  ...props\n}: {\n  item: TProduct;\n  onItemClick: (p: TProduct, size: string, qty: string) => Promise<TOrder>;\n}) => {\n  const form = useForm({ quantity: 1, size: '' });\n\n  if (!item?.slug) return null;\n\n  const { sizes = [], is_oos, category_data, cover_data, name, size_count = 0 } = item;\n\n  const canAdd = !is_oos && size_count > 0;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        onItemClick(item, form.values.size, form.values.quantity).catch((err) => {\n          form.handleError(err);\n        });\n      }}\n    >\n      <Staff.Section\n        border\n        header={\n          <div className=\"d-flex\">\n            <div style={{ minWidth: 34, maxWidth: 50 }} className=\"me-1\">\n              <Staff.Img.Thumb src=\"src\" {...cover_data} className=\"rounded\" />\n            </div>\n\n            <div className=\"flex-1\" title={name}>\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{truncateStr(name!, 0, 45)}</span>\n              </div>\n\n              <div className=\"d-flex flex-column flex-md-ro justify-content-between\">\n                <div className=\"d-grid grid-md-2 gap-1 flex-1\">\n                  <SizeSelectField required sizes={sizes.filter((i) => i.quantity > 0)} error={form.errors.size} />\n                  <SizeQuantityField max={sizes.find((i) => i.slug === form.values.size)?.quantity || 0} min={1} />\n                </div>\n                <div className=\"text-right\">\n                  <Form.Submit className=\"btn btn-primary-2 btn-md fw-bold\">Ajouter</Form.Submit>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        actions={<ProductPriceDisplay {...item} className=\"d-flex flex-wrap\" />}\n        className=\"mb-1\"\n      ></Staff.Section>\n    </Form>\n  );\n};\n","import { ViewSection } from '@miq/componentjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CustomerCard } from './components';\nimport { Cart } from './models';\nimport { TCart } from './types';\n\nexport default function SalesIndexView() {\n  const { res, setRes, loading, ...request } = useRequest(() => Cart().list());\n\n  const r = new Response<TCart>(res);\n\n  return (\n    <Staff.View\n      title=\"Sales\"\n      actions={\n        <>\n          <Staff.Link to=\"cart/\" className=\"btn btn-primary\">\n            Ajouter une commande\n          </Staff.Link>\n        </>\n      }\n    >\n      {r.items?.map((i) => {\n        const { customer, items = [] } = i || {};\n\n        return (\n          <ViewSection key={i.slug}>\n            <Link to={`cart/${i.slug}/`}>\n              <CustomerCard data={customer} />\n              {items.map((i) => {\n                return (\n                  <>\n                    <div>{i?.product?.name}</div>\n                  </>\n                );\n              })}\n            </Link>\n          </ViewSection>\n        );\n      })}\n    </Staff.View>\n  );\n}\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport CartCreateView from './CartCreateView';\nimport CartUpdateView from './CartUpdateView';\nimport SalesIndexView from './IndexView';\n\n// const ProductsView = lazy(() => import('./ProductsView'));\n// const CartDetailView = React.lazy(() => import('./CartDetailView'));\n// const OrderCreateView = React.lazy(() => import('./OrdCreateView'));\n\nexport default function SalesStaffRoutes() {\n  return (\n    <Routes>\n      {/* <Route path=\":catMetaSlug/:prodMetaSlug/\" element={<ProductView />} /> */}\n      {/* <Route path=\"cart/\" element={<CartDetailView />} /> */}\n      <Route path=\"cart/:cartSlug/\" element={<CartUpdateView />} />\n      <Route path=\"cart/\" element={<CartCreateView />} />\n      <Route path=\"/\" element={<SalesIndexView />} />\n    </Routes>\n  );\n}\n\nexport { CustomerFields } from './forms/fields';\nexport * from './types';\n","import * as React from 'react';\nimport Form, { FormFieldProps, IFormCallbackProps, SelectFieldProps, TextFieldProps, useForm } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { StaffProduct } from '../models';\nimport { TProductSize } from '../../types';\n\ntype UpdateFormProps = IFormCallbackProps & {\n  data: any;\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\nexport const SizeUpdateForm = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  const form = useForm<TProductSize>({\n    name: data.name || '',\n    code: data.code || '',\n    quantity: data.quantity || 0,\n  });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n\n  const { onSuccess, onError } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchSize(data.slug, form.values)\n          .then((res: any) => onSuccess?.(res))\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <SizeDeleteButton {...{ productInstance, data, onSuccess, onError }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst commonSizes: { [k: string]: any } = {\n  xs: { name: 'Extra-small', code: 'XS' },\n  s: { name: 'Small', code: 'S' },\n  m: { name: 'Medium', code: 'M' },\n  l: { name: 'Large', code: 'L' },\n  xl: { name: 'Extra-large', code: 'XL' },\n};\nconst formDefaultValues: TProductSize = { name: '', code: '', quantity: 1 };\n\nexport const SizeAddForm = ({ productInstance, ...props }: Omit<UpdateFormProps, 'data'>) => {\n  const form = useForm<TProductSize>(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postSize(form.values)\n          .then((res: any) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-flex my-2\">\n        <Button\n          onClick={() => form.setValues({ ...form.values, name: 'One-size', code: 'ONESIZE' })}\n          className=\"size-select-btn me-1\"\n        >\n          One/size\n        </Button>\n\n        {Object.keys(commonSizes).map((key: string) => {\n          const data = commonSizes[key];\n          return (\n            <Button\n              onClick={() => form.setValues({ ...form.values, ...data })}\n              className=\"size-select-btn me-1\"\n              key={key}\n            >\n              {key}\n            </Button>\n          );\n        })}\n      </div>\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst SizeNameField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        placeholder=\"Entrez le nom de la taille ...\"\n        {...rest}\n        required\n        name=\"name\"\n        maxLength={20}\n        minLength={2}\n      />\n    </Form.Field>\n  );\n};\nconst SizeCodeField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez le code de la taille ...\" {...rest} required name=\"code\" maxLength={10} />\n    </Form.Field>\n  );\n};\n\nexport const SizeQuantityField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez la quantité ...\" {...rest} required type=\"number\" name=\"quantity\" min={0} />\n    </Form.Field>\n  );\n};\n\nexport const SizeSelectField = (props: SelectFieldProps & { sizes: TProductSize[] }) => {\n  const { label, text, error, sizes, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"size\" nullValue={{ label: 'Sélectionnez une taille ...' }}>\n        {sizes?.map((size) => {\n          return <Form.Option label={size.code?.toUpperCase()} value={size.slug!} key={size.slug} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nconst SizeSkuField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Sku\" {...rest} name=\"sku\" maxLength={99} minLength={2} />\n    </Form.Field>\n  );\n};\n\nconst SizeDeleteButton = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer une taille</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteSize(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onError?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this size:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"size-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\nimport { NavLink, useParams, useSearchParams } from 'react-router-dom';\n\nimport { getCN } from '@miq/utiljs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons, ViewSection } from '@miq/componentjs';\nimport Staff, { ImgAddButtonProps, StaffImg, StaffImgAddButton } from '@miq/staffjs';\n\nimport { emitter } from '../events';\nimport { TSupplierOrderInstance } from '../Supplier';\nimport { TProduct, TProductStageData } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\n\n//#region ============================== BUTTONS\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: TStaffProductInstance;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TStaffProductInstance>, 'context'> & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\n//#endregion ============================== BUTTONS\n\nexport const ProductListItem = ({\n  item,\n  ...props\n}: {\n  item: TProduct;\n  orderInstance?: TSupplierOrderInstance;\n  stages: TProductStageData[];\n  params?: URLSearchParams;\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  if (!item?.slug) return null;\n  const { params, orderInstance, stages = [] } = props;\n\n  const instance = StaffProduct(item);\n  const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n  const { supplier_item = { cost: 0 }, stage } = instance;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-itemscenter\" onClick={() => setOpen(!open)}>\n          <div style={{ width: 48 }}>\n            <Staff.Img.Thumb src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1 d-grid grid-md-3\">\n            <div className=\"span-md-2\">\n              {item.is_oos && <span className=\"text-sm text-danger\">Out of stock</span>}\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{item.name_truncated}</span>\n                <PublishedIcon show={item.is_published || false} />\n              </div>\n\n              <div className=\"d-flex text-sm\">\n                <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n                <div className=\"text-muted px-1\">{`|`}</div>\n                {supplier_item && supplier_item?.cost && (\n                  <div className=\"text-muted\">{`${supplier_item?.cost} ${orderInstance?.currency || 'USD'}`}</div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"text-sm\">\n              <div>\n                <span className=\"\">\n                  {instance?.category_data?.name || \"' - '\"}\n                  {supplier_item && <span className=\"text-muted\">{` | ${supplier_item.category}`}</span>}\n                </span>\n              </div>\n\n              <span>{`Sizes: ${instance.size_count}`}</span>\n              {stageData && <span className=\"text-muted\">{` - ${stageData.label}`}</span>}\n\n              {supplier_item && (\n                <a className=\"ms-1\" href={supplier_item.url} target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n              )}\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <Staff.Link to={`./${to}`} className=\"btn btn-square btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"mb-1\"\n    >\n      {open && <div className=\"\"></div>}\n    </ViewSection>\n  );\n};\n\nexport const ProductCardItem = ({ data, ...props }: { data: TProduct }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: TProduct[];\n  itempath: string;\n};\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  const { prodSlug } = useParams();\n\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: TProduct) => {\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug} className={getCN([prodSlug === item.slug && 'active'])}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { FormProps, IFormCallbackProps, IFormUpdateProps, useForm } from '@miq/formjs';\nimport { getCN, isRequired as isR } from '@miq/utiljs';\n\nimport { emitter } from '../../events';\nimport { CategoryChoicesType } from '../../types';\n\nimport { StaffProduct, TStaffProductInstance } from '../models';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\nimport { Button } from '@miq/componentjs';\nimport { SupplierOrder } from '../../Supplier';\n\nimport * as ProductFields from './fields';\n\n/**\n *\n */\n\ninterface IProductUpdateFormProps extends IFormUpdateProps<TStaffProductInstance> {\n  onWillSubmit?: () => void;\n  fields?: string[];\n}\n\nexport const ProductQuickUpdateForm = (\n  props: Omit<IProductUpdateFormProps, 'context'> & { categories: CategoryChoicesType; orderSlug?: string }\n) => {\n  const { instance, categories, orderSlug, ...rest } = props;\n\n  const form = useForm({\n    name: instance.name || '',\n    category: instance.category || '',\n    description: instance.description || '',\n    retail_price: instance?.retail_price || 0.0,\n    is_pre_sale: instance.is_pre_sale || false,\n    is_pre_sale_text: instance.is_pre_sale_text || '',\n  });\n\n  const { errors } = form;\n  const { fields = ['name', 'category', 'description', 'retail_price', 'is_pre_sale', 'is_pre_sale_text'] } = props;\n\n  return (\n    <ProductUpdateForm {...rest} context={form} instance={instance} fields={fields}>\n      <ProductForm.NameField error={errors.name} />\n\n      <ProductForm.DescriptionField error={errors.description} />\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        {categories && <ProductForm.CategoryField categories={categories} error={errors.category} />}\n        <ProductForm.RetailPriceField error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label=\"En pré-vente\" error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField label=\"Pre-sale text\" placeholder=\"Explain ...\" error={errors.is_pre_sale_text} />\n      )}\n\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div>\n          {orderSlug && instance?.slug && (\n            <Button\n              onClick={() => {\n                SupplierOrder({ slug: orderSlug }).destroyItem(instance.slug!);\n              }}\n            >\n              Remove from order\n            </Button>\n          )}\n        </div>\n\n        <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 btn-md\" />\n      </div>\n    </ProductUpdateForm>\n  );\n};\n\nexport function ProductUpdateForm({ children, ...props }: IProductUpdateFormProps) {\n  const {\n    instance = isR('StaffProduct instance'),\n    fields = isR('fields instance'),\n    onSuccess,\n    onError,\n    ...rest\n  } = props;\n\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props?.onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      if (field == 'is_pre_sale_dt' && !value) return;\n\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then(({ data }: any) => {\n        onSuccess?.(data);\n        emitter.update(data);\n      })\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm {...rest} onSubmit={handleSubmit}>\n      {children}\n    </ProductForm>\n  );\n}\n\n/**\n *\n */\n\nexport interface ProductCreateFormProps extends IFormCallbackProps {}\n\nexport const ProductCreateForm: React.FC<ProductCreateFormProps> = (props) => {\n  const form = useForm({ name: '', retail_price: '', description: '' });\n\n  const { errors } = form;\n\n  const handleCreate = (e: React.FormEvent) => {\n    e.preventDefault();\n    StaffProduct()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => form.handleError(err));\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleCreate}>\n      <ProductForm.NameField label=\"Nom du produit\" error={errors.name} />\n      <ProductForm.RetailPriceField required={false} label=\"Prix du produit\" error={errors.retail_price} />\n      <ProductForm.DescriptionField label=\"Description du produit\" error={errors.description} />\n\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductForm>\n  );\n};\n\n/**\n *\n */\n\nexport const ProductForm = (props: FormProps) => <Form {...props} />;\n\n/**\n *\n */\n\nProductForm.NameField = ProductFields.NameField;\nProductForm.DescriptionField = ProductFields.DescriptionField;\nProductForm.CategoryField = ProductFields.CategoryField;\nProductForm.SalePriceField = ProductFields.SalePriceField;\nProductForm.OnSaleCheckboxField = ProductFields.OnSaleCheckboxField;\nProductForm.OosCheckboxField = ProductFields.OosCheckboxField;\nProductForm.PresaleTextField = ProductFields.PresaleTextField;\nProductForm.RetailPriceField = ProductFields.RetailPriceField;\nProductForm.StageSelectField = ProductFields.StageSelectField;\nProductForm.PresaleCheckboxField = ProductFields.PresaleCheckboxField;\nProductForm.IsExplicitCheckboxField = ProductFields.IsExplicitCheckboxField;\n\n//\n//\n//\n\nexport const ProductListFilterForm = ({\n  children,\n  ...props\n}: {\n  children?: React.ReactNode;\n  categories?: CategoryChoicesType;\n}) => {\n  const [params, setParams] = useSearchParams();\n  const [q, setQ] = React.useState<string>(params.get('q') || '');\n  const { categories, ...rest } = props;\n\n  return (\n    <form\n      {...rest}\n      action=\".\"\n      method=\"GET\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (!q) params.delete('q');\n        else params.set('q', q);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {children || (\n        <>\n          <div className=\"mb-2 d-flex\">\n            <input\n              type=\"text\"\n              name=\"q\"\n              value={q}\n              onChange={(e) => {\n                const { value } = e.target;\n                setQ(value);\n                if (!value && params.get('q')) params.delete('q');\n              }}\n              className=\"miq-form-input flex-1\"\n              placeholder=\"Cherchez un produit par nom, categorie ou numero de serie ...\"\n            />\n            <Form.Submit value={'Search'} className=\"btn-primary-3 ms-1\" />\n          </div>\n\n          {categories && <ProductListFilterForm.Category {...{ params, setParams, categories }} />}\n\n          <ProductListFilterForm.Published {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.Sale {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.PreSale {...{ params, setParams }} className=\"mb-1\" />\n        </>\n      )}\n    </form>\n  );\n};\n\ntype TParamsProps = {\n  params: URLSearchParams;\n  setParams: (\n    nextInit: URLSearchParamsInit,\n    navigateOptions?:\n      | {\n          replace?: boolean | undefined;\n          state?: any;\n        }\n      | undefined\n  ) => void;\n};\n\ntype QuerySelectFieldProps = TParamsProps & {\n  emptyLabel?: string;\n  name: string;\n  children?: React.ReactNode;\n  className?: string;\n};\n\nProductListFilterForm.Category = (props: Omit<QuerySelectFieldProps, 'name'> & { categories: CategoryChoicesType }) => {\n  const { categories, ...rest } = props;\n\n  return (\n    <QuerySelectField emptyLabel=\"Categorie ...\" {...rest} name=\"cat\">\n      <option value=\"no-cat\">Sans catégorie</option>\n\n      {categories.items.map((cat) => {\n        return (\n          <option value={cat.value} key={cat.slug}>\n            {cat.label}\n          </option>\n        );\n      })}\n    </QuerySelectField>\n  );\n};\n\nProductListFilterForm.Published = (props: Omit<QuerySelectFieldProps, 'name'>) => {\n  return (\n    <QuerySelectField emptyLabel=\"Tous les produits ...\" {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"pinned\">Produits épinglés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n      <option value=\"explicit\">Produits exclus de Facebook</option>\n    </QuerySelectField>\n  );\n};\n\nconst QuerySelectField = ({ children, ...props }: QuerySelectFieldProps) => {\n  const { name, params, setParams, emptyLabel } = props;\n  return (\n    <select\n      className={getCN(['miq-select', props.className])}\n      name={name}\n      value={params.get(name) || ''}\n      onChange={(e) => {\n        const { value } = e.target;\n\n        if (!value) params.delete(name);\n        else params.set(name, value);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {emptyLabel && <option value=\"\">{emptyLabel}</option>}\n      {children}\n    </select>\n  );\n};\n\nProductListFilterForm.PreSale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"presale\" label=\"En pré-vente\" />;\n};\n\nProductListFilterForm.Sale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"sale\" label=\"En promo\" />;\n};\n\ntype QueryToggleFieldProps = Omit<QuerySelectFieldProps, 'emptyLabel'> & { label: string; inputId?: string };\n\nconst QueryToggleField = (props: QueryToggleFieldProps) => {\n  const { label, name, params, setParams, inputId } = props;\n\n  return (\n    <div className={getCN(['miq-query-filter-toggle d-flex align-items-center', props.className])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox me-1\"\n        id={inputId}\n        onChange={(e) => {\n          const { checked } = e.target;\n          if (!checked) params.delete(name);\n          else params.set(name, `${checked}`);\n          params.delete('page');\n          setParams(params);\n        }}\n        checked={Boolean(params.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n","import Form, { CheckboxFieldProps, SelectFieldProps, TextChoicesType, TextFieldProps } from '@miq/formjs';\nimport { DescriptionField as DField, NameField as NField } from '@miq/formjs';\nimport { CategoryChoicesType } from '../../types';\n\nexport const NameField = (props: TextFieldProps) => (\n  <NField placeholder=\"Entrez un titre clair et concis ...\" {...props} />\n);\nexport const DescriptionField = (props: TextFieldProps) => (\n  <DField placeholder=\"Décrivez les caractéristiques et les avantages ...\" {...props} />\n);\n\nexport const CategoryField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nexport const SalePriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        required\n        placeholder=\"Prix réduit\"\n        {...rest}\n        type=\"number\"\n        name=\"sale_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport const OnSaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_on_sale\" />\n    </Form.Field>\n  );\n};\n\nexport const PresaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_pre_sale\" />\n    </Form.Field>\n  );\n};\n\nexport const OosCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = 'En rupture de stock', text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_oos\" />\n    </Form.Field>\n  );\n};\n\nexport const PresaleTextField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.TextAreaX placeholder=\"\" {...rest} name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </Form.Field>\n  );\n};\n\nexport const RetailPriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        required\n        placeholder=\"Prix\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        {...rest}\n        type=\"number\"\n        name=\"retail_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport type TProductStageSelectFieldProps = SelectFieldProps & { stages: TextChoicesType };\n\nexport const StageSelectField = (props: TProductStageSelectFieldProps) => {\n  const { label, text, error, required = true, stages, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select required={required} name={'stage'} nullValue={{ label: 'Select stage' }} {...rest}>\n        {stages?.map?.((stage) => {\n          return <Form.Option {...stage} key={stage.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nexport const IsExplicitCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = 'Exclude from facebook feed', text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_explicit\" />\n    </Form.Field>\n  );\n};\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TProduct } from '../types';\n\nclass StaffProductService extends StaffService<TProduct> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: TProduct) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<TProduct, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n\nexport type TStaffProductInstance = ReturnType<typeof StaffProduct>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (\n  orderSlug?: string,\n  filter?: { published?: 'include' | 'exclude'; atc?: 0 | 1 }\n) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale, q, ...filter };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct({}).list({ params: searchParams }), {\n    refreshDeps: [q, page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import * as React from 'react';\nimport Form, {\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  useForm,\n  TextFieldProps,\n  CheckboxFieldProps,\n  SelectFieldProps,\n  TextChoicesType,\n} from '@miq/formjs';\nimport { SupplierOrder } from './models';\nimport { ProductForm } from '../Product/forms';\nimport { TProductStageSelectFieldProps } from '../Product/forms/fields';\n\ninterface ISupplierOrderUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof SupplierOrder>;\n  fields: string[];\n}\n\nexport const SupplierOrderUpdateForm: React.FC<ISupplierOrderUpdateFormProps> = ({ instance, fields, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <SupplierOrderForm {...rest} onSubmit={handleSubmit} />;\n};\n\n//#region ==================================== SUPPLIER ORDER FORM\n\nexport const SupplierOrderForm = (props: FormProps) => <Form {...props} />;\n\nSupplierOrderForm.NameField = (props: TextFieldProps) => {\n  const { label = 'Name', text = 'Write a name to help remember your order.', error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Nom\" maxLength={99} {...rest} name=\"name\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.OrderIDField = (props: TextFieldProps) => {\n  const { label = 'Order ID', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Order ID\" maxLength={99} {...rest} name=\"order_id\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.IsPaidField = (props: CheckboxFieldProps) => {\n  const { label = 'Payé', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error} checkbox>\n      <Form.Checkbox {...rest} name=\"is_paid\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.TotalCostField = (props: TextFieldProps) => {\n  const { label = 'Coût total', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text min=\"0\" step=\"0.01\" {...rest} required type=\"number\" name=\"total_cost\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.CurrencyField = (props: SelectFieldProps & { currencies: TextChoicesType }) => {\n  const { label, text = 'Select the supplier currency.', error, currencies, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"currency\" nullValue={{ label: 'Sélectionnez une monnaie ...' }}>\n        {currencies?.map((curr) => {\n          return <Form.Option {...curr} key={curr.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.SupplierField = (props: SelectFieldProps & { suppliers: TextChoicesType }) => {\n  const { label, text = 'Select the supplier.', error, suppliers, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"supplier\" nullValue={{ label: 'Sélectionnez le supplier ...' }}>\n        {suppliers?.map((supplier) => {\n          return <Form.Option {...supplier} key={supplier.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.StageSelectField = (props: TProductStageSelectFieldProps) => (\n  <ProductForm.StageSelectField required={false} {...props} />\n);\n\n//#endregion ==================================== SUPPLIER ORDER FORM\n\ninterface ISupplierOrderProductAddFormProps extends IFormCallbackProps {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  children?: React.ReactNode;\n}\n\nexport const SupplierOrderProductAddForm = ({ children, ...props }: ISupplierOrderProductAddFormProps) => {\n  const { orderInstance, onSuccess, onError } = props;\n  const supplier = orderInstance?.supplier?.toLowerCase();\n\n  const form = useForm({ supplier_name: supplier, url: '' });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const { url } = form.values;\n\n    const handleSuccess = (res: any) => {\n      setLoading(false);\n      form.setValue('url', '');\n      return onSuccess?.(res);\n    };\n\n    const handleError = (err: any) => {\n      form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n      setLoading(false);\n      return onError?.(err);\n    };\n\n    const urlErrMsg = `Invalid Url: does not match supplier ${orderInstance.supplier}`;\n\n    switch (supplier) {\n      case 'fnova':\n        if (!url.includes('fashionnova')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postFnova(url).then(handleSuccess).catch(handleError);\n      case 'plt':\n        if (!url.includes('prettylittlething')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postPlt(url).then(handleSuccess).catch(handleError);\n\n      default:\n        if (!url.includes(supplier)) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postShein(url).then(handleSuccess).catch(handleError);\n    }\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n      <Form.Field error={form.errors.url}>\n        <div className=\"d-flex flex-column flex-md-row align-items-center\">\n          <Form.Text\n            required\n            autoFocus\n            name=\"url\"\n            type=\"url\"\n            placeholder={`Add ${supplier} product source url ...`}\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <div className=\"mt-1 mt-md-0\">\n            <Form.Submit value=\"Add product\" className=\"btn btn-primary-3\" disabled={isLoading} />\n          </div>\n        </div>\n      </Form.Field>\n\n      {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n    </Form>\n  );\n};\n\nconst u = 'https://www.fashionnova.com/products/jessa-denim-mini-dress-white';\nconst shein404 = 'https://us.shein.com/Clear-Acrylic-Frame-Glasses-p-1792787-cat-2842.html';\nconst fnovavariant = 'https://www.fashionnova.com/products/kayla-seamless-bandeau-olive?variant=12191869272188';\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport './supplier-product-list.scss';\n\nimport Staff from '@miq/staffjs';\nimport { Button, HorizontalScrollGridLayout, Icons, Pagination, ViewSection } from '@miq/componentjs';\n\nimport { StaffProduct } from '../Product';\nimport { useProductListRequest } from '../Product';\nimport { ProductForm, ProductQuickUpdateForm } from '../Product/forms';\nimport { ProductDeleteButton } from '../Product/components';\nimport { CategoryChoicesType, TProduct, TProductStageData } from '../types';\n\nimport { SupplierOrder } from './models';\nimport Form, { useForm } from '@miq/formjs';\n\nexport type SupplierProductListProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nexport default function SupplierProductList({\n  orderInstance,\n  refreshOrder,\n  categories,\n  stages,\n}: SupplierProductListProps) {\n  const { ordSlug } = useParams();\n  const { res = { data: { results: [] } }, refresh } = useProductListRequest(ordSlug);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const form = useForm({ category: '' });\n\n  const updateCategories = () => {\n    const { category } = form.values;\n    if (!category) return;\n\n    orderInstance\n      .updateCategories(category, selected)\n      .then((r) => {\n        refresh();\n        form.setValue('category', '');\n      })\n      .catch((err) => {});\n  };\n\n  const isSelected = selected.length !== 0;\n\n  return (\n    <Staff.Section\n      actions={\n        isSelected && (\n          <>\n            <span className=\"p-1\" onClick={() => setSelected([])} style={{ cursor: 'pointer' }}>\n              [x]\n            </span>\n          </>\n        )\n      }\n      footer={<Pagination {...res.data} component={Staff.NavLink} to />}\n      className=\"supplier-p-list\"\n    >\n      {res.data?.results.length ? (\n        <>\n          {isSelected && (\n            <div className=\"bg-white p-1\" style={{ position: 'sticky', top: 0, zIndex: 1000 }}>\n              <Form context={form}>\n                <div className=\"d-flex\">\n                  {categories && <ProductForm.CategoryField categories={categories} error={form.errors.category} />}\n                </div>\n              </Form>\n\n              <Button className=\"btn-primary\" onClick={updateCategories}>\n                Publier\n              </Button>\n            </div>\n          )}\n\n          {res.data.results.map((item: TProduct) => (\n            <SupplierProductListItem\n              {...{ orderInstance, categories, selected, setSelected, refreshOrder, stages }}\n              instance={StaffProduct(item)}\n              key={item.slug}\n            />\n          ))}\n        </>\n      ) : null}\n    </Staff.Section>\n  );\n}\n\ntype TSPListItemProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  instance: ReturnType<typeof StaffProduct>;\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nconst ItemCheckBox = ({ instance, selected, setSelected }: TSPListItemProps) => (\n  <input\n    type=\"checkbox\"\n    name=\"selected\"\n    className=\"me-2\"\n    checked={selected.includes(instance.slug!)}\n    onChange={({ target }) => {\n      const { checked } = target;\n      if (checked) setSelected([...selected, instance.slug!]);\n      else setSelected((selected) => selected.filter((i) => i !== instance.slug));\n    }}\n  />\n);\n\nconst SupplierProductListItem = (props: TSPListItemProps) => {\n  // Used for deleted items\n  const [hide, setHide] = React.useState<boolean>(false);\n\n  const { instance, categories } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  if (hide) return null;\n\n  const { supplier_item, stage } = instance;\n  const { orderInstance, stages = [] } = props;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-items-center\">\n          <ItemCheckBox {...props} />\n\n          <div style={{ width: 48, height: 48 }} onClick={() => setOpen(!open)}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1\">\n            <div className=\"text-ellipsis\">{instance.name}</div>\n            <div className=\"text-sm\">\n              {instance.is_on_sale && instance.sale_price && (\n                <span className=\"\">\n                  {instance.sale_price} {`<-`}{' '}\n                </span>\n              )}\n              <span className=\"\">{instance.retail_price}</span>\n              <span className=\"text-muted\">\n                {' | '}\n                {supplier_item.cost} {orderInstance.currency}\n              </span>\n              <span className=\"\">\n                {' - '}\n                {instance.category_data?.name || \"' - '\"}\n                <span className=\"text-muted\">\n                  {' | '}\n                  {supplier_item.category}\n                </span>\n              </span>\n              {stageData && (\n                <span className=\"text-muted\">\n                  {' - '}\n                  {stageData.label}\n                </span>\n              )}\n\n              <a className=\"btn ms-1\" href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <ProductDeleteButton\n            instance={instance}\n            onSuccess={() => {\n              setHide(true);\n              props?.refreshOrder?.();\n            }}\n            className=\"me-2\"\n          />\n          <Staff.Link to={`./${instance.slug}/`} className=\"btn btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"suppier-p-list-item bg-white\"\n    >\n      {open && (\n        <HorizontalScrollGridLayout className=\"form-tab no-scroll-bar gap-2\">\n          <ProductQuickUpdateForm instance={instance} categories={categories} orderSlug={orderInstance?.slug} />\n\n          <div className=\"\">\n            <div className=\"mb-1\">\n              {`${supplier_item.item_id ? <span className=\"\">Item ID: {supplier_item.item_id}</span> : ''}`}\n            </div>\n            <ul>\n              {supplier_item.category && (\n                <li className=\"mb-1\">\n                  <div className=\"text-sm\">Supplier Category</div>\n                  <div className=\"text-muted\">{supplier_item.category}</div>\n                </li>\n              )}\n              <li className=\"mb-1\">\n                <div className=\"text-sm\">FOB Cost({orderInstance.currency})</div>\n                <div className=\"text-muted\">{supplier_item.cost}</div>\n              </li>\n\n              {supplier_item.url && (\n                <li className=\"\">\n                  <a href={supplier_item.url} target=\"_blank\" className=\"text-underline\" rel=\"noopener noreferrer\">\n                    View supplier product page\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        </HorizontalScrollGridLayout>\n      )}\n    </ViewSection>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Icons, Loading, ViewSection, ButtonProps } from '@miq/componentjs';\nimport { SupplierOrderForm, SupplierOrderProductAddForm, SupplierOrderUpdateForm } from './forms';\nimport SupplierProductList from './SupplierProductList';\nimport { TSupplierOrder } from '../types';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { ProductListFilterForm } from '../Product/forms';\n\nconst formFields: { [key: string]: any } = {\n  name: '',\n  order_id: '',\n  stage: '',\n  currency: 'USD',\n  supplier: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nconst mapDataToValues = (data: any = {}): TSupplierOrder => {\n  const values: any = {};\n  Object.keys(formFields).forEach((k) => {\n    values[k] = data[`${k}`] || formFields[`${k}`];\n  });\n  return values;\n};\n\nexport default function OrderUpdateView() {\n  const { ordSlug } = useParams();\n\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { suppliers, currencies } = React.useContext(SharedDataCtx) as any;\n\n  const { setValues } = form;\n  const {\n    res,\n    loading,\n    setLoading,\n    setRes: setOrder,\n    refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  // console.log(r.data.stages);\n\n  if (!instance.supplier || !instance.currency)\n    return (\n      <Staff.View title=\"Modifier une commande\" back=\"/staff/store/orders/\">\n        <Staff.Section className=\"d-flex justify-content-center mt-4\">\n          <SupplierOrderUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'currency', 'supplier']}\n            onSuccess={(res) => setOrder(res)}\n          >\n            <SupplierOrderForm.NameField required label=\"Nom\" error={form.errors.currency} />\n            <SupplierOrderForm.SupplierField\n              required\n              label=\"Supplier\"\n              suppliers={suppliers}\n              error={form.errors.supplier}\n            />\n            <SupplierOrderForm.CurrencyField\n              required\n              label=\"Supplier Currency\"\n              currencies={currencies}\n              error={form.errors.currency}\n            />\n\n            <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n          </SupplierOrderUpdateForm>\n        </Staff.Section>\n      </Staff.View>\n    );\n\n  return (\n    <Staff.View\n      title={form.values.name}\n      back=\"/staff/store/orders/\"\n      actions={\n        <Staff.NavLink to=\"settings/\">\n          <Icons.Gear />\n        </Staff.NavLink>\n      }\n    >\n      <div className=\"d-flex flex-column flex-xl-row\">\n        <div className=\"w-100\">\n          <Staff.Section header={<Header {...{ instance, setLoading, setOrder, categories: r?.data?.categories }} />}>\n            {loading ? (\n              <Loading icon />\n            ) : (\n              <SupplierProductList\n                orderInstance={instance}\n                categories={r?.data?.categories}\n                stages={r?.data?.stages}\n                refreshOrder={refreshOrder}\n              />\n            )}\n          </Staff.Section>\n        </div>\n\n        <div className=\"min-w-35 ps-md-1\">\n          <DetailDisplaySection {...{ loading, instance }} />\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst DetailDisplaySection = ({\n  loading,\n  instance,\n}: {\n  loading: boolean;\n  instance: ReturnType<typeof SupplierOrder>;\n}) => {\n  return (\n    <Staff.Section\n      border\n      className=\"bg-white mb-1\"\n      title={`Order Details${!loading && ` (${instance.products?.length})`}`}\n      text={`Supplier: ${instance.supplier} | Currency: ${instance.currency}`}\n    >\n      <div className=\"mb-2\">\n        Categories\n        <ul>\n          {instance?.by_categories\n            ?.filter((i) => i?.category__name)\n            ?.map(({ category__name: name, ...i }) => (\n              <DetailDisplaySection.Li title={name} key={name}>\n                : {i.count}\n              </DetailDisplaySection.Li>\n            ))}\n        </ul>\n      </div>\n\n      <ul className=\"mb-3\">\n        <DetailDisplaySection.Li title=\"Average cost: \">\n          {instance.avg_cost} {instance.currency}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Total cost: \">\n          {`${instance.total_cost || instance?.items_cost?.amountWithSymbol} ${instance.currency}`}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Est. revenue: \">{instance?.items_revenue?.amount}</DetailDisplaySection.Li>\n      </ul>\n    </Staff.Section>\n  );\n};\n\nDetailDisplaySection.Li = ({ children, title }: { children: React.ReactNode; title: string }) => (\n  <li>\n    <span className=\"mr-2 text-muted\">{title}</span>\n    {children}\n  </li>\n);\n\nconst Header = ({ instance, setLoading, setOrder, categories }: any) => {\n  const [tab, setTab] = React.useState<'filter' | 'add'>('filter');\n\n  const render = () => {\n    switch (tab) {\n      case 'add':\n        return (\n          <SupplierOrderProductAddForm\n            orderInstance={instance}\n            onSuccess={(res) => {\n              setLoading();\n              setOrder(res);\n            }}\n          />\n        );\n\n      default:\n        return <ProductListFilterForm categories={categories} />;\n    }\n  };\n\n  return (\n    <Staff.Section\n      border\n      title={\n        <div>\n          <HeaderButton tab={tab} onClick={() => setTab('filter')} active={tab === 'filter'}>\n            <Icons.Funnel />\n          </HeaderButton>\n        </div>\n      }\n      actions={\n        <HeaderButton tab={tab} onClick={() => setTab('add')} active={tab === 'add'}>\n          <Icons.Plus />\n        </HeaderButton>\n      }\n      className=\"bg-white mb-1\"\n    >\n      <div className=\"\" style={{ top: 0, position: 'sticky' }}>\n        {render()}\n      </div>\n    </Staff.Section>\n  );\n};\nconst HeaderButton = ({\n  children,\n  tab,\n  active,\n  ...props\n}: ButtonProps & { tab: string; children: React.ReactNode; active: boolean }) => {\n  return (\n    <Staff.Button\n      className=\"btn-primary-3\"\n      style={{ border: active ? '1px solid var(--blue-600)' : undefined }}\n      {...props}\n    >\n      {children}\n    </Staff.Button>\n  );\n};\n\nexport const OrderSettingUpdateView = () => {\n  const { ordSlug } = useParams();\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { setValues } = form;\n  const {\n    res,\n    // setRes: setOrder,\n    // refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  return (\n    <Staff.View title={`${instance.name} Order Update`} back={`/staff/store/orders/${ordSlug}/`}>\n      <SupplierOrderUpdateForm\n        {...{ instance, context: form, fields: ['is_paid', 'order_id', 'total_cost', 'stage'] }}\n        // onSuccess={(r) => setOrder({ ...res, ...r })}\n      >\n        <ViewSection border footer={<Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />}>\n          <SupplierOrderForm.IsPaidField error={form.errors.is_paid} className=\"my-2\" />\n          {form.values.is_paid && (\n            <>\n              <SupplierOrderForm.OrderIDField required={form.values.is_paid} error={form.errors.order_id} />\n              <SupplierOrderForm.TotalCostField required={form.values.is_paid} error={form.errors.total_cost} />\n            </>\n          )}\n\n          <SupplierOrderForm.StageSelectField {...{ stages: r.data.stages }} />\n        </ViewSection>\n      </SupplierOrderUpdateForm>\n    </Staff.View>\n  );\n};\n","import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { SupplierOrder, TSupplierOrderInstance } from './models';\nimport Staff from '@miq/staffjs';\n\ntype TSupplierOrderDeleteButtonProps = Omit<IFormUpdateProps<TSupplierOrderInstance>, 'context'> & {\n  label?: string;\n};\n\nexport const SupplierOrderDeleteButton: React.FC<TSupplierOrderDeleteButtonProps> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['s-order-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const SupplierOrderAddButton = (props: { onSuccess: (p?: any) => void; label?: string; className?: string }) => {\n  const { label = 'Add order' } = props;\n\n  return (\n    <Staff.Button\n      onClick={() => {\n        SupplierOrder()\n          .create({})\n          .then((r) => props?.onSuccess?.(r))\n          .catch((err: any) => {\n            // console.log(err);\n          });\n      }}\n      className={props.className}\n      requiredPerms={['store.add_supplierorder']}\n      title={'Add a new order'}\n    >\n      {label}\n    </Staff.Button>\n  );\n};\n\nexport const SupplierPrice = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { Pagination, Table } from '@miq/componentjs';\n\nimport { TSupplierOrder } from '../types';\n\nimport { SupplierOrder } from './models';\nimport { SupplierOrderAddButton, SupplierOrderDeleteButton, SupplierPrice } from './components';\n\nconst SupplierOrderRow = ({ item, removeItem }: { item: TSupplierOrder; removeItem: (payload: any) => void }) => {\n  const { name = 'New order', slug, is_paid, items, items_revenue, supplier } = item || {};\n\n  return (\n    <Table.Tr>\n      <Table.Td>\n        <Staff.Link to={`${slug}/`} className=\"\">\n          <div className={getCN(['fw-bold text-ellipsis', is_paid && 'text-line-through'])}>{name}</div>\n        </Staff.Link>\n        <span className=\"text-sm\">{item.avg_cost}</span>\n      </Table.Td>\n\n      <Table.Td>{items?.length}</Table.Td>\n\n      <Table.Td>{supplier}</Table.Td>\n\n      <Table.Td>\n        <SupplierPrice {...item.total_cost_data} />\n      </Table.Td>\n      <Table.Td>\n        <SupplierPrice {...items_revenue} />\n      </Table.Td>\n\n      <Table.Td>\n        <SupplierOrderDeleteButton instance={SupplierOrder(item)} onSuccess={() => removeItem?.({ slug })} />\n      </Table.Td>\n    </Table.Tr>\n  );\n};\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, removeItem } = useRequest(() => SupplierOrder().list({ params: { page } }), { refreshDeps: [page] });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const { items } = r;\n\n  return (\n    <Staff.View\n      title=\"Supplier Orders\"\n      back=\"/staff/store/\"\n      actions={\n        <SupplierOrderAddButton onSuccess={({ data }: any) => navigate(`${data.slug}/`)} className=\"btn-primary-3\" />\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      {Boolean(items.length) ? (\n        <Staff.Section footer={<Pagination {...r.data} component={Staff.Link} to />}>\n          <Table\n            border\n            items={items}\n            header={\n              <>\n                <Table.Th />\n                <Table.Th>Items</Table.Th>\n                <Table.Th>Supplier</Table.Th>\n\n                <Table.Th>Total Cost</Table.Th>\n                <Table.Th>Est. Revenue</Table.Th>\n                <Table.Th />\n              </>\n            }\n            renderItem={(item) => <SupplierOrderRow {...{ item, removeItem }} key={item.slug} />}\n            className=\"w-100\"\n          />\n        </Staff.Section>\n      ) : (\n        <div className=\"p-4\">\n          <div className=\"text-center\">\n            <div className=\"mb-4 text-md\">Add a supplier order to get started.</div>\n            <SupplierOrderAddButton\n              onSuccess={({ data }: any) => navigate(`${data.slug}/`)}\n              label=\"Add an order\"\n              className=\"btn-md btn-primary fw-bold\"\n            />\n          </div>\n        </div>\n      )}\n    </Staff.View>\n  );\n}\n\n// EXPORTS\n\nexport * from './models';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TSupplierOrder } from '../types';\n\nconst timeout = 10000;\n\nclass SupplierOrderService extends StaffService<TSupplierOrder> {\n  updateCategories(category: string, slugs: string[]) {\n    return this.post(`${this._path}batch/`, { slugs, category }, { timeout });\n  }\n\n  postFnova(url: string) {\n    return this.post(`${this._path}fnova/`, { url }, { timeout });\n  }\n  postPlt(url: string) {\n    return this.post(`${this._path}plt/`, { url }, { timeout });\n  }\n\n  postShein(url: string) {\n    return this.post(`${this._path}shein/`, { url }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n}\n\nexport const SupplierOrder = (data: TSupplierOrder = {}) =>\n  StaffModel<TSupplierOrder, SupplierOrderService>(data, 'supplierorders', SupplierOrderService);\n\nexport type TSupplierOrderInstance = ReturnType<typeof SupplierOrder>;\n\nexport type SupplierType = {\n  slug?: string;\n  name_choices: any;\n  created: any;\n  updated: any;\n};\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, TProduct } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: TProduct & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\n// interface IEventStateSyncProps {\n//   children?: React.ReactNode;\n// }\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n","import { ImgType } from '@miq/componentjs';\nimport { TextChoicesType } from '@miq/formjs';\nimport { WithMetaFields } from '@miq/utiljs';\n\nexport type PriceDataType = { currency: string; amount: string; amountWithSymbol: string };\nexport type PriceType = number | PriceDataType;\n\nexport type TProduct = WithMetaFields<{\n  slug?: string;\n\n  category?: string;\n  category_data?: TCategory;\n  name?: string;\n\n  cover?: string;\n  cover_data?: ImgType;\n  images?: string[];\n  images_data?: ImgType[];\n\n  readonly name_truncated?: string;\n  description?: string;\n  retail_price?: PriceType;\n  retail_price_data?: PriceDataType;\n  is_on_sale?: boolean;\n  sale_price?: PriceType;\n  sale_price_data?: PriceDataType;\n  is_pre_sale?: boolean;\n  is_pre_sale_text?: string;\n  is_pre_sale_dt?: string | Date;\n  url?: string;\n\n  has_attributes?: boolean;\n  attributes?: any[];\n  sizes?: any[];\n  size_count: number | undefined;\n\n  is_pinned?: boolean;\n  is_explicit?: boolean;\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  supplier_item: SupplierItemType;\n  position?: number;\n  color_group_pk?: string;\n  stage?: string;\n  is_oos: boolean | undefined;\n\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type CategoryChoicesType = {\n  items: TextChoicesType;\n};\n\nexport type TProductStageData = { name: string; label: string; value: string };\n\nexport type TCategory = WithMetaFields<{\n  slug?: string;\n  supplier_item_id?: string;\n  name?: string;\n  description?: string;\n  cover?: ImgType;\n  position?: number;\n\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  cover_data?: ImgType;\n  products_count?: number;\n  published_count?: number;\n  draft_count?: number;\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type SupplierItemType = {\n  slug?: string;\n  item_id?: string;\n  item_sn?: string;\n  category?: string;\n  url?: string;\n  cost?: number;\n  created?: string;\n  updated?: string;\n};\n\nexport enum SupplierName {\n  SHEIN = 'SHEIN',\n  PLT = 'PLT',\n  FNOVA = 'FNOVA',\n}\n\nexport type TSupplierOrder = {\n  slug?: string;\n  name?: string;\n  supplier?: string;\n  order_id?: string;\n  products?: TProduct[];\n  items?: any[];\n  items_cost?: number;\n  items_revenue?: number;\n  avg_cost?: number;\n  by_categories?: { category__name: string; count: number }[] | undefined;\n\n  currency?: string;\n  is_paid?: boolean;\n  is_paid_dt?: string;\n  is_fulfilled_dt?: string;\n  total_cost?: number;\n  total_cost_data?: PriceDataType;\n};\n\nexport type TProductSize = {\n  slug?: string;\n  name?: string;\n  code?: string;\n  quantity?: number;\n};\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { SharedDataCtx, SharedDataState } from '@miq/contextjs';\nimport { OrderSettingUpdateView } from './Supplier/OrderUpdateView';\n\nconst ShopStaffIndexView = React.lazy(() => import('./IndexView'));\n\nconst SupplierOrderIndexView = React.lazy(() => import('./Supplier'));\nconst SupplierOrderProductUpdateView = React.lazy(() => import('./Supplier/OrderProductUpdateView'));\nconst SupplierOrderUpdateView = React.lazy(() => import('./Supplier/OrderUpdateView'));\n\nconst CategoryIndexView = React.lazy(() => import('./Category'));\nconst CategoryUpdateView = React.lazy(() => import('./Category/UpdateView'));\n\nconst ProductIndexView = React.lazy(() => import('./Product/IndexView'));\nconst ShopSettingUpdateView = React.lazy(() => import('./Setting'));\n\nexport default function ShopStaffRoutes() {\n  const { shopy_settings } = React.useContext(SharedDataCtx) as SharedDataState & { shopy_settings: any | null };\n\n  if (!shopy_settings) return null;\n\n  return (\n    <Routes>\n      <Route\n        path=\"orders/*\"\n        element={\n          <Routes>\n            <Route path={`:ordSlug/:prodSlug/`} element={<SupplierOrderProductUpdateView />} />\n            <Route path={`:ordSlug/settings/`} element={<OrderSettingUpdateView />} />\n            <Route path={`:ordSlug/`} element={<SupplierOrderUpdateView />} />\n            <Route path=\"/*\" element={<SupplierOrderIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"products/*\"\n        element={\n          <Routes>\n            <Route path=\"/*\" element={<ProductIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"categories/*\"\n        element={\n          <Routes>\n            <Route path=\":catSlug/\" element={<CategoryUpdateView />} />\n            <Route index element={<CategoryIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route path=\"settings/\" element={<ShopSettingUpdateView />} />\n      <Route path=\"/\" element={<ShopStaffIndexView />} />\n    </Routes>\n  );\n}\n\nexport * from './types';\n\nexport { useProductListRequest } from './Product/utils';\nexport { ProductListFilterForm } from './Product/forms';\nexport { ProductListItem } from './Product/components';\nexport { ProductPriceDisplay } from './components';\nexport { SizeQuantityField, SizeSelectField } from './Product/Size';\n"],"names":["CustomerService","q","this","list","params","StaffService","CartService","prodSlug","size","qty","post","_path","values","timeout","delete","Cart","data","StaffModel","CustomerSelect","customers","onItemClick","className","map","cust","onClick","first_name","last_name","phone","slug","CustomerLNameField","label","text","error","fieldCN","props","React","setCustomers","onCustomerSelect","allowSuggestions","rest","required","name","maxLength","minLength","onDebounce","value","length","Customer","find","then","r","items","Response","catch","err","Boolean","p","CustomerFNameField","CustomerEmailField","CustomerPhoneField","CustomerFields","LName","FName","Email","Phone","CustomerForm","children","instance","onSuccess","onError","fields","form","useForm","getCustomerFD","export","errors","sharedProps","context","includes","email","fd","forEach","field","CustomerCard","CartCreateView","navigate","useNavigate","customer","setCustomer","title","headerCN","undefined","create","console","log","createCart","type","CartUpdateView","useSearchParams","cartSlug","useParams","productRes","useProductListRequest","published","atc","res","useRequest","retrieve","refreshDeps","response","setRes","loading","isSuccess","cart","products","header","filter","i","product","ProductAddForm","item","addItem","border","actions","customer_data","footer","quantity","sizes","cover_data","is_oos","category_data","size_count","onSubmit","e","preventDefault","handleError","style","minWidth","maxWidth","src","truncateStr","max","min","SalesIndexView","to","SalesStaffRoutes","path","element","SizeUpdateForm","productInstance","code","patchSize","SizeNameField","SizeCodeField","SizeQuantityField","SizeDeleteButton","commonSizes","xs","s","m","l","xl","formDefaultValues","SizeAddForm","postSize","setValues","Object","keys","key","placeholder","SizeSelectField","nullValue","toUpperCase","renderHeader","renderFooter","setOpen","deleteSize","render","ProductImagesAddButton","multiple","onSuccessMulti","resArray","imgsArray","images","update","ProductDeleteButton","destroy","emitter","handleDelete","getCN","ProductListItem","open","orderInstance","stages","StaffProduct","supplier_item","cost","stage","stageData","width","name_truncated","show","is_published","currency","category","href","url","target","rel","ProductCardItem","ProductCardList","itempath","ProductQuickUpdateForm","categories","orderSlug","description","retail_price","is_pre_sale","is_pre_sale_text","ProductUpdateForm","ProductForm","NameField","DescriptionField","CategoryField","RetailPriceField","PresaleCheckboxField","PresaleTextField","SupplierOrder","destroyItem","isR","onWillSubmit","ProductCreateForm","cat","SalePriceField","step","OnSaleCheckboxField","checkbox","OosCheckboxField","StageSelectField","IsExplicitCheckboxField","ProductListFilterForm","setParams","get","setQ","action","method","set","onChange","Category","Published","Sale","PreSale","QuerySelectField","emptyLabel","QueryToggleField","inputId","id","checked","htmlFor","StaffProductService","patch","sizeSlug","attrSlug","dt_published","Date","page","presale","sale","searchParams","supplier_order_slug","SupplierOrderUpdateForm","SupplierOrderForm","OrderIDField","IsPaidField","TotalCostField","CurrencyField","currencies","curr","SupplierField","suppliers","supplier","SupplierOrderProductAddForm","toLowerCase","supplier_name","isLoading","setLoading","handleSuccess","setValue","setErrors","urlErrMsg","postFnova","postPlt","postShein","autoFocus","disabled","SupplierProductList","refreshOrder","ordSlug","results","refresh","selected","setSelected","isSelected","cursor","component","Staff","position","top","zIndex","updateCategories","SupplierProductListItem","ItemCheckBox","hide","setHide","height","is_on_sale","sale_price","item_id","formFields","order_id","is_paid","total_cost","mapDataToValues","k","OrderUpdateView","SharedDataCtx","setOrder","back","Header","icon","DetailDisplaySection","by_categories","category__name","Li","count","avg_cost","items_cost","amountWithSymbol","items_revenue","amount","tab","setTab","HeaderButton","active","OrderSettingUpdateView","SupplierOrderDeleteButton","SupplierOrderAddButton","requiredPerms","SupplierPrice","SupplierOrderRow","removeItem","total_cost_data","SupplierOrderIndexView","renderItem","SupplierOrderService","slugs","PublishButton","publish","UnPublishButton","unpublish","PriceDisplay","lineThrough","ProductPriceDisplay","retail_price_data","sale_price_data","isSale","PublishedIcon","ToastEmitter","CrudEmitter","args","prefix","payload","emit","EventEmitter","useCrudEmitter","callbacks","match","on","onCreate","call","onUpdate","onDestroy","SupplierName","ShopStaffIndexView","SupplierOrderProductUpdateView","SupplierOrderUpdateView","CategoryIndexView","CategoryUpdateView","ProductIndexView","ShopSettingUpdateView","ShopStaffRoutes","shopy_settings","index"],"sourceRoot":""}