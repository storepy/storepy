{"version":3,"file":"static/js/67.9813a57b.chunk.js","mappings":"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","sources":["../../../../packages/miq-staffjs/src/Img/index.tsx","../../../../packages/miq-staffjs/src/Setting/index.tsx","../../../../packages/miq-staffjs/src/Account/index.tsx","../../../../packages/miq-staffjs/src/Layout.tsx","../../../../packages/miq-staffjs/src/utils.tsx","../../../../packages/miq-staffjs/src/Views.tsx","../../../../packages/miq-staffjs/src/components.tsx","../../../../packages/miq-calendarjs/src/components.tsx","../../../../packages/miq-calendarjs/src/datepicker.tsx","../../../../packages/miq-calendarjs/src/index.tsx","../../../../packages/miq-staffjs/src/analytics/models.tsx","../../../../packages/miq-staffjs/src/analytics/utils.tsx","../../../../packages/miq-staffjs/src/analytics/components.tsx","../../../../packages/miq-staffjs/src/analytics/views.CampaignIndex.tsx","../../../../packages/miq-staffjs/src/analytics/views.tsx","../../../../packages/miq-staffjs/src/analytics/index.tsx","../../../../packages/miq-staffjs/src/index.tsx","../../../../.yarn/cache/@babel-runtime-npm-7.17.2-ec60bc114d-a48702d271.zip/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../../../.yarn/cache/@babel-runtime-npm-7.17.2-ec60bc114d-a48702d271.zip/node_modules/@babel/runtime/helpers/esm/get.js","../../../../packages/miq-staffjs/src/models.tsx","../../../../packages/miq-staffjs/src/service.tsx","../../../../shopy/shopy-orderjs/src/models.tsx","../../../../shopy/shopy-orderjs/src/forms/fields.tsx","../../../../shopy/shopy-orderjs/src/forms/index.tsx","../../../../shopy/shopy-orderjs/src/components/index.tsx","../../../../shopy/shopy-orderjs/src/CartCreateView.tsx","../../../../shopy/shopy-orderjs/src/CartUpdateView.tsx","../../../../shopy/shopy-orderjs/src/IndexView.tsx","../../../../shopy/shopy-orderjs/src/index.tsx","../../../../shopy/shopy-storejs/src/Product/Size/index.tsx","../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/forms/index.tsx","../../../../shopy/shopy-storejs/src/Product/forms/fields.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/Supplier/forms.tsx","../../../../shopy/shopy-storejs/src/Supplier/SupplierProductList.tsx","../../../../shopy/shopy-storejs/src/Supplier/OrderUpdateView.tsx","../../../../shopy/shopy-storejs/src/Supplier/components.tsx","../../../../shopy/shopy-storejs/src/Supplier/index.tsx","../../../../shopy/shopy-storejs/src/Supplier/models.tsx","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events/index.tsx","../../../../shopy/shopy-storejs/src/types.ts","../../../../shopy/shopy-storejs/src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as Axios from 'axios';\n\nimport Form from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { FileInput, Button, ButtonProps } from '@miq/componentjs';\nimport { StaffImg } from '../models';\n\n//#region COMPONENTS\n\nconst ACCEPT = 'image/*';\nconst MAX_UPLOAD_COUNT = 10;\n\ntype ImgCrudProps = ButtonProps & {\n  accept?: string;\n  onUpload?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSuccess?: (r?: Axios.AxiosResponse) => void;\n  onError?: (r?: Axios.AxiosResponse) => void;\n};\n\nexport interface ImgAddButtonProps extends ImgCrudProps {\n  label?: string;\n  multiple?: boolean;\n  onSuccessMulti?: (rs: Promise<Axios.AxiosResponse>[]) => void;\n  onErrorMulti?: (rs: Promise<Axios.AxiosResponse>[]) => void;\n}\n\nexport const StaffImgAddButton = React.forwardRef<HTMLButtonElement, ImgAddButtonProps>(\n  ({ children, ...props }, ref) => {\n    let uploadRef = React.useRef<HTMLInputElement | null>(null);\n\n    const instance = StaffImg();\n\n    const { label, multiple, accept = ACCEPT, ...func } = props;\n    const { onUpload, onSuccess, onSuccessMulti, onError, onErrorMulti, ...rest } = func;\n\n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (onUpload) return onUpload(e);\n\n      const { files } = e.target;\n      if (!files) return;\n\n      const file = Array.from(files)[0];\n      return instance\n        .create(file)\n        .then((res: any) => onSuccess?.(res))\n        .catch((err: any) => onError?.(err));\n    };\n\n    const uploadFiles = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (onUpload) return onUpload(e);\n\n      const { files } = e.target;\n      if (!files) return;\n\n      const promises: Promise<Axios.AxiosResponse | number>[] = [];\n      const errors: Promise<Axios.AxiosResponse>[] = [];\n\n      Array.from(files)\n        .splice(0, MAX_UPLOAD_COUNT)\n        .forEach((file, i) => {\n          promises.push(instance.create(file).catch((err: any) => errors.push(err)));\n        });\n\n      if (errors && onErrorMulti) onErrorMulti(errors);\n\n      Promise.all(promises).then((responses: any) => {\n        if (onSuccessMulti) return onSuccessMulti(responses);\n      });\n    };\n\n    return (\n      <>\n        <Button className=\"miq-img-create-btn\" {...rest} onClick={() => uploadRef?.current?.click()} ref={ref}>\n          {children || label || `Upload image${multiple ? 's' : ''}`}\n        </Button>\n        <FileInput\n          accept={accept}\n          multiple={multiple}\n          onChange={multiple ? uploadFiles : uploadFile}\n          ref={(file) => (uploadRef.current = file)}\n        />\n      </>\n    );\n  }\n);\n\nexport type StaffImgUpdateButtonProps = ImgAddButtonProps & {\n  instance: ReturnType<typeof StaffImg>;\n  field?: string;\n};\n\nexport const StaffImgUpdateButton = React.forwardRef<HTMLButtonElement, StaffImgUpdateButtonProps>((props, ref) => {\n  let uploadRef = React.useRef<HTMLInputElement | null>(null);\n\n  const { instance, accept = ACCEPT, ...func } = props;\n  let { field = 'src', onUpload, onSuccess, onError, ...rest } = func;\n\n  if (field === 'picture') return <div className=\"miq-img-update-btn\" children={props.children} />;\n\n  const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (field === 'picture') return null;\n    if (onUpload) return onUpload(e);\n\n    const { files } = e.target;\n    if (!files) return;\n\n    const file = Array.from(files)[0];\n    return instance\n      .update(file, undefined, field)\n      .then((res) => onSuccess?.(res))\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <>\n      <Button className=\"miq-img-update-btn\" {...rest} onClick={() => uploadRef?.current?.click()} ref={ref} />\n      <FileInput accept={accept} onChange={uploadFile} ref={(file) => (uploadRef.current = file)} />\n    </>\n  );\n});\n\nexport type StaffImgDeleteButtonProps = StaffImgUpdateButtonProps & {};\n\nexport const StaffImgDeleteButton = React.forwardRef<HTMLButtonElement, StaffImgDeleteButtonProps>(\n  ({ children, ...props }, ref) => {\n    const { instance, label, ...func } = props;\n    const { onSuccess, onError, ...rest } = func;\n\n    const handleDelete = () =>\n      instance\n        .destroy()\n        .then((res) => onSuccess?.(res))\n        .catch((err) => onError?.(err));\n    return (\n      <Button {...rest} onClick={handleDelete} className={getCN(['miq-img-delete-btn', props.className])} ref={ref}>\n        {children || label || `Delete Image`}\n      </Button>\n    );\n  }\n);\n\n//#endregion COMPONENTS\n\n//#region EXPORTS\n\nexport const StaffImgViewSelect = React.forwardRef<HTMLInputElement, any>((props, ref) => (\n  <Form.Select name=\"view\" {...props} ref={ref}>\n    <Form.Option value=\"src\" label=\"Desktop\" />\n    <Form.Option value=\"mobile\" label=\"Mobile\" />\n    <Form.Option value=\"thumb\" label=\"Thumbnail\" />\n    <Form.Option value=\"square\" label=\"Square\" />\n    <Form.Option value=\"picture\" label=\"Picture\" />\n  </Form.Select>\n));\n\n//#endregion EXPORTS\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport Staff from '..';\n\nconst GeneralSettingUpdateView = React.lazy(() => import('./GeneralUpdateView'));\nconst IndexSettingUpdateView = React.lazy(() => import('./IndexUpdateView'));\nconst PagesSettingUpdateView = React.lazy(() => import('./PagesUpdateView'));\n\nexport default function SettingLayout() {\n  return (\n    <Routes>\n      <Route path=\"pages/\" element={<PagesSettingUpdateView />} />\n      <Route path=\"general/\" element={<GeneralSettingUpdateView />} />\n      <Route path=\"index/\" element={<IndexSettingUpdateView />} />\n\n      <Route\n        path=\"/\"\n        element={\n          <Staff.View title=\"Settings\" back=\"/staff/\" requiredPerms={['core.view_sitesetting']}>\n            <div className=\"d-grid grid-sm-3 grid-md-4\">\n              <SettingLink to=\"general/\" label=\"General\" text=\"Site settings and branding\" />\n              <SettingLink to=\"index/\" label=\"Index\" text=\"Homepage settings\" />\n              <SettingLink to=\"pages/\" label=\"Pages\" text=\"Site pages settings\" />\n            </div>\n          </Staff.View>\n        }\n      />\n    </Routes>\n  );\n}\n\nconst SettingLink = ({ label, text, ...rest }: any) => {\n  return (\n    <Staff.Link {...rest} className=\"d-block\">\n      <span className=\"text-md\">{label}</span>\n      <p className=\"text-muted text-sm pb-3\">{text}</p>\n    </Staff.Link>\n  );\n};\n","import * as React from 'react';\nimport * as Axios from 'axios';\nimport { Routes, Route } from 'react-router-dom';\n\nimport './account.scss';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { FirstNameField, LastNameField } from '@miq/formjs';\n\nimport { SharedDataCtx, SharedDataState } from '@miq/contextjs';\n\nimport Staff from '..';\nimport { StaffUser } from '../models';\n\nexport default function AccountStaffLayout() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<ProfileUpdateView />} />\n    </Routes>\n  );\n}\n\n//#region UserModel\n\n//#endregion UserModel\n\n//#region ProfileUpdateView\n\nconst ProfileUpdateView = () => {\n  const { user, updateUser, apps } = React.useContext<SharedDataState>(SharedDataCtx);\n  const { employee } = user;\n\n  const formInitData: any = { first_name: user.first_name, last_name: user.last_name, gender: user.gender };\n  if (employee) formInitData.position = employee.position;\n\n  const form = useForm(formInitData);\n\n  if (!user) return null;\n\n  const instance = StaffUser(user);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return instance\n      .update(form.values)\n      .then(({ data }: Axios.AxiosResponse) => updateUser(data))\n      .catch((err: Axios.AxiosResponse) => form.handleError(err));\n  };\n\n  return (\n    <Staff.View title=\"Account\">\n      <Form context={form} onSubmit={handleSubmit}>\n        <div className=\"d-grid grid-md-4 gap-2\">\n          <Staff.Section\n            title=\"Profile information\"\n            text=\"Update your profile information.\"\n            className=\"span-md-3\"\n            footer={<Form.Submit value=\"Save\" />}\n          >\n            <FirstNameField\n              required\n              label=\"First name\"\n              error={form.errors.first_name}\n              placeholder=\"First name\"\n              className=\"span-md-3\"\n              fieldCN=\"d-grid grid-md-5\"\n            />\n\n            {/* <Form.Field label=\"First name\" error={form.errors.first_name} className=\"d-grid grid-md-5\">\n              <Form.Text\n                required\n                name=\"first_name\"\n                // onSave={saveAccount}\n                // isValid={validate}\n                placeholder=\"First name\"\n                className=\"span-md-3\"\n                minLength={2}\n              />\n            </Form.Field> */}\n\n            <LastNameField\n              required\n              label=\"Last name\"\n              error={form.errors.last_name}\n              placeholder=\"Last name\"\n              className=\"span-md-3\"\n              fieldCN=\"d-grid grid-md-5\"\n            />\n\n            {/* <Form.Field label=\"Last name\" error={form.errors.last_name} className=\"d-grid grid-md-5\">\n              <Form.Text\n                required\n                name=\"last_name\"\n                // onSave={saveAccount}\n                // isValid={validate}\n                placeholder=\"Last name\"\n                className=\"span-md-3\"\n                minLength={2}\n              />\n            </Form.Field> */}\n\n            <Form.Field label=\"Gender\" className=\"d-grid grid-md-5\">\n              <Form.Select\n                required\n                name=\"gender\"\n                nullValue={{ label: 'Select gender' }}\n                // onChange={({ target }) => saveAccount(target)}\n                className=\"span-md-3\"\n              >\n                <option value=\"OTHER\">Other</option>\n                <option value=\"MALE\">Male</option>\n                <option value=\"FEMALE\">Female</option>\n              </Form.Select>\n            </Form.Field>\n\n            {\n              //#region HRM\n            }\n            {Object.keys(apps).includes('miq_hrm') && (\n              <Form.Field label=\"Role\" error={form.errors.position} className=\"d-grid grid-md-5 mb-1\">\n                <Form.Text\n                  required\n                  name=\"position\"\n                  // onSave={({ value }) =>\n                  //   services\n                  //     .patch(\n                  //       'account/current/position/',\n                  //       { position: value }\n                  //       // { position: employee.position }\n                  //     )\n                  //     .catch((err) => {\n                  //       form.handleError(err);\n                  //     })\n                  // }\n                  // isValid={validate}\n                  placeholder=\"Role\"\n                  className=\"span-md-3\"\n                  minLength={2}\n                />\n              </Form.Field>\n            )}\n            {\n              //#endregion HRM\n            }\n          </Staff.Section>\n\n          <Staff.Section\n            title=\"Avatar\"\n            text=\"Update your profile picture. Images must be .png, .jpg or .gif format.\"\n            // actions={\n            //   <ImgDeleteIconButton\n            //     slug={user.img}\n            //     onSuccess={() => updateUser({ img: null, img_data: null })}\n            //     // onError={() => toast.error({ message: 'Something went wrong.' })}\n            //     label=\"\"\n            //     className=\"btn-danger-3\"\n            //   />\n            // }\n            className=\"avatar-section\"\n          >\n            {/* <div className=\"d-flex\">{user.img ? <Avatar {...user.img_data} /> : <AvatarUploadButton />}</div> */}\n          </Staff.Section>\n        </div>\n\n        <Staff.Section title=\"Email\" text=\"Please contact support to change your email.\">\n          <p className=\"text-muted text-sm\">{user.email}</p>\n        </Staff.Section>\n\n        <Staff.Section\n          title=\"Password\"\n          text=\"Please contact support to change your password. Password must be at least 6 characters long.\"\n        />\n      </Form>\n    </Staff.View>\n  );\n};\n\n//#endregion ProfileUpdateView\n","import * as React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport './layout.scss';\n\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { addForwardSlash, getCN } from '@miq/utiljs';\nimport { BaseLayout, IBaseLayoutProps, Icons, Loading } from '@miq/componentjs';\n\nimport SettingLayout from './Setting';\nimport AccountStaffLayout from './Account';\n\nexport interface IStaffBaseLayoutProps extends Omit<IBaseLayoutProps, 'children'> {\n  links: TSidebarLinkProps<{ element: React.ReactNode; mobile?: boolean }>[];\n  sidebarCN?: string;\n  mainCN?: string;\n  mobileNavCN?: string;\n}\n\nconst StaffBaseLayout: React.FC<IStaffBaseLayoutProps> = (props) => {\n  const ctx = React.useContext(SharedDataCtx);\n\n  if (!ctx) return null;\n\n  const { className, fallback = <Loading />, ...viewProps } = props;\n\n  if (!ctx.isLoaded) return fallback;\n\n  const { user, site } = ctx;\n  if (!user || !user.is_staff) return fallback;\n\n  let { links, sidebarCN, children, mainCN, mobileNavCN, ...rest } = viewProps;\n\n  const sidebarLinks = links.filter((i) => i.href && i);\n  const mobileLinks = sidebarLinks.filter((i) => i.mobile && i);\n  const routes = links.filter((i) => i.element && i);\n\n  return (\n    <BaseLayout {...rest} className={getCN([className, prefix])}>\n      <nav className={getCN([`${prefix}-sidebar`, sidebarCN])}>\n        <header className={`${prefix}-sidebar-header`}>\n          <div className=\"text-md text-ellipsis p-1\">{site.name}</div>\n        </header>\n\n        <section className={`${prefix}-sidebar-body`}>\n          {sidebarLinks && (\n            <div className={`${prefix}-sidebar-body-content`}>\n              {sidebarLinks.map((i, v) => (\n                <SidebarLink {...i} key={v} />\n              ))}\n            </div>\n          )}\n\n          <div className={`${prefix}-sidebar-body-footer`}>\n            <SidebarLink href=\"account/\" label={user.first_name} icon={<Icons.Person />} />\n            <SidebarLink href=\"settings/\" label=\"Settings\" icon={<Icons.Gear />} />\n          </div>\n        </section>\n      </nav>\n\n      <div className={getCN([`${prefix}-main`, mainCN])} role=\"main\">\n        <div className=\"miq-container-fluid\">\n          <Routes>\n            {routes.map((i, v) => (\n              <Route path={`${addForwardSlash(i.href)}/*`} element={i.element} key={v} />\n            ))}\n\n            <Route path=\"account/*\" element={<AccountStaffLayout />} />\n            <Route path=\"settings/*\" element={<SettingLayout />} />\n          </Routes>\n        </div>\n      </div>\n\n      {mobileLinks && (\n        <nav className={getCN([`${prefix}-mobile-nav`, mobileNavCN])}>\n          {mobileLinks.map((i, v) => (\n            <SidebarLink {...i} key={v} />\n          ))}\n        </nav>\n      )}\n    </BaseLayout>\n  );\n};\n\n//#region StaffLayout\n\ntype TSidebarLinkProps<T = any> = {\n  href: string;\n  label: string;\n  icon?: ReturnType<typeof Icons.Gear>;\n} & T;\n\nconst SidebarLink = (props: TSidebarLinkProps) => {\n  return (\n    <a href={`/staff/${addForwardSlash(props.href)}`} className=\"miq-staff-nav-link\">\n      {props?.icon}\n      <span className=\"label\">{props.label}</span>\n    </a>\n  );\n};\n\nexport default StaffBaseLayout;\n\n//#endregion StaffLayout\n\nconst prefix = 'miq-staff-layout';\n","import * as React from 'react';\n\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { getCN } from '@miq/utiljs';\n\nconst isArray = Array.isArray;\n\nexport function withHasPerms<Props = void>(Component: React.ComponentType | any, args: any = {}) {\n  return function ({\n    requiredPerms,\n    fallback,\n    ...props\n  }: Props & { requiredPerms?: string[]; fallback?: React.ReactNode; className?: string | any }) {\n    const { user, perms } = React.useContext(SharedDataCtx);\n    if (!user || !user.is_staff || (requiredPerms && !hasPerms(perms.perms, requiredPerms))) {\n      return fallback || args.fallback || null;\n    }\n    return <Component {...props} className={getCN([args.className, props?.className])} />;\n  };\n}\n\nexport const hasPerms = (perms: any, requiredPerms: string[]) => {\n  if (!isArray(perms) || !isArray(requiredPerms)) return false;\n  return perms.filter((perm) => requiredPerms.includes(perm)).length === requiredPerms.length;\n};\n","import * as React from 'react';\n\nimport './view.scss';\n\nimport { getCN } from '@miq/utiljs';\nimport { withHasPerms } from './utils';\nimport { IViewProps, View } from '@miq/componentjs';\n\nconst SView = (props: IViewProps) => (\n  <View\n    {...props}\n    className={getCN(['miq-staff-view', props.className])}\n    mainCN=\"miq-staff-view-main\"\n    footerCN=\"miq-staff-view-footer\"\n  />\n);\n\nconst StaffView = withHasPerms<IViewProps>(SView);\n\nexport default StaffView;\n","import { Button, ButtonProps, IViewSectionProps, ViewSection } from '@miq/componentjs';\nimport { Link, LinkProps, NavLink, NavLinkProps } from 'react-router-dom';\nimport { withHasPerms } from './utils';\n\nexport const StaffNavLink = withHasPerms<NavLinkProps>(NavLink, { className: 'miq-staff-nav-link' });\nexport const StaffLink = withHasPerms<LinkProps>(Link, { className: 'miq-staff-link' });\nexport const StaffButton = withHasPerms<ButtonProps>(Button, { className: 'miq-staff-btn' });\nexport const StaffSection = withHasPerms<IViewSectionProps>(ViewSection);\n","import * as React from 'react';\n\nimport { uuid, getCN } from '@miq/utiljs';\n\ntype CommonProps = {\n  id?: string;\n  className?: string;\n};\n\ntype DtProps = {\n  dt: Date;\n  /** Display Week days: short(Mon) long(Monday) */\n  short?: string | boolean;\n};\n\nexport type RenderDayProps = { renderDay?: (props: DayProps) => JSX.Element };\n\nexport type MonthProps = DtProps &\n  RenderDayProps & {\n    activeDt?: Date;\n    endDate?: Date;\n    children?: React.ReactNode;\n    showWeekDay?: string | boolean;\n  };\n\nexport const Month: React.FC<MonthProps> = (props) => {\n  const { dt = new Date(), showWeekDay = true, short, ...rest } = props;\n\n  let monthWeeks = dt.getMonthWeeks();\n\n  return (\n    <div className=\"miq-month\">\n      {showWeekDay && <WeekDays short={short} />}\n      <div id=\"Weeks\" className=\"miq-month-weeks\">\n        {monthWeeks.map((w: Date[]) => (\n          <Week {...rest} dt={w[0]} showWeekDay={false} key={uuid()} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport type WeekProps = DtProps &\n  RenderDayProps & {\n    activeDt?: Date;\n    children?: React.ReactNode;\n    showWeekDay?: string | boolean;\n    endDate?: Date;\n  };\n\nexport const Week: React.FC<WeekProps> = (props: WeekProps) => {\n  const { dt = new Date(), endDate, renderDay, ...rest } = props;\n\n  let weekDates: Date[] = dt.getWeekDates();\n  if (endDate) weekDates = weekDates.filter((d) => d <= endDate);\n\n  return (\n    <div className=\"miq-week\" id=\"Week\">\n      <div id=\"Dates\" className=\"miq-week-dates d-grid grid-md-7\">\n        {weekDates.map((d: Date) => (\n          <Day {...rest} dt={d} render={renderDay} key={uuid()} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport type DayProps = CommonProps &\n  DtProps & {\n    activeDt?: Date;\n    showWeekDay?: string | boolean;\n  };\n\nexport const Day = (props: DayProps & { render?: (props: DayProps) => JSX.Element }) => {\n  const { render, ...rest } = props;\n\n  if (render) return render(rest);\n\n  const { dt, short, showWeekDay = true } = rest;\n\n  return (\n    <div className={getCN(['miq-day', props.className])}>\n      {showWeekDay && <WeekDay dt={dt} short={short} />}\n      <DateNum dt={dt} />\n    </div>\n  );\n};\n\nexport type WeekDayProps = DtProps & {};\n\nexport const WeekDay = ({ dt, short }: WeekDayProps) => {\n  const wd = WEEKDAYS.find((i) => i.index === dt.getDay());\n  return <div className=\"miq-weekday\">{short ? wd?.short : wd?.long}</div>;\n};\n\nexport const WeekDays = ({ short, ...props }: any) => (\n  <div className=\"miq-weekdays d-grid grid-md-7\">\n    {WEEKDAYS.map((wd) => {\n      return (\n        <div className=\"miq-weekday\" key={wd.index}>\n          {short ? wd?.short : wd?.long}\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport type DateNumProps = CommonProps & DtProps & {};\n\n/** Display Date Number equivalent to date.getDate() */\nexport const DateNum = ({ dt, className }: DateNumProps) => (\n  <div className={getCN(['miq-day-date-num', dt.isToday() && 'today', className])}>{dt?.getDate?.()}</div>\n);\n\nexport type YearNumProps = DtProps & {};\n\nexport const YearNum = ({ dt }: YearNumProps) => {\n  return <div className=\"miq-year-num\">{dt.getFullYear()}</div>;\n};\n\nexport const WEEKDAYS: { index: number; short: string; long: string }[] = [\n  { short: 'Sun', long: 'Sunday' },\n  { short: 'Mon', long: 'Monday' },\n  { short: 'Tue', long: 'Tuesday' },\n  { short: 'Wed', long: 'Wednesday' },\n  { short: 'Thu', long: 'Thursday' },\n  { short: 'Fri', long: 'Friday' },\n  { short: 'Sat', long: 'Saturday' },\n].map((d, i) => ({ ...d, index: i }));\n","import * as React from 'react';\n\nimport { Button } from '@miq/componentjs';\nimport { getCN } from '@miq/utiljs';\n\nimport { Month, DayProps, DateNum } from './components';\n\nexport type DatepickerProps = {\n  activeDt?: Date;\n  onDateClick?: (dt?: Date) => void;\n  dt: Date;\n  id?: string;\n  className?: string;\n};\n\nexport default function DatePicker(props: DatepickerProps) {\n  const { onDateClick, ...rest } = props;\n  const { dt } = rest;\n\n  return (\n    <div className={getCN(['miq-datepicker', props.className])}>\n      <Month\n        {...props}\n        short\n        dt={dt}\n        renderDay={(args) => <DatePickerDay {...args} onClick={onDateClick} />}\n        endDate={dt.getMonthLastDt()}\n      />\n    </div>\n  );\n}\n\ntype DatePickerDayProps = DayProps & {\n  onClick?: (dt?: Date) => void;\n};\n\nconst DatePickerDay = (props: DatePickerDayProps) => {\n  const { dt, activeDt, onClick } = props;\n  const isToday = dt.isToday();\n  const isActive = dt.isSameDay(activeDt);\n\n  const handleClick = () => {\n    if (!onClick) return;\n    return onClick(dt);\n  };\n\n  return (\n    <div className={getCN(['miq-day miq-datepicker-day'])}>\n      <Button onClick={handleClick} className={getCN(['miq-datepicker-btn', isToday && 'today', isActive && 'active'])}>\n        <DateNum dt={dt} />\n      </Button>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport './calendar.scss';\n\nimport { Button } from '@miq/componentjs';\nimport { DateNum, Day, Week, WeekDays, WeekDay, YearNum } from './components';\nimport DatePicker from './datepicker';\n\n//#region Calendar\n\ntype CalendarProps = {\n  currentDate?: Date;\n};\n\nexport default function Calendar(props?: CalendarProps) {\n  const currentDate: Date = props?.currentDate || new Date();\n\n  return Object.assign({}, props, { currentDate });\n}\n\nCalendar.DatePicker = DatePicker;\n\nCalendar.Week = Week;\nCalendar.WeekDay = WeekDay;\nCalendar.WeekDays = WeekDays;\nCalendar.Day = Day;\n\nCalendar.DateNum = DateNum;\nCalendar.YearNum = YearNum;\n\n//#endregion Calendar\n\n//#region BUTTONS\n\nexport type CalendarButtonProps = {\n  children: React.ReactNode;\n  dt: Date;\n  onClick: (dt: Date) => void;\n};\n\nCalendar.PrevWeekButton = ({ children, dt, ...props }: CalendarButtonProps) => {\n  return (\n    <Button {...props} onClick={() => props?.onClick(dt.subDays(7))}>\n      {children}\n    </Button>\n  );\n};\nCalendar.NextWeekButton = ({ children, dt, ...props }: CalendarButtonProps) => {\n  return (\n    <Button {...props} onClick={() => props?.onClick(dt.addDays(7))}>\n      {children}\n    </Button>\n  );\n};\n\n//#endregion BUTTONS\n","import { StaffModel, StaffService } from '../service';\n\nimport { TCampaign, THit, TSearchTerm } from './types';\n\nclass HitService extends StaffService<THit> {\n  deleteSlugs(slugs: string[]) {\n    return this.post(`${this._endpoint}batch/`, { slugs, action: 'destroy' });\n  }\n\n  getSummary() {\n    return this.get(`${this._endpoint}summary/`);\n  }\n}\n\nexport const Hit = (data: THit = {}) => {\n  return StaffModel<THit, HitService>(data, 'hits', HitService);\n};\n\nexport type THitInstance = ReturnType<typeof Hit>;\n\n//\n//\n//\n\nclass CampaignService extends StaffService<TCampaign> {}\n\nexport const Campaign = (data: TCampaign = {}) => {\n  return StaffModel<TCampaign, CampaignService>(data, 'campaigns', CampaignService);\n};\n\nexport type TCampaignInstance = ReturnType<typeof Campaign>;\n\n//\n//\n//\n\nclass SearchTermService extends StaffService<TSearchTerm> {}\n\nexport const SearchTerm = (data: TSearchTerm = {}) => {\n  return StaffModel<TSearchTerm, SearchTermService>(data, 'search', SearchTermService);\n};\n\nexport type TSearchTermInstance = ReturnType<typeof SearchTerm>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\n\nimport { Campaign, Hit } from './models';\nimport { TCampaign, THit } from './types';\n\nexport const useCampaignListRequest = () => {\n  const [params] = useSearchParams();\n\n  const summary = params.get('summary');\n\n  return useRequest<TCampaign>(() => Campaign({}).list({ params: { summary } }), {\n    refreshDeps: [summary],\n  });\n};\n\nexport const useHitListRequest = (filterPath?: string) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n\n  let searchParams: any = { q };\n  if (filterPath) searchParams['path'] = filterPath;\n\n  return useRequest<THit>(() => Hit({}).list({ params: searchParams }), {\n    refreshDeps: [q],\n  });\n};\n\nexport const hitsByPath = (hitList: THit[]) => {\n  const data: Record<string, any> = {};\n\n  hitList.forEach((hit) => {\n    const { path } = hit;\n\n    if (!Object.keys(data).includes(path)) data[path] = [];\n    data[path] = [...data[path], hit];\n  });\n\n  return data;\n};\n\nexport const hitsByIp = (hitList: THit[]) => {\n  const data: Record<string, any> = {};\n\n  hitList.forEach((hit) => {\n    const { ip } = hit;\n    if (!ip) return;\n\n    if (!Object.keys(data).includes(ip)) data[ip] = [];\n    data[ip] = [...data[ip], hit];\n  });\n\n  return data;\n};\n\nexport const hitIsMobile = (data: THit) => {\n  let { user_agent: ua } = data;\n  if (!ua) return true;\n  ua = ua.toLowerCase();\n  return ua.includes('mobile') || ua.includes('iphone') || ua.includes('android');\n};\n\nexport const hitIsBot = (data: THit) => {\n  let { user_agent: ua, path } = data;\n  if (!ua) return true;\n  ua = ua.toLowerCase();\n  return path.toLowerCase().includes('robot') || ua.includes('bot') || ua.includes('robot') || ua.includes('ahrefsbot');\n};\n\nexport const hitIsIg = (data: THit) => {\n  let { referrer: ref, user_agent: ua } = data;\n  if (!ref || !ua) return false;\n\n  ref = ref.toLowerCase();\n  ua = ua.toLowerCase();\n  return ref.includes('instagram') || ref.includes('ig') || ua.includes('instagram') || ua.includes('ig');\n};\n\nexport const hitIsFb = (data: THit) => {\n  let { referrer: ref = '', user_agent: ua = '' } = data;\n  if (!ref || !ua) return false;\n\n  ref = ref.toLowerCase();\n  ua = ua.toLowerCase();\n\n  return ref.includes('facebook') || ref.includes('fb') || ua.includes('facebook') || ua.includes('fb');\n};\n","import * as React from 'react';\n\nimport { getCN, truncateStr } from '@miq/utiljs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\n\nimport { StaffSection } from '../components';\n\nimport { THit } from './types';\nimport { Hit, THitInstance } from './models';\nimport { hitIsBot, hitIsFb, hitIsIg, hitsByIp } from './utils';\n\nexport const HitSummarySection = (props: { title?: string }) => {\n  // const { res } = useRequest(() => Hit({}).getSummary());\n  const { title = 'Summary' } = props;\n\n  return (\n    <StaffSection {...{ title }} requiredPerms={['analytics.view_hit']}>\n      Here goes a summary\n    </StaffSection>\n  );\n};\n\nconst HitListItem = ({ item }: { item: THit }) => {\n  const [isDeleted, setDeleted] = React.useState(false);\n\n  if (isDeleted) return null;\n\n  const instance = Hit(item);\n  const { url, referrer, response_status, created } = instance;\n\n  return (\n    <div className=\"hit-list-item d-grid grid-md-5 text-sm py-1\">\n      <div className=\"span-md-2\">\n        <a href={url} target=\"_blank\" title={url}>\n          {item.path}\n        </a>\n\n        <div className=\"text-muted\" title=\"session key\">\n          {item.session}\n        </div>\n\n        <span className={getCN([response_status! > 299 ? 'text-danger' : 'text-success'])} title=\"response status\">\n          {response_status}\n        </span>\n\n        <span title=\"Date created\">{` / ${new Date(created!).formatDateToStr()} | ${new Date(\n          created!\n        ).formatTime()}`}</span>\n        {item.debug && <span>{` / Debug`}</span>}\n      </div>\n\n      <div className=\"\" title={`Referrer: ${referrer}`}>\n        {truncateStr(referrer || '')}\n      </div>\n\n      <div className=\"\" title={`User agent: ${item.user_agent}`}>\n        {truncateStr(item?.user_agent || '')}\n      </div>\n\n      <div className=\"\">\n        <HitDeleteButton instance={instance} onDelete={() => setDeleted(true)} />\n      </div>\n    </div>\n  );\n};\n\nexport const HitList = ({ items }: { items: THit[] }) => {\n  return (\n    <div className=\"hit-list\">\n      {Object.entries(hitsByIp(items)).map((item) => {\n        let [ip, h] = item;\n        const hits = h.reverse();\n        const isFb = Boolean(hits.filter((item: THit) => hitIsFb(item)).length);\n        const isIg = hits.find((item: THit) => hitIsIg(item));\n        const isBot = hits.find((item: THit) => hitIsBot(item));\n        let user = hits[0]?.source_id?.match(/-(\\w+)___/gm)?.[0]?.slice(1, -3);\n\n        return (\n          <StaffSection\n            border\n            title={\n              <div className=\"d-flex align-items-center\">\n                <span className=\"d-flex\">\n                  {isBot && <Icons.Robot className=\"me-1 text-muted\" width={20} height={20} />}\n                  {isIg && <Icons.Instagram className=\"me-1\" />}\n                  {isFb && <Icons.Facebook className=\"text-primary me-1\" />}\n                </span>\n                <span className=\"text-sm fw-bold\">{user || ip}</span>\n              </div>\n            }\n            actions={\n              <div className=\"\">\n                <HitListDeleteButton slugs={hits.map((i: THit) => i?.slug)} onDelete={() => {}} />\n              </div>\n            }\n            className=\"mb-1\"\n            bodyCN=\"p-0\"\n            key={ip}\n          >\n            {hits\n              .sort((a: THit, b: THit) => (new Date(a.created!) > new Date(b.created!) ? -1 : 1))\n              .map((i: THit) => (\n                <HitListItem item={i} key={i.slug} />\n              ))}\n          </StaffSection>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const HitDeleteButton = ({\n  instance,\n  ...props\n}: {\n  label?: string;\n  instance: THitInstance;\n  onDelete?: (payload?: any) => void;\n}) => {\n  const { label = '', onDelete } = props;\n\n  const handleDelete = () => {\n    instance\n      .destroy()\n      .then((res) => {\n        onDelete?.(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => (\n        <div className=\"d-flex align-items-center\">\n          <Icons.ExclamationTriangleFill />\n          <span className=\"ms-1\">Please confirm</span>\n        </div>\n      )}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={handleDelete} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          <div>You're about to delete this hit: {`${instance.slug}`}</div>\n          <div>You cannot undo this action</div>\n        </div>\n      )}\n      className={getCN(['btn-danger-3'])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const HitListDeleteButton = ({\n  slugs,\n  ...props\n}: {\n  label?: string;\n  slugs: string[];\n  onDelete?: (payload?: any) => void;\n}) => {\n  const { label = '', onDelete } = props;\n\n  const handleDelete = (setOpen: any) => {\n    Hit({})\n      .deleteSlugs(slugs)\n      .then((res) => {\n        onDelete?.(res.data);\n        setOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => (\n        <div className=\"d-flex align-items-center\">\n          <Icons.ExclamationTriangleFill />\n          <span className=\"ms-1\">Please confirm</span>\n        </div>\n      )}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          <div>You're about to delete {`${slugs.length} hits.`}</div>\n          <div>You cannot undo this action</div>\n        </div>\n      )}\n      className={getCN(['btn-danger-3'])}\n      title=\"Delete group\"\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nimport { Table } from '@miq/componentjs';\nimport { Response, uuid } from '@miq/utiljs';\n\nimport StaffView from '../Views';\n\nimport { TCampaign } from './types';\nimport { useCampaignListRequest } from './utils';\n\nexport default function CampaignIndexView() {\n  const [params] = useSearchParams();\n  //   const { summary } = params.get('summary');\n\n  const { res } = useCampaignListRequest();\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <StaffView title=\"Campaigns\" text={`${r.data.count} items`}>\n      <Table\n        className=\"w-100\"\n        items={r.items}\n        header={\n          <>\n            <Table.Th />\n            <Table.Th>Value</Table.Th>\n            <Table.Th>Count</Table.Th>\n          </>\n        }\n        renderItem={(i: TCampaign) => {\n          return (\n            <Table.Tr key={uuid()}>\n              <Table.Td>{i.key}</Table.Td>\n              <Table.Td>{i.value}</Table.Td>\n              <Table.Td>{i.count}</Table.Td>\n            </Table.Tr>\n          );\n        }}\n      />\n    </StaffView>\n  );\n}\n","import { Response } from '@miq/utiljs';\nimport { Route, Routes } from 'react-router-dom';\nimport Staff from '..';\nimport { StaffSection } from '../components';\nimport StaffView from '../Views';\nimport { HitList, HitSummarySection } from './components';\nimport { useHitListRequest } from './utils';\nimport CampaignIndexView from './views.CampaignIndex';\n\nexport const SearchRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<StaffView title=\"Search\"></StaffView>} />\n    </Routes>\n  );\n};\n\nexport const CampaignRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<CampaignIndexView />} />\n    </Routes>\n  );\n};\n\nexport const IndexView = () => {\n  const { res } = useHitListRequest();\n\n  const r = new Response(res);\n\n  if (!r.isSuccess) return null;\n\n  return (\n    <StaffView title=\"Hits\">\n      <HitSummarySection />\n\n      <StaffSection title=\"Last 100 hits\">\n        <HitList items={r.items} />\n      </StaffSection>\n    </StaffView>\n  );\n};\n","import { getCN } from '@miq/utiljs';\nimport * as React from 'react';\nimport { Routes, Route, NavLink, NavLinkProps } from 'react-router-dom';\n\nimport StaffView from '../Views';\n\nimport * as Views from './views';\n\nexport default function AnalyticsRoutes() {\n  return (\n    <StaffView\n      title=\"Analytics\"\n      back=\"/staff/\"\n      actions={\n        <>\n          <TabLink to=\"/staff/analytics/\" className=\"me-1\">\n            Hits\n          </TabLink>\n\n          <TabLink to=\"/staff/analytics/search/\" className=\"me-1\">\n            Search\n          </TabLink>\n\n          <TabLink to=\"/staff/analytics/campaigns/\" className=\"\">\n            Campaigns\n          </TabLink>\n        </>\n      }\n    >\n      <Routes>\n        <Route path=\"/search/*\" element={<Views.SearchRoutes />} />\n        <Route path=\"/campaigns/*\" element={<Views.CampaignRoutes />} />\n        <Route path=\"/\" element={<Views.IndexView />} />\n      </Routes>\n    </StaffView>\n  );\n}\n\nconst TabLink = ({ className, ...props }: NavLinkProps) => (\n  <NavLink\n    className={({ isActive }: { isActive?: boolean }) =>\n      getCN(['btn', `${className}`, isActive ? 'btn-primary' : 'btn-primary-3'])\n    }\n    {...props}\n  />\n);\n\nexport * from './utils';\nexport * from './types';\nexport * from './models';\n","// import * as React from 'react';\n\nimport './staff.scss';\n\nimport Layout from './Layout';\nimport StaffView from './Views';\n\nimport { StaffButton, StaffLink, StaffNavLink, StaffSection } from './components';\nimport { StaffImg } from './models';\n\nexport type StaffType = {};\n\nconst Staff = (args: any) => {\n  return Object.assign({}, args);\n};\n\nStaff.Layout = Layout;\n\nStaff.View = StaffView;\nStaff.Section = StaffSection;\n\nStaff.Button = StaffButton;\nStaff.Link = StaffLink;\nStaff.NavLink = StaffNavLink;\n\nStaff.Img = StaffImg;\n\nexport default Staff;\n\nexport { default as DashboardView } from './DashboardView';\n\nexport { default as AnalyticsRoutes } from './analytics';\n\nexport * from './analytics';\n\nexport * from './service';\nexport * from './models';\nexport * from './Img';\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import * as Axios from 'axios';\n\nimport { Img, ImgType } from '@miq/componentjs';\nimport { StaffModel, StaffService } from './service';\n\nexport type UserType = { first_name?: string; last_name?: string; gender?: string; employee?: any };\n\nexport class StaffUserService extends StaffService<UserType> {}\n\nexport const StaffUser = (data: UserType = {}) =>\n  StaffModel<UserType, StaffUserService>(data, 'account/', StaffUserService);\n\nclass StaffImgService extends StaffService<ImgType> {\n  createFromUrl(url: string, alt_text: string = '') {\n    return super.create({ src: url, alt_text });\n  }\n\n  // @ts-ignore\n  create(\n    file: File,\n    alt_text?: string,\n    config: Axios.AxiosRequestConfig<any> = {}\n  ): Promise<Axios.AxiosResponse<any, any>> {\n    if (file.name.length > 499) {\n      return Promise.reject('Filename too long');\n    }\n    const fd = new FormData();\n    fd.append('src', file, file.name);\n    if (alt_text) fd.append('alt_text', alt_text);\n\n    return super.create(fd, { ...config, headers: { 'content-type': 'multipart/form-data' } });\n  }\n\n  updateMobile(file: File) {\n    return this.update(file, undefined, 'mobile');\n  }\n  updateSquare(file: File) {\n    return this.update(file, undefined, 'square');\n  }\n  updateThumb(file: File) {\n    const { name } = file;\n    return this.update(file, undefined, 'thumb');\n  }\n  updateValues(values: any) {\n    return super.update(values);\n  }\n\n  // @ts-ignore\n  update(file: File, alt_text?: string, field?: string) {\n    if (file.name.length > 499) {\n      return Promise.reject('Filename too long');\n    }\n\n    const fd = new FormData();\n\n    if (!field) field = 'src';\n    switch (field) {\n      case 'mobile':\n        fd.append('src_mobile', file, file.name);\n        break;\n      case 'thumb':\n        fd.append('thumb', file, file.name);\n        break;\n      case 'square':\n        fd.append('thumb_sq', file, file.name);\n        break;\n      default:\n        fd.append('src', file, file.name);\n        break;\n    }\n\n    if (alt_text) fd.append('alt_text', alt_text);\n\n    return super.update(fd, { headers: { 'content-type': 'multipart/form-data' } });\n  }\n}\n\nexport const StaffImg = (data: ImgType = {}) => {\n  // @ts-ignore\n  return StaffModel<ImgType, StaffImgService>(data, 'staffimages', StaffImgService);\n};\n\nStaffImg.HorizontalGallery = Img.HorizontalGallery;\nStaffImg.VerticalGallery = Img.VerticalGallery;\nStaffImg.Mobile = Img.Mobile;\nStaffImg.Thumb = Img.Thumb;\nStaffImg.Square = Img.Square;\nStaffImg.Picture = Img.Picture;\nStaffImg.Image = Img.Image;\n","import axios, { AxiosInstance } from 'axios';\n\nimport { DOMAIN, CrudService } from '@miq/utiljs';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const API_ENDPOINT: string = `${DOMAIN}${process.env.REACT_APP_API_ENDPOINT}`;\nexport const STAFF_PATH: string = process.env.REACT_STAFF_PATH || '/staff/';\n\nexport const API = axios.create({\n  baseURL: API_ENDPOINT,\n  timeout: 3000,\n  withCredentials: true,\n  headers: { 'Content-type': 'application/json' },\n});\n\nexport class StaffService<T> extends CrudService<T> {\n  constructor(public data: T, endpoint: string, s: AxiosInstance = API) {\n    super(data, endpoint, s);\n    Object.assign(this, data);\n  }\n}\n\nexport function StaffModel<T, V = StaffService<T>>(\n  data: T,\n  endpoint: string,\n  TargetServiceClass: new (...args: any[]) => StaffService<T> = StaffService\n) {\n  const instance = new TargetServiceClass(data, endpoint);\n  return instance as T & typeof instance & V;\n}\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCart, TCustomer } from './types';\n\nconst timeout = 5000;\n\nclass CustomerService extends StaffService<TCustomer> {\n  find(q: string) {\n    return this.list({ params: { q } });\n  }\n}\n\nexport const Customer = (data: TCustomer = {}) => {\n  return StaffModel<TCustomer, CustomerService>(data, 'customers', CustomerService);\n};\n\nexport type TCustomerInstance = ReturnType<typeof Customer>;\n\n/**\n * CART\n */\n\nclass CartService extends StaffService<TCart> {\n  addItem(prodSlug: string, size: string, qty?: string) {\n    return this.post(`${this._path}item/${prodSlug}/`, { size, qty });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = (data: TCart = {}) => {\n  return StaffModel<TCart, CartService>(data, 'carts', CartService);\n};\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n\n// export const Cart = (data: any) => {\n//   getIsValid(data: Record<string, any>): boolean {\n//     return data && data.slug && data.products && Boolean(data.items.length);\n//   }\n\n//   getItem(meta_slug: string) {\n//     return;\n//     // return this.items?.find((i: any) => i.product.meta_slug === meta_slug);\n//   }\n\n//   postItem(prod_meta_slug: string, values: any) {\n//     // values may contain size and other info\n\n//     if (this.slug && values) values.cart_slug = this.slug;\n//     return this.postPath(`${this._endpoint}items/`, { ...values, prod_meta_slug });\n//   }\n\n//   patchItem(itemSlug: string, values: any) {\n//     return this.patchPath(`${this._path}/item/${itemSlug}/`, values);\n//   }\n//   deleteItem(itemSlug: string) {\n//     return this.deletePath(`${this._path}/item/${itemSlug}/`);\n//   }\n\n//   patchCustomer(values: any) {\n//     if (values && this?.customer?.slug) values.cust_slug = this.customer.slug;\n//     return this.patchPath(`${this._path}/customer/`, values);\n//   }\n//   postCustomer(values: any) {\n//     return this._s.post(`${this._path}/customer/`, values);\n//   }\n// }\n\n// //   const methods = {\n// //     getItem,\n// //     postItem,\n// //     patchItem,\n// //     deleteItem,\n// //     patchCustomer,\n// //     postCustomer,\n// //   };\n\n// //   return Object.assign({ isValid: getIsValid() }, CrudModel(data, 'api/carts/'), methods);\n// // };\n\n// export const Customer = (data: any) => {\n//   // return Object.assign({}, CrudModel(data, 'api/carts/'), methods);\n// };\n","import * as React from 'react';\n\nimport Form, { EmailField, FirstNameField, TextFieldProps } from '@miq/formjs';\nimport { Customer } from '../models';\nimport { TCustomer } from '../types';\nimport { Response } from '@miq/utiljs';\nimport { CustomerCard } from '../components';\nimport { Button } from '@miq/componentjs';\n\nconst CustomerSelect = ({ customers, onItemClick }: { customers: TCustomer[]; onItemClick: (p) => void }) => {\n  return (\n    <div className=\"mt-1 border-1 rounded bg-white\">\n      {customers.map((cust) => {\n        return (\n          <div\n            className=\"d-flex justify-content-between p-1 border-bottom\"\n            onClick={() => onItemClick(cust)}\n            key={cust?.slug}\n          >\n            <div className=\"fw-bold\">{`${cust.first_name} ${cust.last_name}`}</div>\n            <div className=\"text-muted text-sm\">{cust.phone}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const CustomerLNameField = ({\n  label = 'Nom',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps & { allowSuggestions?: boolean; onCustomerSelect?: (p: TCustomer) => void }) => {\n  const [customers, setCustomers] = React.useState<TCustomer[]>([]);\n\n  const handleDebounce = ({ value }) => {\n    if (!allowSuggestions || !value || value.length < 3) return;\n\n    Customer()\n      .find(value)\n      .then((r) => {\n        const items = new Response(r).items;\n\n        if (items.length > 0) setCustomers(items);\n        else setCustomers([]);\n      })\n      .catch((err) => {});\n  };\n\n  const { onCustomerSelect, allowSuggestions, ...rest } = props;\n\n  return (\n    <div className=\"\">\n      <Form.Field {...{ label, error, text }} className={fieldCN}>\n        <div className=\"span-md-3\">\n          <Form.Text required name=\"last_name\" {...rest} maxLength={99} minLength={2} onDebounce={handleDebounce} />\n\n          {allowSuggestions && Boolean(customers.length) && (\n            <CustomerSelect\n              customers={customers}\n              onItemClick={(p) => {\n                onCustomerSelect?.(p);\n              }}\n            />\n          )}\n        </div>\n      </Form.Field>\n    </div>\n  );\n};\n\nexport const CustomerFNameField = (props: TextFieldProps) => <FirstNameField required {...props} />;\nexport const CustomerEmailField = (props: TextFieldProps) => <EmailField {...props} />;\n\nexport const CustomerPhoneField = ({\n  label = 'Numéro de téléphone',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps) => (\n  <Form.Field {...{ label, error, text }} className={fieldCN}>\n    <Form.Phone required name=\"phone\" {...props} />\n  </Form.Field>\n);\n\nexport const CustomerFields = {\n  LName: CustomerLNameField,\n  FName: CustomerFNameField,\n  Email: CustomerEmailField,\n  Phone: CustomerPhoneField,\n};\n","import * as React from 'react';\nimport Form, { FormProps, IFormUpdateProps, useForm } from '@miq/formjs';\nimport { TCustomer } from './types';\nimport { TCustomerInstance } from './models';\nimport { CustomerEmailField, CustomerFNameField, CustomerLNameField, CustomerPhoneField } from './fields';\n\ntype TFormUpdateProps<T, I> = IFormUpdateProps<T> & {\n  fields: string[];\n  instance?: I;\n};\n\ntype TCustomerFormProps = Omit<TFormUpdateProps<TCustomer, TCustomerInstance>, 'context'> & {\n  onCustomerSelect?: (p: TCustomer) => void;\n};\n\nexport const CustomerForm = ({\n  children,\n  instance,\n  onSuccess,\n  onError,\n  onCustomerSelect,\n  ...props\n}: TCustomerFormProps) => {\n  const { fields } = props;\n  const form = useForm<TCustomer>(getCustomerFD(instance?.export(), fields));\n\n  const { errors } = form;\n  const sharedProps = { className: 'span-md-3', fieldCN: 'd-grid grid-md-5' };\n\n  return (\n    <Form {...props} context={form} className=\"customer-form\">\n      <div className=\"base-fields\">\n        {fields?.includes('last_name') && (\n          <CustomerLNameField\n            allowSuggestions\n            error={errors.last_name}\n            {...sharedProps}\n            onCustomerSelect={onCustomerSelect}\n            className=\"\"\n          />\n        )}\n\n        {fields?.includes('first_name') && <CustomerFNameField error={errors.first_name} {...sharedProps} />}\n\n        {fields?.includes('phone') && <CustomerPhoneField error={errors.phone} {...sharedProps} />}\n        {fields?.includes('email') && <CustomerEmailField error={errors.email} {...sharedProps} />}\n      </div>\n\n      {children}\n    </Form>\n  );\n};\nconst getCustomerFD = (data?: TCustomer, fields?: string[]) => {\n  if (!data) data = { first_name: '', last_name: '', email: '', phone: '' };\n  const fd: TCustomer = {};\n  fields?.forEach((field) => {\n    fd[field] = data![field];\n  });\n\n  return fd;\n};\nconst CustomerSearchInput = (props) => {\n  return <Form.Text {...props} />;\n};\n","import * as React from 'react';\nimport { TCustomer } from '../types';\n\nexport const CustomerCard = ({ data, ...props }: { data: TCustomer }) => {\n  if (!data || !data.slug) return null;\n\n  const { first_name, last_name, email, phone } = data;\n\n  return (\n    <div className=\"customer-card\">\n      <div className=\"fw-bold\">{`${first_name} ${last_name}`}</div>\n      <div className=\"\">{phone}</div>\n      <div className=\"text-muted text-sm\">{email}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { CustomerForm } from './forms';\nimport { Cart } from './models';\nimport { Button, Icons } from '@miq/componentjs';\nimport { TCustomer } from './types';\nimport { CustomerCard } from './components';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function CartCreateView() {\n  const navigate = useNavigate();\n  const [customer, setCustomer] = React.useState<TCustomer>();\n\n  const createCart = (customer: TCustomer) => {\n    Cart()\n      .create({ customer: customer.slug })\n      .then(({ data }) => {\n        return navigate(`${data.slug}/`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Staff.View title=\"Ajouter une commande\">\n      <div className=\"d-flex justify-content-center my-3\">\n        <div className=\"w-md-65\">\n          <Staff.Section title=\"Client\" text=\"Selectionez ou ajoutez un noubeau client\" headerCN=\"mb-4\">\n            {customer && customer.slug ? (\n              <div className=\"\">\n                <CustomerCard data={customer} />\n\n                <div className=\"d-flex justify-content-between mt-4\">\n                  <Button className=\"btn btn-round\" onClick={() => setCustomer(undefined)}>\n                    <Icons.ArrowLeft />\n                  </Button>\n\n                  <Button\n                    onClick={() => {\n                      createCart(customer);\n                    }}\n                    className=\"btn btn-primary-3\"\n                  >{`Continuer »`}</Button>\n                </div>\n              </div>\n            ) : (\n              <CustomerForm\n                fields={['first_name', 'last_name', 'phone', 'email']}\n                onSuccess={({ data }) => {}}\n                onCustomerSelect={setCustomer}\n              >\n                <div className=\"d-flex justify-content-center my-4\">\n                  <Button type=\"submit\" className=\"btn btn-md btn-primary fw-bold\">\n                    {`Continuer »`}\n                  </Button>\n                </div>\n              </CustomerForm>\n            )}\n          </Staff.Section>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n","import * as React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Cart } from './models';\nimport { Response, truncateStr } from '@miq/utiljs';\nimport { Loading } from '@miq/componentjs';\nimport { CustomerCard } from './components';\nimport Form, { useForm } from '@miq/formjs';\nimport {\n  useProductListRequest,\n  ProductListFilterForm,\n  SizeQuantityField,\n  SizeSelectField,\n  TProduct,\n  ProductPriceDisplay,\n} from '@shopy/storejs';\nimport { TOrder } from './types';\n\nexport default function CartUpdateView() {\n  const [params] = useSearchParams();\n  const { cartSlug } = useParams();\n\n  const qForm = useForm({ q: '' });\n  const { res: productRes } = useProductListRequest(undefined, { published: 'include', atc: 1 });\n\n  const { res, setRes, loading, ...request } = useRequest(() => Cart({ slug: cartSlug }).retrieve(), {\n    refreshDeps: [cartSlug],\n    // onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      // if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const cart = Cart(r.data);\n  const products = new Response(productRes).items || [];\n\n  console.log(r.data);\n\n  return (\n    <Staff.View title=\"Modifier une commande\" className=\"\">\n      <div className=\"d-grid grid-md-6 gap-2\">\n        <div className=\"span-md-3\">\n          <Staff.Section\n            title=\"Ajouter des produits\"\n            header={\n              <>\n                <ProductListFilterForm />\n              </>\n            }\n          >\n            {products\n              .filter((i) => !cart.data.products.includes(i.slug))\n              .map((product) => {\n                return (\n                  <div className=\"\" key={product.slug}>\n                    <ProductAddForm\n                      item={product}\n                      onItemClick={(product, size, qty) => {\n                        return cart.addItem(product.slug!, size, qty).then((r) => {\n                          setRes(r);\n                          return r;\n                        });\n                      }}\n                    />\n                  </div>\n                );\n              })}\n          </Staff.Section>\n        </div>\n\n        <div className=\"span-md-3\">\n          <div className=\"\">\n            <Staff.Section border title=\"Client\" actions={<>Modifier</>}>\n              <CustomerCard data={cart.customer_data} />\n            </Staff.Section>\n\n            <Staff.Section border title=\"Panier\" actions={cart.items.length} footer={<>Confirmer</>}>\n              {cart.items.map((i) => {\n                const { product, size, quantity } = i;\n                return (\n                  <div className=\"\" key={i.slug}>\n                    <div className=\"p\">{product.name}</div>\n                    <div className=\"d-flex justify-content-between\">\n                      <span className=\"\">{size}</span>\n\n                      <span className=\"\">{quantity}</span>\n                    </div>\n                    <div className=\"\">{}</div>\n                  </div>\n                );\n              })}\n\n              <div className=\"mt-4\">\n                <div className=\"\">\n                  <span className=\"\">Subtotal</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"\">Total</span>\n                </div>\n              </div>\n            </Staff.Section>\n          </div>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nexport const ProductAddForm = ({\n  item,\n  onItemClick,\n  ...props\n}: {\n  item: TProduct;\n  onItemClick: (p: TProduct, size: string, qty: string) => Promise<TOrder>;\n}) => {\n  const form = useForm({ quantity: 1, size: '' });\n\n  if (!item?.slug) return null;\n\n  const { sizes = [], is_oos, category_data, cover_data, name, size_count = 0 } = item;\n\n  const canAdd = !is_oos && size_count > 0;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        onItemClick(item, form.values.size, form.values.quantity).catch((err) => {\n          form.handleError(err);\n        });\n      }}\n    >\n      <Staff.Section\n        border\n        header={\n          <div className=\"d-flex\">\n            <div style={{ minWidth: 34, maxWidth: 50 }} className=\"me-1\">\n              <Staff.Img.Thumb src=\"src\" {...cover_data} className=\"rounded\" />\n            </div>\n\n            <div className=\"flex-1\" title={name}>\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{truncateStr(name!, 0, 45)}</span>\n              </div>\n\n              <div className=\"d-flex flex-column flex-md-ro justify-content-between\">\n                <div className=\"d-grid grid-md-2 gap-1 flex-1\">\n                  <SizeSelectField required sizes={sizes.filter((i) => i.quantity > 0)} error={form.errors.size} />\n                  <SizeQuantityField max={sizes.find((i) => i.slug === form.values.size)?.quantity || 0} min={1} />\n                </div>\n                <div className=\"text-right\">\n                  <Form.Submit className=\"btn btn-primary-2 btn-md fw-bold\">Ajouter</Form.Submit>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        actions={<ProductPriceDisplay {...item} className=\"d-flex flex-wrap\" />}\n        className=\"mb-1\"\n      ></Staff.Section>\n    </Form>\n  );\n};\n","import { ViewSection } from '@miq/componentjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CustomerCard } from './components';\nimport { Cart } from './models';\nimport { TCart } from './types';\n\nexport default function SalesIndexView() {\n  const { res, setRes, loading, ...request } = useRequest(() => Cart().list());\n\n  const r = new Response<TCart>(res);\n\n  return (\n    <Staff.View\n      title=\"Sales\"\n      actions={\n        <>\n          <Staff.Link to=\"cart/\" className=\"btn btn-primary\">\n            Ajouter une commande\n          </Staff.Link>\n        </>\n      }\n    >\n      {r.items?.map((i) => {\n        const { customer, items = [] } = i || {};\n\n        return (\n          <ViewSection key={i.slug}>\n            <Link to={`cart/${i.slug}/`}>\n              <CustomerCard data={customer} />\n              {items.map((i) => {\n                return (\n                  <>\n                    <div>{i?.product?.name}</div>\n                  </>\n                );\n              })}\n            </Link>\n          </ViewSection>\n        );\n      })}\n    </Staff.View>\n  );\n}\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport CartCreateView from './CartCreateView';\nimport CartUpdateView from './CartUpdateView';\nimport SalesIndexView from './IndexView';\n\n// const ProductsView = lazy(() => import('./ProductsView'));\n// const CartDetailView = React.lazy(() => import('./CartDetailView'));\n// const OrderCreateView = React.lazy(() => import('./OrdCreateView'));\n\nexport default function SalesStaffRoutes() {\n  return (\n    <Routes>\n      {/* <Route path=\":catMetaSlug/:prodMetaSlug/\" element={<ProductView />} /> */}\n      {/* <Route path=\"cart/\" element={<CartDetailView />} /> */}\n      <Route path=\"cart/:cartSlug/\" element={<CartUpdateView />} />\n      <Route path=\"cart/\" element={<CartCreateView />} />\n      <Route path=\"/\" element={<SalesIndexView />} />\n    </Routes>\n  );\n}\n\nexport { CustomerFields } from './forms/fields';\nexport * from './types';\n","import * as React from 'react';\nimport Form, { FormFieldProps, IFormCallbackProps, SelectFieldProps, TextFieldProps, useForm } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { StaffProduct } from '../models';\nimport { TProductSize } from '../../types';\n\ntype UpdateFormProps = IFormCallbackProps & {\n  data: any;\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\nexport const SizeUpdateForm = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  const form = useForm<TProductSize>({\n    name: data.name || '',\n    code: data.code || '',\n    quantity: data.quantity || 0,\n  });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n\n  const { onSuccess, onError } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchSize(data.slug, form.values)\n          .then((res: any) => onSuccess?.(res))\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <SizeDeleteButton {...{ productInstance, data, onSuccess, onError }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst commonSizes: { [k: string]: any } = {\n  xs: { name: 'Extra-small', code: 'XS' },\n  s: { name: 'Small', code: 'S' },\n  m: { name: 'Medium', code: 'M' },\n  l: { name: 'Large', code: 'L' },\n  xl: { name: 'Extra-large', code: 'XL' },\n};\nconst formDefaultValues: TProductSize = { name: '', code: '', quantity: 1 };\n\nexport const SizeAddForm = ({ productInstance, ...props }: Omit<UpdateFormProps, 'data'>) => {\n  const form = useForm<TProductSize>(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postSize(form.values)\n          .then((res: any) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-flex my-2\">\n        <Button\n          onClick={() => form.setValues({ ...form.values, name: 'One-size', code: 'ONESIZE' })}\n          className=\"size-select-btn me-1\"\n        >\n          One/size\n        </Button>\n\n        {Object.keys(commonSizes).map((key: string) => {\n          const data = commonSizes[key];\n          return (\n            <Button\n              onClick={() => form.setValues({ ...form.values, ...data })}\n              className=\"size-select-btn me-1\"\n              key={key}\n            >\n              {key}\n            </Button>\n          );\n        })}\n      </div>\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst SizeNameField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        placeholder=\"Entrez le nom de la taille ...\"\n        {...rest}\n        required\n        name=\"name\"\n        maxLength={20}\n        minLength={2}\n      />\n    </Form.Field>\n  );\n};\nconst SizeCodeField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez le code de la taille ...\" {...rest} required name=\"code\" maxLength={10} />\n    </Form.Field>\n  );\n};\n\nexport const SizeQuantityField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez la quantité ...\" {...rest} required type=\"number\" name=\"quantity\" min={0} />\n    </Form.Field>\n  );\n};\n\nexport const SizeSelectField = (props: SelectFieldProps & { sizes: TProductSize[] }) => {\n  const { label, text, error, sizes, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"size\" nullValue={{ label: 'Sélectionnez une taille ...' }}>\n        {sizes?.map((size) => {\n          return <Form.Option label={size.code?.toUpperCase()} value={size.slug!} key={size.slug} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nconst SizeSkuField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Sku\" {...rest} name=\"sku\" maxLength={99} minLength={2} />\n    </Form.Field>\n  );\n};\n\nconst SizeDeleteButton = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer une taille</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteSize(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onError?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this size:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"size-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\nimport { NavLink, useParams, useSearchParams } from 'react-router-dom';\n\nimport { getCN } from '@miq/utiljs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons, ViewSection } from '@miq/componentjs';\nimport Staff, { ImgAddButtonProps, StaffImg, StaffImgAddButton } from '@miq/staffjs';\n\nimport { emitter } from '../events';\nimport { TSupplierOrderInstance } from '../Supplier';\nimport { TProduct, TProductStageData } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\n\n//#region ============================== BUTTONS\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: TStaffProductInstance;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TStaffProductInstance>, 'context'> & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\n//#endregion ============================== BUTTONS\n\nexport const ProductListItem = ({\n  item,\n  ...props\n}: {\n  item: TProduct;\n  orderInstance?: TSupplierOrderInstance;\n  stages: TProductStageData[];\n  params?: URLSearchParams;\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  if (!item?.slug) return null;\n  const { params, orderInstance, stages = [] } = props;\n\n  const instance = StaffProduct(item);\n  const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n  const { supplier_item = { cost: 0 }, stage } = instance;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-itemscenter\" onClick={() => setOpen(!open)}>\n          <div style={{ width: 48 }}>\n            <Staff.Img.Thumb src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1 d-grid grid-md-3\">\n            <div className=\"span-md-2\">\n              {item.is_oos && <span className=\"text-sm text-danger\">Out of stock</span>}\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{item.name_truncated}</span>\n                <PublishedIcon show={item.is_published || false} />\n              </div>\n\n              <div className=\"d-flex text-sm\">\n                <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n                <div className=\"text-muted px-1\">{`|`}</div>\n                {supplier_item && supplier_item?.cost && (\n                  <div className=\"text-muted\">{`${supplier_item?.cost} ${orderInstance?.currency || 'USD'}`}</div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"text-sm\">\n              <div>\n                <span className=\"\">\n                  {instance?.category_data?.name || \"' - '\"}\n                  {supplier_item && <span className=\"text-muted\">{` | ${supplier_item.category}`}</span>}\n                </span>\n              </div>\n\n              <span>{`Sizes: ${instance.size_count}`}</span>\n              {stageData && <span className=\"text-muted\">{` - ${stageData.label}`}</span>}\n\n              {supplier_item && (\n                <a className=\"ms-1\" href={supplier_item.url} target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n              )}\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <Staff.Link to={`./${to}`} className=\"btn btn-square btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"mb-1\"\n    >\n      {open && <div className=\"\"></div>}\n    </ViewSection>\n  );\n};\n\nexport const ProductCardItem = ({ data, ...props }: { data: TProduct }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: TProduct[];\n  itempath: string;\n};\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  const { prodSlug } = useParams();\n\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: TProduct) => {\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug} className={getCN([prodSlug === item.slug && 'active'])}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { FormProps, IFormCallbackProps, IFormUpdateProps, useForm } from '@miq/formjs';\nimport { getCN, isRequired as isR } from '@miq/utiljs';\n\nimport { emitter } from '../../events';\nimport { CategoryChoicesType } from '../../types';\n\nimport { StaffProduct, TStaffProductInstance } from '../models';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\nimport { Button } from '@miq/componentjs';\nimport { SupplierOrder } from '../../Supplier';\n\nimport * as ProductFields from './fields';\n\n/**\n *\n */\n\ninterface IProductUpdateFormProps extends IFormUpdateProps<TStaffProductInstance> {\n  onWillSubmit?: () => void;\n  fields?: string[];\n}\n\nexport const ProductQuickUpdateForm = (\n  props: Omit<IProductUpdateFormProps, 'context'> & { categories: CategoryChoicesType; orderSlug?: string }\n) => {\n  const { instance, categories, orderSlug, ...rest } = props;\n\n  const form = useForm({\n    name: instance.name || '',\n    category: instance.category || '',\n    description: instance.description || '',\n    retail_price: instance?.retail_price || 0.0,\n    is_pre_sale: instance.is_pre_sale || false,\n    is_pre_sale_text: instance.is_pre_sale_text || '',\n  });\n\n  const { errors } = form;\n  const { fields = ['name', 'category', 'description', 'retail_price', 'is_pre_sale', 'is_pre_sale_text'] } = props;\n\n  return (\n    <ProductUpdateForm {...rest} context={form} instance={instance} fields={fields}>\n      <ProductForm.NameField error={errors.name} />\n\n      <ProductForm.DescriptionField error={errors.description} />\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        {categories && <ProductForm.CategoryField categories={categories} error={errors.category} />}\n        <ProductForm.RetailPriceField error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label=\"En pré-vente\" error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField label=\"Pre-sale text\" placeholder=\"Explain ...\" error={errors.is_pre_sale_text} />\n      )}\n\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div>\n          {orderSlug && instance?.slug && (\n            <Button\n              onClick={() => {\n                SupplierOrder({ slug: orderSlug }).destroyItem(instance.slug!);\n              }}\n            >\n              Remove from order\n            </Button>\n          )}\n        </div>\n\n        <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 btn-md\" />\n      </div>\n    </ProductUpdateForm>\n  );\n};\n\nexport function ProductUpdateForm({ children, ...props }: IProductUpdateFormProps) {\n  const {\n    instance = isR('StaffProduct instance'),\n    fields = isR('fields instance'),\n    onSuccess,\n    onError,\n    ...rest\n  } = props;\n\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props?.onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      if (field == 'is_pre_sale_dt' && !value) return;\n\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then(({ data }: any) => {\n        onSuccess?.(data);\n        emitter.update(data);\n      })\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm {...rest} onSubmit={handleSubmit}>\n      {children}\n    </ProductForm>\n  );\n}\n\n/**\n *\n */\n\nexport interface ProductCreateFormProps extends IFormCallbackProps {}\n\nexport const ProductCreateForm: React.FC<ProductCreateFormProps> = (props) => {\n  const form = useForm({ name: '', retail_price: '', description: '' });\n\n  const { errors } = form;\n\n  const handleCreate = (e: React.FormEvent) => {\n    e.preventDefault();\n    StaffProduct()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => form.handleError(err));\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleCreate}>\n      <ProductForm.NameField label=\"Nom du produit\" error={errors.name} />\n      <ProductForm.RetailPriceField required={false} label=\"Prix du produit\" error={errors.retail_price} />\n      <ProductForm.DescriptionField label=\"Description du produit\" error={errors.description} />\n\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductForm>\n  );\n};\n\n/**\n *\n */\n\nexport const ProductForm = (props: FormProps) => <Form {...props} />;\n\n/**\n *\n */\n\nProductForm.NameField = ProductFields.NameField;\nProductForm.DescriptionField = ProductFields.DescriptionField;\nProductForm.CategoryField = ProductFields.CategoryField;\nProductForm.SalePriceField = ProductFields.SalePriceField;\nProductForm.OnSaleCheckboxField = ProductFields.OnSaleCheckboxField;\nProductForm.OosCheckboxField = ProductFields.OosCheckboxField;\nProductForm.PresaleTextField = ProductFields.PresaleTextField;\nProductForm.RetailPriceField = ProductFields.RetailPriceField;\nProductForm.StageSelectField = ProductFields.StageSelectField;\nProductForm.PresaleCheckboxField = ProductFields.PresaleCheckboxField;\nProductForm.IsExplicitCheckboxField = ProductFields.IsExplicitCheckboxField;\n\n//\n//\n//\n\nexport const ProductListFilterForm = ({\n  children,\n  ...props\n}: {\n  children?: React.ReactNode;\n  categories?: CategoryChoicesType;\n}) => {\n  const [params, setParams] = useSearchParams();\n  const [q, setQ] = React.useState<string>(params.get('q') || '');\n  const { categories, ...rest } = props;\n\n  return (\n    <form\n      {...rest}\n      action=\".\"\n      method=\"GET\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (!q) params.delete('q');\n        else params.set('q', q);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {children || (\n        <>\n          <div className=\"mb-2 d-flex\">\n            <input\n              type=\"text\"\n              name=\"q\"\n              value={q}\n              onChange={(e) => {\n                const { value } = e.target;\n                setQ(value);\n                if (!value && params.get('q')) params.delete('q');\n              }}\n              className=\"miq-form-input flex-1\"\n              placeholder=\"Cherchez un produit par nom, categorie ou numero de serie ...\"\n            />\n            <Form.Submit value={'Search'} className=\"btn-primary-3 ms-1\" />\n          </div>\n\n          {categories && <ProductListFilterForm.Category {...{ params, setParams, categories }} />}\n\n          <ProductListFilterForm.Published {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.Sale {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.PreSale {...{ params, setParams }} className=\"mb-1\" />\n        </>\n      )}\n    </form>\n  );\n};\n\ntype TParamsProps = {\n  params: URLSearchParams;\n  setParams: (\n    nextInit: URLSearchParamsInit,\n    navigateOptions?:\n      | {\n          replace?: boolean | undefined;\n          state?: any;\n        }\n      | undefined\n  ) => void;\n};\n\ntype QuerySelectFieldProps = TParamsProps & {\n  emptyLabel?: string;\n  name: string;\n  children?: React.ReactNode;\n  className?: string;\n};\n\nProductListFilterForm.Category = (props: Omit<QuerySelectFieldProps, 'name'> & { categories: CategoryChoicesType }) => {\n  const { categories, ...rest } = props;\n\n  return (\n    <QuerySelectField emptyLabel=\"Categorie ...\" {...rest} name=\"cat\">\n      <option value=\"no-cat\">Sans catégorie</option>\n\n      {categories.items.map((cat) => {\n        return (\n          <option value={cat.value} key={cat.slug}>\n            {cat.label}\n          </option>\n        );\n      })}\n    </QuerySelectField>\n  );\n};\n\nProductListFilterForm.Published = (props: Omit<QuerySelectFieldProps, 'name'>) => {\n  return (\n    <QuerySelectField emptyLabel=\"Tous les produits ...\" {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"pinned\">Produits épinglés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n      <option value=\"explicit\">Produits exclus de Facebook</option>\n    </QuerySelectField>\n  );\n};\n\nconst QuerySelectField = ({ children, ...props }: QuerySelectFieldProps) => {\n  const { name, params, setParams, emptyLabel } = props;\n  return (\n    <select\n      className={getCN(['miq-select', props.className])}\n      name={name}\n      value={params.get(name) || ''}\n      onChange={(e) => {\n        const { value } = e.target;\n\n        if (!value) params.delete(name);\n        else params.set(name, value);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {emptyLabel && <option value=\"\">{emptyLabel}</option>}\n      {children}\n    </select>\n  );\n};\n\nProductListFilterForm.PreSale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"presale\" label=\"En pré-vente\" />;\n};\n\nProductListFilterForm.Sale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"sale\" label=\"En promo\" />;\n};\n\ntype QueryToggleFieldProps = Omit<QuerySelectFieldProps, 'emptyLabel'> & { label: string; inputId?: string };\n\nconst QueryToggleField = (props: QueryToggleFieldProps) => {\n  const { label, name, params, setParams, inputId } = props;\n\n  return (\n    <div className={getCN(['miq-query-filter-toggle d-flex align-items-center', props.className])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox me-1\"\n        id={inputId}\n        onChange={(e) => {\n          const { checked } = e.target;\n          if (!checked) params.delete(name);\n          else params.set(name, `${checked}`);\n          params.delete('page');\n          setParams(params);\n        }}\n        checked={Boolean(params.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n","import Form, { CheckboxFieldProps, SelectFieldProps, TextChoicesType, TextFieldProps } from '@miq/formjs';\nimport { DescriptionField as DField, NameField as NField } from '@miq/formjs';\nimport { CategoryChoicesType } from '../../types';\n\nexport const NameField = (props: TextFieldProps) => (\n  <NField placeholder=\"Entrez un titre clair et concis ...\" {...props} />\n);\nexport const DescriptionField = (props: TextFieldProps) => (\n  <DField placeholder=\"Décrivez les caractéristiques et les avantages ...\" {...props} />\n);\n\nexport const CategoryField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nexport const SalePriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        required\n        placeholder=\"Prix réduit\"\n        {...rest}\n        type=\"number\"\n        name=\"sale_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport const OnSaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_on_sale\" />\n    </Form.Field>\n  );\n};\n\nexport const PresaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_pre_sale\" />\n    </Form.Field>\n  );\n};\n\nexport const OosCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = 'En rupture de stock', text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_oos\" />\n    </Form.Field>\n  );\n};\n\nexport const PresaleTextField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.TextAreaX placeholder=\"\" {...rest} name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </Form.Field>\n  );\n};\n\nexport const RetailPriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        required\n        placeholder=\"Prix\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        {...rest}\n        type=\"number\"\n        name=\"retail_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport type TProductStageSelectFieldProps = SelectFieldProps & { stages: TextChoicesType };\n\nexport const StageSelectField = (props: TProductStageSelectFieldProps) => {\n  const { label, text, error, required = true, stages, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select required={required} name={'stage'} nullValue={{ label: 'Select stage' }} {...rest}>\n        {stages?.map?.((stage) => {\n          return <Form.Option {...stage} key={stage.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nexport const IsExplicitCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = 'Exclude from facebook feed', text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_explicit\" />\n    </Form.Field>\n  );\n};\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TProduct } from '../types';\n\nclass StaffProductService extends StaffService<TProduct> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: TProduct) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<TProduct, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n\nexport type TStaffProductInstance = ReturnType<typeof StaffProduct>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (\n  orderSlug?: string,\n  filter?: { published?: 'include' | 'exclude'; atc?: 0 | 1 }\n) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale, q, ...filter };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct({}).list({ params: searchParams }), {\n    refreshDeps: [q, page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import * as React from 'react';\nimport Form, {\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  useForm,\n  TextFieldProps,\n  CheckboxFieldProps,\n  SelectFieldProps,\n  TextChoicesType,\n} from '@miq/formjs';\nimport { SupplierOrder } from './models';\nimport { ProductForm } from '../Product/forms';\nimport { TProductStageSelectFieldProps } from '../Product/forms/fields';\n\ninterface ISupplierOrderUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof SupplierOrder>;\n  fields: string[];\n}\n\nexport const SupplierOrderUpdateForm: React.FC<ISupplierOrderUpdateFormProps> = ({ instance, fields, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <SupplierOrderForm {...rest} onSubmit={handleSubmit} />;\n};\n\n//#region ==================================== SUPPLIER ORDER FORM\n\nexport const SupplierOrderForm = (props: FormProps) => <Form {...props} />;\n\nSupplierOrderForm.NameField = (props: TextFieldProps) => {\n  const { label = 'Name', text = 'Write a name to help remember your order.', error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Nom\" maxLength={99} {...rest} name=\"name\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.OrderIDField = (props: TextFieldProps) => {\n  const { label = 'Order ID', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Order ID\" maxLength={99} {...rest} name=\"order_id\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.IsPaidField = (props: CheckboxFieldProps) => {\n  const { label = 'Payé', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error} checkbox>\n      <Form.Checkbox {...rest} name=\"is_paid\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.TotalCostField = (props: TextFieldProps) => {\n  const { label = 'Coût total', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text min=\"0\" step=\"0.01\" {...rest} required type=\"number\" name=\"total_cost\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.CurrencyField = (props: SelectFieldProps & { currencies: TextChoicesType }) => {\n  const { label, text = 'Select the supplier currency.', error, currencies, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"currency\" nullValue={{ label: 'Sélectionnez une monnaie ...' }}>\n        {currencies?.map((curr) => {\n          return <Form.Option {...curr} key={curr.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.SupplierField = (props: SelectFieldProps & { suppliers: TextChoicesType }) => {\n  const { label, text = 'Select the supplier.', error, suppliers, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"supplier\" nullValue={{ label: 'Sélectionnez le supplier ...' }}>\n        {suppliers?.map((supplier) => {\n          return <Form.Option {...supplier} key={supplier.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.StageSelectField = (props: TProductStageSelectFieldProps) => (\n  <ProductForm.StageSelectField required={false} {...props} />\n);\n\n//#endregion ==================================== SUPPLIER ORDER FORM\n\ninterface ISupplierOrderProductAddFormProps extends IFormCallbackProps {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  children?: React.ReactNode;\n}\n\nexport const SupplierOrderProductAddForm = ({ children, ...props }: ISupplierOrderProductAddFormProps) => {\n  const { orderInstance, onSuccess, onError } = props;\n  const supplier = orderInstance?.supplier?.toLowerCase();\n\n  const form = useForm({ supplier_name: supplier, url: '' });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const { url } = form.values;\n\n    const handleSuccess = (res: any) => {\n      setLoading(false);\n      form.setValue('url', '');\n      return onSuccess?.(res);\n    };\n\n    const handleError = (err: any) => {\n      form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n      setLoading(false);\n      return onError?.(err);\n    };\n\n    const urlErrMsg = `Invalid Url: does not match supplier ${orderInstance.supplier}`;\n\n    switch (supplier) {\n      case 'fnova':\n        if (!url.includes('fashionnova')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postFnova(url).then(handleSuccess).catch(handleError);\n      case 'plt':\n        if (!url.includes('prettylittlething')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postPlt(url).then(handleSuccess).catch(handleError);\n\n      default:\n        if (!url.includes(supplier)) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postShein(url).then(handleSuccess).catch(handleError);\n    }\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n      <Form.Field error={form.errors.url}>\n        <div className=\"d-flex flex-column flex-md-row align-items-center\">\n          <Form.Text\n            required\n            autoFocus\n            name=\"url\"\n            type=\"url\"\n            placeholder={`Add ${supplier} product source url ...`}\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <div className=\"mt-1 mt-md-0\">\n            <Form.Submit value=\"Add product\" className=\"btn btn-primary-3\" disabled={isLoading} />\n          </div>\n        </div>\n      </Form.Field>\n\n      {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n    </Form>\n  );\n};\n\nconst u = 'https://www.fashionnova.com/products/jessa-denim-mini-dress-white';\nconst shein404 = 'https://us.shein.com/Clear-Acrylic-Frame-Glasses-p-1792787-cat-2842.html';\nconst fnovavariant = 'https://www.fashionnova.com/products/kayla-seamless-bandeau-olive?variant=12191869272188';\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport './supplier-product-list.scss';\n\nimport Staff from '@miq/staffjs';\nimport { Button, HorizontalScrollGridLayout, Icons, Pagination, ViewSection } from '@miq/componentjs';\n\nimport { StaffProduct } from '../Product';\nimport { useProductListRequest } from '../Product';\nimport { ProductForm, ProductQuickUpdateForm } from '../Product/forms';\nimport { ProductDeleteButton } from '../Product/components';\nimport { CategoryChoicesType, TProduct, TProductStageData } from '../types';\n\nimport { SupplierOrder } from './models';\nimport Form, { useForm } from '@miq/formjs';\n\nexport type SupplierProductListProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nexport default function SupplierProductList({\n  orderInstance,\n  refreshOrder,\n  categories,\n  stages,\n}: SupplierProductListProps) {\n  const { ordSlug } = useParams();\n  const { res = { data: { results: [] } }, refresh } = useProductListRequest(ordSlug);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const form = useForm({ category: '' });\n\n  const updateCategories = () => {\n    const { category } = form.values;\n    if (!category) return;\n\n    orderInstance\n      .updateCategories(category, selected)\n      .then((r) => {\n        refresh();\n        form.setValue('category', '');\n      })\n      .catch((err) => {});\n  };\n\n  const isSelected = selected.length !== 0;\n\n  return (\n    <Staff.Section\n      actions={\n        isSelected && (\n          <>\n            <span className=\"p-1\" onClick={() => setSelected([])} style={{ cursor: 'pointer' }}>\n              [x]\n            </span>\n          </>\n        )\n      }\n      footer={<Pagination {...res.data} component={Staff.NavLink} to />}\n      className=\"supplier-p-list\"\n    >\n      {res.data?.results.length ? (\n        <>\n          {isSelected && (\n            <div className=\"bg-white p-1\" style={{ position: 'sticky', top: 0, zIndex: 1000 }}>\n              <Form context={form}>\n                <div className=\"d-flex\">\n                  {categories && <ProductForm.CategoryField categories={categories} error={form.errors.category} />}\n                </div>\n              </Form>\n\n              <Button className=\"btn-primary\" onClick={updateCategories}>\n                Publier\n              </Button>\n            </div>\n          )}\n\n          {res.data.results.map((item: TProduct) => (\n            <SupplierProductListItem\n              {...{ orderInstance, categories, selected, setSelected, refreshOrder, stages }}\n              instance={StaffProduct(item)}\n              key={item.slug}\n            />\n          ))}\n        </>\n      ) : null}\n    </Staff.Section>\n  );\n}\n\ntype TSPListItemProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  instance: ReturnType<typeof StaffProduct>;\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nconst ItemCheckBox = ({ instance, selected, setSelected }: TSPListItemProps) => (\n  <input\n    type=\"checkbox\"\n    name=\"selected\"\n    className=\"me-2\"\n    checked={selected.includes(instance.slug!)}\n    onChange={({ target }) => {\n      const { checked } = target;\n      if (checked) setSelected([...selected, instance.slug!]);\n      else setSelected((selected) => selected.filter((i) => i !== instance.slug));\n    }}\n  />\n);\n\nconst SupplierProductListItem = (props: TSPListItemProps) => {\n  // Used for deleted items\n  const [hide, setHide] = React.useState<boolean>(false);\n\n  const { instance, categories } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  if (hide) return null;\n\n  const { supplier_item, stage } = instance;\n  const { orderInstance, stages = [] } = props;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-items-center\">\n          <ItemCheckBox {...props} />\n\n          <div style={{ width: 48, height: 48 }} onClick={() => setOpen(!open)}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1\">\n            <div className=\"text-ellipsis\">{instance.name}</div>\n            <div className=\"text-sm\">\n              {instance.is_on_sale && instance.sale_price && (\n                <span className=\"\">\n                  {instance.sale_price} {`<-`}{' '}\n                </span>\n              )}\n              <span className=\"\">{instance.retail_price}</span>\n              <span className=\"text-muted\">\n                {' | '}\n                {supplier_item.cost} {orderInstance.currency}\n              </span>\n              <span className=\"\">\n                {' - '}\n                {instance.category_data?.name || \"' - '\"}\n                <span className=\"text-muted\">\n                  {' | '}\n                  {supplier_item.category}\n                </span>\n              </span>\n              {stageData && (\n                <span className=\"text-muted\">\n                  {' - '}\n                  {stageData.label}\n                </span>\n              )}\n\n              <a className=\"btn ms-1\" href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <ProductDeleteButton\n            instance={instance}\n            onSuccess={() => {\n              setHide(true);\n              props?.refreshOrder?.();\n            }}\n            className=\"me-2\"\n          />\n          <Staff.Link to={`./${instance.slug}/`} className=\"btn btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"suppier-p-list-item bg-white\"\n    >\n      {open && (\n        <HorizontalScrollGridLayout className=\"form-tab no-scroll-bar gap-2\">\n          <ProductQuickUpdateForm instance={instance} categories={categories} orderSlug={orderInstance?.slug} />\n\n          <div className=\"\">\n            <div className=\"mb-1\">\n              {`${supplier_item.item_id ? <span className=\"\">Item ID: {supplier_item.item_id}</span> : ''}`}\n            </div>\n            <ul>\n              {supplier_item.category && (\n                <li className=\"mb-1\">\n                  <div className=\"text-sm\">Supplier Category</div>\n                  <div className=\"text-muted\">{supplier_item.category}</div>\n                </li>\n              )}\n              <li className=\"mb-1\">\n                <div className=\"text-sm\">FOB Cost({orderInstance.currency})</div>\n                <div className=\"text-muted\">{supplier_item.cost}</div>\n              </li>\n\n              {supplier_item.url && (\n                <li className=\"\">\n                  <a href={supplier_item.url} target=\"_blank\" className=\"text-underline\" rel=\"noopener noreferrer\">\n                    View supplier product page\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        </HorizontalScrollGridLayout>\n      )}\n    </ViewSection>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Icons, Loading, ViewSection, ButtonProps } from '@miq/componentjs';\nimport { SupplierOrderForm, SupplierOrderProductAddForm, SupplierOrderUpdateForm } from './forms';\nimport SupplierProductList from './SupplierProductList';\nimport { TSupplierOrder } from '../types';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { ProductListFilterForm } from '../Product/forms';\n\nconst formFields: { [key: string]: any } = {\n  name: '',\n  order_id: '',\n  stage: '',\n  currency: 'USD',\n  supplier: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nconst mapDataToValues = (data: any = {}): TSupplierOrder => {\n  const values: any = {};\n  Object.keys(formFields).forEach((k) => {\n    values[k] = data[`${k}`] || formFields[`${k}`];\n  });\n  return values;\n};\n\nexport default function OrderUpdateView() {\n  const { ordSlug } = useParams();\n\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { suppliers, currencies } = React.useContext(SharedDataCtx) as any;\n\n  const { setValues } = form;\n  const {\n    res,\n    loading,\n    setLoading,\n    setRes: setOrder,\n    refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  // console.log(r.data.stages);\n\n  if (!instance.supplier || !instance.currency)\n    return (\n      <Staff.View title=\"Modifier une commande\" back=\"/staff/store/orders/\">\n        <Staff.Section className=\"d-flex justify-content-center mt-4\">\n          <SupplierOrderUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'currency', 'supplier']}\n            onSuccess={(res) => setOrder(res)}\n          >\n            <SupplierOrderForm.NameField required label=\"Nom\" error={form.errors.currency} />\n            <SupplierOrderForm.SupplierField\n              required\n              label=\"Supplier\"\n              suppliers={suppliers}\n              error={form.errors.supplier}\n            />\n            <SupplierOrderForm.CurrencyField\n              required\n              label=\"Supplier Currency\"\n              currencies={currencies}\n              error={form.errors.currency}\n            />\n\n            <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n          </SupplierOrderUpdateForm>\n        </Staff.Section>\n      </Staff.View>\n    );\n\n  return (\n    <Staff.View\n      title={form.values.name}\n      back=\"/staff/store/orders/\"\n      actions={\n        <Staff.NavLink to=\"settings/\">\n          <Icons.Gear />\n        </Staff.NavLink>\n      }\n    >\n      <div className=\"d-flex flex-column flex-xl-row\">\n        <div className=\"w-100\">\n          <Staff.Section header={<Header {...{ instance, setLoading, setOrder, categories: r?.data?.categories }} />}>\n            {loading ? (\n              <Loading icon />\n            ) : (\n              <SupplierProductList\n                orderInstance={instance}\n                categories={r?.data?.categories}\n                stages={r?.data?.stages}\n                refreshOrder={refreshOrder}\n              />\n            )}\n          </Staff.Section>\n        </div>\n\n        <div className=\"min-w-35 ps-md-1\">\n          <DetailDisplaySection {...{ loading, instance }} />\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst DetailDisplaySection = ({\n  loading,\n  instance,\n}: {\n  loading: boolean;\n  instance: ReturnType<typeof SupplierOrder>;\n}) => {\n  return (\n    <Staff.Section\n      border\n      className=\"bg-white mb-1\"\n      title={`Order Details${!loading && ` (${instance.products?.length})`}`}\n      text={`Supplier: ${instance.supplier} | Currency: ${instance.currency}`}\n    >\n      <div className=\"mb-2\">\n        Categories\n        <ul>\n          {instance?.by_categories\n            ?.filter((i) => i?.category__name)\n            ?.map(({ category__name: name, ...i }) => (\n              <DetailDisplaySection.Li title={name} key={name}>\n                : {i.count}\n              </DetailDisplaySection.Li>\n            ))}\n        </ul>\n      </div>\n\n      <ul className=\"mb-3\">\n        <DetailDisplaySection.Li title=\"Average cost: \">\n          {instance.avg_cost} {instance.currency}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Total cost: \">\n          {`${instance.total_cost || instance?.items_cost?.amountWithSymbol} ${instance.currency}`}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Est. revenue: \">{instance?.items_revenue?.amount}</DetailDisplaySection.Li>\n      </ul>\n    </Staff.Section>\n  );\n};\n\nDetailDisplaySection.Li = ({ children, title }: { children: React.ReactNode; title: string }) => (\n  <li>\n    <span className=\"mr-2 text-muted\">{title}</span>\n    {children}\n  </li>\n);\n\nconst Header = ({ instance, setLoading, setOrder, categories }: any) => {\n  const [tab, setTab] = React.useState<'filter' | 'add'>('filter');\n\n  const render = () => {\n    switch (tab) {\n      case 'add':\n        return (\n          <SupplierOrderProductAddForm\n            orderInstance={instance}\n            onSuccess={(res) => {\n              setLoading();\n              setOrder(res);\n            }}\n          />\n        );\n\n      default:\n        return <ProductListFilterForm categories={categories} />;\n    }\n  };\n\n  return (\n    <Staff.Section\n      border\n      title={\n        <div>\n          <HeaderButton tab={tab} onClick={() => setTab('filter')} active={tab === 'filter'}>\n            <Icons.Funnel />\n          </HeaderButton>\n        </div>\n      }\n      actions={\n        <HeaderButton tab={tab} onClick={() => setTab('add')} active={tab === 'add'}>\n          <Icons.Plus />\n        </HeaderButton>\n      }\n      className=\"bg-white mb-1\"\n    >\n      <div className=\"\" style={{ top: 0, position: 'sticky' }}>\n        {render()}\n      </div>\n    </Staff.Section>\n  );\n};\nconst HeaderButton = ({\n  children,\n  tab,\n  active,\n  ...props\n}: ButtonProps & { tab: string; children: React.ReactNode; active: boolean }) => {\n  return (\n    <Staff.Button\n      className=\"btn-primary-3\"\n      style={{ border: active ? '1px solid var(--blue-600)' : undefined }}\n      {...props}\n    >\n      {children}\n    </Staff.Button>\n  );\n};\n\nexport const OrderSettingUpdateView = () => {\n  const { ordSlug } = useParams();\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { setValues } = form;\n  const {\n    res,\n    // setRes: setOrder,\n    // refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  return (\n    <Staff.View title={`${instance.name} Order Update`} back={`/staff/store/orders/${ordSlug}/`}>\n      <SupplierOrderUpdateForm\n        {...{ instance, context: form, fields: ['is_paid', 'order_id', 'total_cost', 'stage'] }}\n        // onSuccess={(r) => setOrder({ ...res, ...r })}\n      >\n        <ViewSection border footer={<Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />}>\n          <SupplierOrderForm.IsPaidField error={form.errors.is_paid} className=\"my-2\" />\n          {form.values.is_paid && (\n            <>\n              <SupplierOrderForm.OrderIDField required={form.values.is_paid} error={form.errors.order_id} />\n              <SupplierOrderForm.TotalCostField required={form.values.is_paid} error={form.errors.total_cost} />\n            </>\n          )}\n\n          <SupplierOrderForm.StageSelectField {...{ stages: r.data.stages }} />\n        </ViewSection>\n      </SupplierOrderUpdateForm>\n    </Staff.View>\n  );\n};\n","import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { SupplierOrder, TSupplierOrderInstance } from './models';\nimport Staff from '@miq/staffjs';\n\ntype TSupplierOrderDeleteButtonProps = Omit<IFormUpdateProps<TSupplierOrderInstance>, 'context'> & {\n  label?: string;\n};\n\nexport const SupplierOrderDeleteButton: React.FC<TSupplierOrderDeleteButtonProps> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['s-order-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const SupplierOrderAddButton = (props: { onSuccess: (p?: any) => void; label?: string; className?: string }) => {\n  const { label = 'Add order' } = props;\n\n  return (\n    <Staff.Button\n      onClick={() => {\n        SupplierOrder()\n          .create({})\n          .then((r) => props?.onSuccess?.(r))\n          .catch((err: any) => {\n            // console.log(err);\n          });\n      }}\n      className={props.className}\n      requiredPerms={['store.add_supplierorder']}\n      title={'Add a new order'}\n    >\n      {label}\n    </Staff.Button>\n  );\n};\n\nexport const SupplierPrice = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { Pagination, Table } from '@miq/componentjs';\n\nimport { TSupplierOrder } from '../types';\n\nimport { SupplierOrder } from './models';\nimport { SupplierOrderAddButton, SupplierOrderDeleteButton, SupplierPrice } from './components';\n\nconst SupplierOrderRow = ({ item, removeItem }: { item: TSupplierOrder; removeItem: (payload: any) => void }) => {\n  const { name = 'New order', slug, is_paid, items, items_revenue, supplier } = item || {};\n\n  return (\n    <Table.Tr>\n      <Table.Td>\n        <Staff.Link to={`${slug}/`} className=\"\">\n          <div className={getCN(['fw-bold text-ellipsis', is_paid && 'text-line-through'])}>{name}</div>\n        </Staff.Link>\n        <span className=\"text-sm\">{item.avg_cost}</span>\n      </Table.Td>\n\n      <Table.Td>{items?.length}</Table.Td>\n\n      <Table.Td>{supplier}</Table.Td>\n\n      <Table.Td>\n        <SupplierPrice {...item.total_cost_data} />\n      </Table.Td>\n      <Table.Td>\n        <SupplierPrice {...items_revenue} />\n      </Table.Td>\n\n      <Table.Td>\n        <SupplierOrderDeleteButton instance={SupplierOrder(item)} onSuccess={() => removeItem?.({ slug })} />\n      </Table.Td>\n    </Table.Tr>\n  );\n};\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, removeItem } = useRequest(() => SupplierOrder().list({ params: { page } }), { refreshDeps: [page] });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const { items } = r;\n\n  return (\n    <Staff.View\n      title=\"Supplier Orders\"\n      back=\"/staff/store/\"\n      actions={\n        <SupplierOrderAddButton onSuccess={({ data }: any) => navigate(`${data.slug}/`)} className=\"btn-primary-3\" />\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      {Boolean(items.length) ? (\n        <Staff.Section footer={<Pagination {...r.data} component={Staff.Link} to />}>\n          <Table\n            border\n            items={items}\n            header={\n              <>\n                <Table.Th />\n                <Table.Th>Items</Table.Th>\n                <Table.Th>Supplier</Table.Th>\n\n                <Table.Th>Total Cost</Table.Th>\n                <Table.Th>Est. Revenue</Table.Th>\n                <Table.Th />\n              </>\n            }\n            renderItem={(item) => <SupplierOrderRow {...{ item, removeItem }} key={item.slug} />}\n            className=\"w-100\"\n          />\n        </Staff.Section>\n      ) : (\n        <div className=\"p-4\">\n          <div className=\"text-center\">\n            <div className=\"mb-4 text-md\">Add a supplier order to get started.</div>\n            <SupplierOrderAddButton\n              onSuccess={({ data }: any) => navigate(`${data.slug}/`)}\n              label=\"Add an order\"\n              className=\"btn-md btn-primary fw-bold\"\n            />\n          </div>\n        </div>\n      )}\n    </Staff.View>\n  );\n}\n\n// EXPORTS\n\nexport * from './models';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TSupplierOrder } from '../types';\n\nconst timeout = 10000;\n\nclass SupplierOrderService extends StaffService<TSupplierOrder> {\n  updateCategories(category: string, slugs: string[]) {\n    return this.post(`${this._path}batch/`, { slugs, category }, { timeout });\n  }\n\n  postFnova(url: string) {\n    return this.post(`${this._path}fnova/`, { url }, { timeout });\n  }\n  postPlt(url: string) {\n    return this.post(`${this._path}plt/`, { url }, { timeout });\n  }\n\n  postShein(url: string) {\n    return this.post(`${this._path}shein/`, { url }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n}\n\nexport const SupplierOrder = (data: TSupplierOrder = {}) =>\n  StaffModel<TSupplierOrder, SupplierOrderService>(data, 'supplierorders', SupplierOrderService);\n\nexport type TSupplierOrderInstance = ReturnType<typeof SupplierOrder>;\n\nexport type SupplierType = {\n  slug?: string;\n  name_choices: any;\n  created: any;\n  updated: any;\n};\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, TProduct } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: TProduct & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\n// interface IEventStateSyncProps {\n//   children?: React.ReactNode;\n// }\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n","import { ImgType } from '@miq/componentjs';\nimport { TextChoicesType } from '@miq/formjs';\nimport { WithMetaFields } from '@miq/utiljs';\n\nexport type PriceDataType = { currency: string; amount: string; amountWithSymbol: string };\nexport type PriceType = number | PriceDataType;\n\nexport type TProduct = WithMetaFields<{\n  slug?: string;\n\n  category?: string;\n  category_data?: TCategory;\n  name?: string;\n\n  cover?: string;\n  cover_data?: ImgType;\n  images?: string[];\n  images_data?: ImgType[];\n\n  readonly name_truncated?: string;\n  description?: string;\n  retail_price?: PriceType;\n  retail_price_data?: PriceDataType;\n  is_on_sale?: boolean;\n  sale_price?: PriceType;\n  sale_price_data?: PriceDataType;\n  is_pre_sale?: boolean;\n  is_pre_sale_text?: string;\n  is_pre_sale_dt?: string | Date;\n  url?: string;\n\n  has_attributes?: boolean;\n  attributes?: any[];\n  sizes?: any[];\n  size_count: number | undefined;\n\n  is_pinned?: boolean;\n  is_explicit?: boolean;\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  supplier_item: SupplierItemType;\n  position?: number;\n  color_group_pk?: string;\n  stage?: string;\n  is_oos: boolean | undefined;\n\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type CategoryChoicesType = {\n  items: TextChoicesType;\n};\n\nexport type TProductStageData = { name: string; label: string; value: string };\n\nexport type TCategory = WithMetaFields<{\n  slug?: string;\n  supplier_item_id?: string;\n  name?: string;\n  description?: string;\n  cover?: ImgType;\n  position?: number;\n\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  cover_data?: ImgType;\n  products_count?: number;\n  published_count?: number;\n  draft_count?: number;\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type SupplierItemType = {\n  slug?: string;\n  item_id?: string;\n  item_sn?: string;\n  category?: string;\n  url?: string;\n  cost?: number;\n  created?: string;\n  updated?: string;\n};\n\nexport enum SupplierName {\n  SHEIN = 'SHEIN',\n  PLT = 'PLT',\n  FNOVA = 'FNOVA',\n}\n\nexport type TSupplierOrder = {\n  slug?: string;\n  name?: string;\n  supplier?: string;\n  order_id?: string;\n  products?: TProduct[];\n  items?: any[];\n  items_cost?: number;\n  items_revenue?: number;\n  avg_cost?: number;\n  by_categories?: { category__name: string; count: number }[] | undefined;\n\n  currency?: string;\n  is_paid?: boolean;\n  is_paid_dt?: string;\n  is_fulfilled_dt?: string;\n  total_cost?: number;\n  total_cost_data?: PriceDataType;\n};\n\nexport type TProductSize = {\n  slug?: string;\n  name?: string;\n  code?: string;\n  quantity?: number;\n};\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { SharedDataCtx, SharedDataState } from '@miq/contextjs';\nimport { OrderSettingUpdateView } from './Supplier/OrderUpdateView';\n\nconst ShopStaffIndexView = React.lazy(() => import('./IndexView'));\n\nconst SupplierOrderIndexView = React.lazy(() => import('./Supplier'));\nconst SupplierOrderProductUpdateView = React.lazy(() => import('./Supplier/OrderProductUpdateView'));\nconst SupplierOrderUpdateView = React.lazy(() => import('./Supplier/OrderUpdateView'));\n\nconst CategoryIndexView = React.lazy(() => import('./Category'));\nconst CategoryUpdateView = React.lazy(() => import('./Category/UpdateView'));\n\nconst ProductIndexView = React.lazy(() => import('./Product/IndexView'));\nconst ShopSettingUpdateView = React.lazy(() => import('./Setting'));\n\nexport default function ShopStaffRoutes() {\n  const { shopy_settings } = React.useContext(SharedDataCtx) as SharedDataState & { shopy_settings: any | null };\n\n  if (!shopy_settings) return null;\n\n  return (\n    <Routes>\n      <Route\n        path=\"orders/*\"\n        element={\n          <Routes>\n            <Route path={`:ordSlug/:prodSlug/`} element={<SupplierOrderProductUpdateView />} />\n            <Route path={`:ordSlug/settings/`} element={<OrderSettingUpdateView />} />\n            <Route path={`:ordSlug/`} element={<SupplierOrderUpdateView />} />\n            <Route path=\"/*\" element={<SupplierOrderIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"products/*\"\n        element={\n          <Routes>\n            <Route path=\"/*\" element={<ProductIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"categories/*\"\n        element={\n          <Routes>\n            <Route path=\":catSlug/\" element={<CategoryUpdateView />} />\n            <Route index element={<CategoryIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route path=\"settings/\" element={<ShopSettingUpdateView />} />\n      <Route path=\"/\" element={<ShopStaffIndexView />} />\n    </Routes>\n  );\n}\n\nexport * from './types';\n\nexport { useProductListRequest } from './Product/utils';\nexport { ProductListFilterForm } from './Product/forms';\nexport { ProductListItem } from './Product/components';\nexport { ProductPriceDisplay } from './components';\nexport { SizeQuantityField, SizeSelectField } from './Product/Size';\n"],"names":["ACCEPT","StaffImgAddButton","React","ref","children","props","uploadRef","instance","StaffImg","label","multiple","accept","func","onUpload","onSuccess","onSuccessMulti","onError","onErrorMulti","rest","className","onClick","current","click","onChange","e","files","target","promises","errors","Array","from","splice","forEach","file","i","push","create","catch","err","Promise","all","then","responses","res","StaffImgUpdateButton","field","update","undefined","StaffImgDeleteButton","destroy","getCN","StaffImgViewSelect","name","value","GeneralSettingUpdateView","IndexSettingUpdateView","PagesSettingUpdateView","SettingLayout","path","element","title","back","requiredPerms","SettingLink","to","text","AccountStaffLayout","ProfileUpdateView","SharedDataCtx","user","updateUser","apps","employee","formInitData","first_name","last_name","gender","position","form","useForm","StaffUser","context","onSubmit","preventDefault","values","data","handleError","footer","required","error","placeholder","fieldCN","nullValue","Object","keys","includes","minLength","email","SidebarLink","href","addForwardSlash","icon","ctx","fallback","viewProps","isLoaded","site","is_staff","links","sidebarCN","mainCN","mobileNavCN","sidebarLinks","filter","mobileLinks","mobile","routes","prefix","map","v","key","role","isArray","withHasPerms","Component","args","perms","hasPerms","perm","length","footerCN","StaffNavLink","NavLink","StaffLink","Link","StaffButton","Button","StaffSection","ViewSection","Month","dt","Date","showWeekDay","short","monthWeeks","getMonthWeeks","WeekDays","id","w","Week","uuid","endDate","renderDay","weekDates","getWeekDates","d","Day","render","WeekDay","DateNum","wd","WEEKDAYS","find","index","getDay","long","isToday","getDate","DatePickerDay","activeDt","isActive","isSameDay","Calendar","currentDate","assign","DatePicker","onDateClick","getMonthLastDt","YearNum","getFullYear","PrevWeekButton","subDays","NextWeekButton","addDays","HitService","slugs","this","post","_endpoint","action","get","StaffService","Hit","StaffModel","CampaignService","useCampaignListRequest","useSearchParams","summary","useRequest","Campaign","list","params","refreshDeps","useHitListRequest","filterPath","q","searchParams","hitsByPath","hitList","hit","hitsByIp","ip","HitSummarySection","HitListItem","item","isDeleted","setDeleted","url","referrer","response_status","created","session","formatDateToStr","formatTime","debug","truncateStr","user_agent","HitDeleteButton","onDelete","HitList","items","entries","hits","reverse","isFb","Boolean","ua","toLowerCase","hitIsFb","isIg","hitIsIg","isBot","hitIsBot","source_id","match","slice","border","width","height","actions","HitListDeleteButton","slug","bodyCN","sort","a","b","handleDelete","console","log","renderHeader","renderFooter","setOpen","deleteSlugs","CampaignIndexView","r","Response","isSuccess","count","header","renderItem","SearchRoutes","CampaignRoutes","IndexView","AnalyticsRoutes","TabLink","Staff","Layout","View","StaffView","Section","Img","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","StaffUserService","StaffImgService","alt_text","src","config","reject","fd","FormData","append","headers","HorizontalGallery","VerticalGallery","Mobile","Thumb","Square","Picture","Image","axios","API_ENDPOINT","DOMAIN","process","API","baseURL","timeout","withCredentials","endpoint","s","CrudService","TargetServiceClass","CustomerService","CartService","prodSlug","size","qty","_path","delete","Cart","CustomerSelect","customers","onItemClick","cust","phone","CustomerLNameField","setCustomers","onCustomerSelect","allowSuggestions","maxLength","onDebounce","Customer","p","CustomerFNameField","CustomerEmailField","CustomerPhoneField","CustomerFields","LName","FName","Email","Phone","CustomerForm","fields","getCustomerFD","export","sharedProps","CustomerCard","CartCreateView","navigate","useNavigate","customer","setCustomer","headerCN","createCart","type","CartUpdateView","cartSlug","useParams","productRes","useProductListRequest","published","atc","retrieve","response","setRes","loading","cart","products","product","ProductAddForm","addItem","customer_data","quantity","sizes","cover_data","is_oos","category_data","size_count","style","minWidth","maxWidth","max","min","SalesIndexView","SalesStaffRoutes","SizeUpdateForm","productInstance","code","patchSize","SizeNameField","SizeCodeField","SizeQuantityField","SizeDeleteButton","commonSizes","xs","m","l","xl","formDefaultValues","SizeAddForm","postSize","setValues","SizeSelectField","toUpperCase","deleteSize","ProductImagesAddButton","resArray","imgsArray","images","ProductDeleteButton","emitter","ProductListItem","open","orderInstance","stages","StaffProduct","supplier_item","cost","stage","stageData","name_truncated","show","is_published","currency","category","rel","ProductCardItem","ProductCardList","itempath","ProductQuickUpdateForm","categories","orderSlug","description","retail_price","is_pre_sale","is_pre_sale_text","ProductUpdateForm","ProductForm","NameField","DescriptionField","CategoryField","RetailPriceField","PresaleCheckboxField","PresaleTextField","SupplierOrder","destroyItem","isR","onWillSubmit","ProductCreateForm","cat","SalePriceField","step","OnSaleCheckboxField","checkbox","OosCheckboxField","StageSelectField","IsExplicitCheckboxField","ProductListFilterForm","setParams","setQ","method","set","Category","Published","Sale","PreSale","QuerySelectField","emptyLabel","QueryToggleField","inputId","checked","htmlFor","StaffProductService","patch","sizeSlug","attrSlug","dt_published","page","presale","sale","supplier_order_slug","SupplierOrderUpdateForm","SupplierOrderForm","OrderIDField","IsPaidField","TotalCostField","CurrencyField","currencies","curr","SupplierField","suppliers","supplier","SupplierOrderProductAddForm","supplier_name","isLoading","setLoading","handleSuccess","setValue","setErrors","urlErrMsg","postFnova","postPlt","postShein","autoFocus","disabled","SupplierProductList","refreshOrder","ordSlug","results","refresh","selected","setSelected","isSelected","cursor","component","top","zIndex","updateCategories","SupplierProductListItem","ItemCheckBox","hide","setHide","is_on_sale","sale_price","item_id","formFields","order_id","is_paid","total_cost","mapDataToValues","k","OrderUpdateView","setOrder","Header","DetailDisplaySection","by_categories","category__name","Li","avg_cost","items_cost","amountWithSymbol","items_revenue","amount","tab","setTab","HeaderButton","active","OrderSettingUpdateView","SupplierOrderDeleteButton","SupplierOrderAddButton","SupplierPrice","SupplierOrderRow","removeItem","total_cost_data","SupplierOrderIndexView","SupplierOrderService","PublishButton","publish","UnPublishButton","unpublish","PriceDisplay","lineThrough","ProductPriceDisplay","retail_price_data","sale_price_data","isSale","PublishedIcon","ToastEmitter","CrudEmitter","payload","emit","EventEmitter","useCrudEmitter","callbacks","on","onCreate","onUpdate","onDestroy","SupplierName","ShopStaffIndexView","SupplierOrderProductUpdateView","SupplierOrderUpdateView","CategoryIndexView","CategoryUpdateView","ProductIndexView","ShopSettingUpdateView","ShopStaffRoutes","shopy_settings"],"sourceRoot":""}