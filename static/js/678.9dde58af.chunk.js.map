{"version":3,"file":"static/js/678.9dde58af.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Product/views.Update.tsx","../../../../shopy/shopy-storejs/src/Product/Attribute/index.jsx","../../../../shopy/shopy-storejs/src/Product/views.UpdateTabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Loading, QueryButton } from '@miq/componentjs';\nimport { addForwardSlash, Response } from '@miq/utiljs';\n\nimport './views.update.scss';\n\nimport { emitter } from '../events';\nimport { StaffProduct } from './models';\nimport { PublishButton, UnPublishButton } from '../components';\nimport {\n  ProductUpdateInfoTab,\n  ProductUpdateInventoryTab,\n  ProductUpdateMediaTab,\n  ProductUpdateSettingsTab,\n} from './views.UpdateTabs';\nimport { ProductCardItem } from './components';\n\n//#region FIELDS\n\nconst formInfoFields = [\n  'name',\n  'category',\n  'description',\n  'retail_price',\n  'is_pre_sale',\n  'is_pre_sale_text',\n  'is_pre_sale_dt',\n  'is_oos',\n  'is_on_sale',\n  'sale_price',\n  'is_explicit',\n];\nconst configFormFields = ['cost', 'color_group_pk', 'stage'];\nconst supplierFormFields = [\n  'supplier_name',\n  'supplier_item_id',\n  'supplier_item_sn',\n  'supplier_item_category',\n  'supplier_item_url',\n  'supplier_item_cost',\n  'supplier_item_cost_currency',\n  'supplier_order_id',\n];\nconst seoFields = ['meta_title', 'meta_description', 'meta_slug'];\nconst formFields = [...formInfoFields, ...configFormFields, ...supplierFormFields, ...seoFields];\nconst formDefaultValues: any = {\n  retail_price: 0.0,\n  is_pre_sale: false,\n  sale_price: 0.0,\n  is_on_sale: false,\n  is_published: false,\n};\nconst mapData2Values = (data: any = {}) => {\n  const values: any = {};\n  formFields.forEach((f) => {\n    const value = data?.[f];\n    if (value == null) {\n      values[f] = formDefaultValues[f] ?? '';\n      return;\n    }\n    values[f] = value;\n  });\n  return { ...formDefaultValues, ...values };\n};\n\n//#endregion FIELDS\n\n//#region ProductStaffUpdateView\n\nexport default function ProductStaffUpdateView(props: any) {\n  let { back } = props;\n  const { prodSlug } = useParams();\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n\n  const form = useForm(mapData2Values());\n  const { res, setRes, loading, ...request } = useRequest(() => StaffProduct({ slug: prodSlug }).retrieve(), {\n    refreshDeps: [prodSlug],\n    onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const instance = StaffProduct(r.data);\n\n  const updateData = (d: any) => {\n    request.updateData(d);\n    emitter.update(d);\n  };\n\n  const tab = params.get('tab');\n\n  const tabsProps = {\n    instance,\n    form,\n    setRes,\n    onUpdate: updateData,\n    navigate,\n    back,\n    params,\n    tab,\n    categories: r?.data?.categories,\n  };\n\n  return (\n    <Staff.View\n      back={`${addForwardSlash(back)}${`${params}` ? `?${params}` : ''}`}\n      title={<ProductCardItem data={{ ...instance.export() }} />}\n      requiredPerms={['store.change_product']}\n      className=\"product-staff-update-view\"\n    >\n      <Staff.Section\n        title={<div className=\"mb-1\">{QButtons}</div>}\n        actions={\n          instance.is_published ? (\n            <UnPublishButton instance={instance} onSuccess={({ data }) => updateData(data)}>\n              Dépublier ce produit\n            </UnPublishButton>\n          ) : (\n            <PublishButton\n              instance={instance}\n              onSuccess={({ data }) => updateData(data)}\n              onError={(err) => form.handleError(err)}\n            >\n              Publier ce produit\n            </PublishButton>\n          )\n        }\n      >\n        {(() => {\n          switch (tab) {\n            case 'inventory':\n              return <ProductUpdateInventoryTab {...tabsProps} />;\n            case 'settings':\n              return <ProductUpdateSettingsTab {...tabsProps} />;\n            case 'media':\n              return <ProductUpdateMediaTab {...tabsProps} />;\n\n            default:\n              return <ProductUpdateInfoTab {...tabsProps} />;\n          }\n        })()}\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\n//#endregion ProductStaffUpdateView\n\nconst QButtons = (\n  <div className=\"query-buttons\">\n    <QueryButton index target=\"tab\" className=\"btn-md\">\n      Info\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"media\" className=\"btn-md\">\n      Media\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"inventory\" className=\"btn-md\">\n      Inventory\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"settings\" className=\"btn-md\">\n      Settings\n    </QueryButton>\n  </div>\n);\n","import * as React from 'react';\nimport Form, { useForm } from '@miq/formjs';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\n\nexport const AttributeUpdateForm = ({ data, productInstance, ...props }) => {\n  const form = useForm({ name: data.name || '', value: data.value || '' });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchAttribute(data.slug, form.values)\n          .then((res) => onSuccess?.(res))\n          .catch((err) => {\n            form.handleError(err);\n            return onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-md-6 gap-1\">\n        <div className=\"span-md-2\">\n          <AttrNameField error={form.errors.name} />\n        </div>\n\n        <div className=\"span-md-3\">\n          <AttrValueField error={form.errors.value} className=\"\" />\n        </div>\n\n        <div className=\"span-md-1\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <AttributeDeleteButton {...{ productInstance, data, onSuccess, onError }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst formDefaultValues = { name: '', value: '' };\nexport const AttributeCreateForm = ({ productInstance, ...props }) => {\n  const form = useForm(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postAttribute(form.values)\n          .then((res) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-md-6 gap-1\">\n        <div className=\"span-md-2\">\n          <AttrNameField error={form.errors.name} />\n        </div>\n\n        <div className=\"span-md-3\">\n          <AttrValueField error={form.errors.value} className=\"\" />\n        </div>\n\n        <div className=\"span-md-1\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst AttrNameField = (props) => {\n  const { label, text, error, placeholder = `Entrez le nom de l'attribut ...`, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text {...rest} required name=\"name\" placeholder={placeholder} maxLength={30} minLength={2} />\n    </Form.Field>\n  );\n};\nconst AttrValueField = (props) => {\n  const { label, text, error, placeholder = `Entrez la valuer de l'attribut ...`, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text {...rest} required name=\"value\" placeholder={placeholder} maxLength={99} minLength={2} />\n    </Form.Field>\n  );\n};\n\nconst AttributeDeleteButton = ({ data, productInstance, ...props }) => {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer un attribut</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteAttribute(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onError?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this attribute:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"attr-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n","import { Button, Icons, ImgType } from '@miq/componentjs';\nimport Form, { MetaDescriptionField, MetaSlugField, MetaTitleField, useForm } from '@miq/formjs';\nimport Staff, {\n  StaffImg,\n  StaffImgAddButton,\n  StaffImgDeleteButton,\n  StaffImgUpdateButton,\n  StaffImgViewSelect,\n} from '@miq/staffjs';\nimport * as React from 'react';\nimport { CategoryChoicesType } from '../types';\nimport { AttributeCreateForm, AttributeUpdateForm } from './Attribute';\nimport { ProductDeleteButton, ProductImagesAddButton } from './buttons';\nimport { ProductForm, ProductUpdateForm } from './forms';\nimport { StaffProduct } from './models';\nimport { SizeAddForm, SizeUpdateForm } from './Size';\n\nexport type ProductUpdateTabProps = {\n  form: ReturnType<typeof useForm>;\n  instance: ReturnType<typeof StaffProduct>;\n  onUpdate: (data: any) => void;\n  categories: CategoryChoicesType;\n};\n\nexport const ProductUpdateInfoTab = (props: ProductUpdateTabProps) => {\n  const { form, instance, categories, onUpdate } = props;\n  const { errors } = form;\n  const PFormFields = (\n    <>\n      <ProductForm.NameField\n        label=\"Nom\"\n        error={errors.name}\n        text={`Ajoutez un nom qui décrit cet article. Les noms peuvent contenir jusqu’à 99 caractères.\\nNous recommandons 65 caractères au max.`}\n      />\n\n      <div className=\"d-grid grid-md-2 gap-1\">\n        <ProductForm.CategoryField label=\"Catégorie\" categories={categories} error={errors.category} />\n        <ProductForm.RetailPriceField label=\"Prix\" error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label=\"Pré-vente\" error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField\n          text=\"Ajouter un text de pré-vente.(facultatif)\"\n          error={errors.is_pre_sale_text}\n        />\n      )}\n\n      <ProductForm.OnSaleCheckboxField label=\"Cet article est en solde\" error={errors.is_on_sale} />\n      {form.values.is_on_sale && <ProductForm.SalePriceField label=\"Prix réduit\" error={errors.sale_price} />}\n\n      <ProductForm.DescriptionField\n        label=\"Description\"\n        error={errors.description}\n        text={`Ajoutez les caractéristiques uniques qui décrivent cet article.`}\n      />\n\n      <div className=\"my-4\">\n        <ProductForm.OosCheckboxField error={errors.is_oos} />\n      </div>\n\n      <div className=\"my-4\">\n        <ProductForm.IsExplicitCheckboxField error={errors.is_explicit} />\n      </div>\n    </>\n  );\n\n  return (\n    <Staff.Section>\n      <ProductUpdateForm\n        context={form}\n        {...{\n          instance,\n          fields: [\n            'name',\n            'category',\n            'description',\n            'retail_price',\n            'is_pre_sale',\n            'is_pre_sale_text',\n            'is_pre_sale_dt',\n            'is_on_sale',\n            'sale_price',\n            'is_oos',\n            'is_explicit',\n          ],\n          onSuccess: ({ data }) => onUpdate(data),\n        }}\n      >\n        <Staff.Section\n          border\n          title=\"Details\"\n          text=\"Modifier les informations de ce produit.\"\n          footer={\n            <div className=\"d-flex justify-content-center\">\n              <Form.Submit value=\"Sauvegarder\" className=\"btn-primary min-w-25\" />\n            </div>\n          }\n        >\n          {PFormFields}\n        </Staff.Section>\n      </ProductUpdateForm>\n\n      <Staff.Section border title=\"Seo\">\n        <ProductUpdateForm\n          context={form}\n          {...{\n            instance,\n            fields: ['meta_title', 'meta_description', 'meta_slug'],\n            onSuccess: ({ data }) => onUpdate(data),\n          }}\n        >\n          <MetaTitleField error={errors.meta_title} />\n          <MetaSlugField error={errors.meta_slug} />\n          <MetaDescriptionField error={errors.meta_description} />\n\n          <div className=\"d-flex justify-content-center\">\n            <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n          </div>\n        </ProductUpdateForm>\n      </Staff.Section>\n    </Staff.Section>\n  );\n};\n\nexport const ProductUpdateInventoryTab = (props: any) => {\n  const { instance, onUpdate } = props;\n  const [addAtr, setAddAtr] = React.useState(false);\n  const [addSize, setAddSize] = React.useState(false);\n\n  return (\n    <Staff.Section title=\"Inventory\">\n      <div className=\"d-grid grid-md-3 gap-1\">\n        <div className=\"span-md-2\">\n          <Staff.Section\n            title=\"Tailles\"\n            text=\"Ajouter des tailles\"\n            actions={\n              <Button onClick={() => setAddSize(!addSize)} className=\"btn-primary-3\">\n                Ajouter une taille\n              </Button>\n            }\n          >\n            {addSize && (\n              <Staff.Section text=\"Ajouter une taille\">\n                <SizeAddForm productInstance={instance} onSuccess={({ data }: any) => onUpdate(data)} />\n              </Staff.Section>\n            )}\n\n            {instance.sizes.map((size: any) => {\n              return (\n                <SizeUpdateForm\n                  data={size}\n                  productInstance={instance}\n                  onSuccess={({ data }: any) => onUpdate(data)}\n                  key={size.slug}\n                />\n              );\n            })}\n          </Staff.Section>\n\n          <Staff.Section\n            title=\"Attributs\"\n            actions={\n              <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n                Ajouter un attribut\n              </Button>\n            }\n          >\n            {addAtr && (\n              <Staff.Section text=\"Ajouter un attribut au produit.\">\n                <AttributeCreateForm productInstance={instance} onSuccess={({ data }: any) => onUpdate(data)} />\n              </Staff.Section>\n            )}\n\n            {instance.attributes.map((attr: any) => (\n              <div className=\"mb-1\" key={attr.slug}>\n                <AttributeUpdateForm\n                  data={attr}\n                  productInstance={instance}\n                  onSuccess={({ data }: any) => onUpdate(data)}\n                />\n              </div>\n            ))}\n          </Staff.Section>\n        </div>\n\n        <div className=\"mt-3\">{/* <ProductSupplierData {...{ instance }} /> */}</div>\n      </div>\n    </Staff.Section>\n  );\n};\n\nexport const ProductUpdateSettingsTab = (props: any) => {\n  const { instance, listRes, navigate } = props;\n\n  return (\n    <Staff.Section title=\"Settings\">\n      <Staff.Section\n        title=\"Supprimer ce produit\"\n        actions={\n          <ProductDeleteButton\n            {...{ instance }}\n            onSuccess={() => {\n              listRes.refresh();\n              return navigate(props.back);\n            }}\n            onError={(res) => {\n              if (res.status === 404) navigate('../');\n            }}\n          />\n        }\n      />\n    </Staff.Section>\n  );\n};\n\nexport const ProductUpdateMediaTab = (props: any) => {\n  const { instance, onUpdate } = props;\n  const { cover_data } = instance;\n  return (\n    <Staff.Section\n      title=\"Media\"\n      actions={<ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />}\n    >\n      <div className=\"d-grid grid-md-3 grid-lg-4 gap-2\">\n        <CoverCard\n          {...props}\n          img={StaffImg(cover_data)}\n          onDeleteSuccess={() => onUpdate({ cover_data: null, cover: null })}\n        />\n\n        {instance.images_data.map((image: ImgType) => {\n          const img = StaffImg(image);\n          const swapCover = () => instance.swapCover(img.slug).then(({ data }: any) => onUpdate(data));\n          return (\n            <ImageCard\n              {...props}\n              img={img}\n              actions={<Staff.Button onClick={swapCover}>Set as cover</Staff.Button>}\n              onDeleteSuccess={() =>\n                onUpdate({\n                  images_data: instance.images_data.filter((i: any) => i.slug !== img.slug),\n                  images: instance.images.filter((i: any) => i !== img.slug),\n                })\n              }\n              key={img.slug}\n            />\n          );\n        })}\n      </div>\n    </Staff.Section>\n  );\n};\n\nexport const getImageComponent = (view: string) => {\n  switch (view) {\n    case 'mobile':\n      return StaffImg.Mobile;\n    case 'square':\n      return StaffImg.Square;\n    case 'thumb':\n      return StaffImg.Thumb;\n    case 'picture':\n      return StaffImg.Picture;\n    default:\n      return StaffImg.Image;\n  }\n};\n\nconst CoverCard = (props: any) => {\n  const { img, onUpdate, instance } = props;\n  const form = useForm({ view: 'src' });\n\n  if (!img.slug)\n    return (\n      <div className=\"p-cover-add-btn d-flex align-items-center justify-content-center flex-column text-center border-1 rounded p-3\">\n        <p className=\"text-sm text-muted mb-3\">Ce produit n'a pas d'image principale</p>\n        <StaffImgAddButton\n          onSuccess={({ data }: any) => {\n            instance\n              .update({ cover: data.slug })\n              .then(({ data }: any) => onUpdate(data))\n              .catch((err: any) => {});\n          }}\n          label=\"Ajouter une image\"\n          className=\"btn-primary-3 btn-md\"\n        />\n      </div>\n    );\n\n  const Image = getImageComponent(form.values.view);\n  return (\n    <Form context={form} className=\"p-cover-update-form\">\n      <Staff.Section\n        border\n        title={<ImgDeleteButton {...props} img={img} />}\n        actions={<StaffImgViewSelect required name=\"view\" />}\n        className=\"p-image-card\"\n      >\n        <StaffImgUpdateButton\n          instance={img}\n          field={form.values.view}\n          onSuccess={({ data }: any) => onUpdate({ cover: data.slug, cover_data: data })}\n        >\n          <Image {...img} />\n        </StaffImgUpdateButton>\n      </Staff.Section>\n    </Form>\n  );\n};\n\nconst ImageCard = ({ img, actions, ...props }: any) => {\n  return (\n    <Staff.Section border title={<ImgDeleteButton {...props} img={img} />} actions={actions} className=\"p-image-card\">\n      <StaffImg.Image {...img} />\n    </Staff.Section>\n  );\n};\n\nconst ImgDeleteButton = ({ img, onDeleteSuccess }: any) =>\n  img && img.slug ? (\n    <StaffImgDeleteButton onSuccess={onDeleteSuccess} instance={img} className=\"btn-danger-3\">\n      <Icons.Trash />\n    </StaffImgDeleteButton>\n  ) : null;\n"],"names":["formFields","formDefaultValues","retail_price","is_pre_sale","sale_price","is_on_sale","is_published","mapData2Values","data","values","forEach","f","value","ProductStaffUpdateView","props","back","prodSlug","useParams","useSearchParams","params","navigate","useNavigate","form","useForm","useRequest","StaffProduct","slug","retrieve","refreshDeps","onSuccess","setValues","onError","response","status","res","setRes","loading","request","r","Response","isSuccess","instance","updateData","d","emitter","tab","get","tabsProps","onUpdate","categories","addForwardSlash","title","export","requiredPerms","className","QButtons","actions","err","handleError","index","target","AttributeUpdateForm","productInstance","name","context","onSubmit","e","preventDefault","patchAttribute","then","catch","AttrNameField","error","errors","AttrValueField","AttributeDeleteButton","AttributeCreateForm","postAttribute","label","text","placeholder","rest","required","maxLength","minLength","renderHeader","renderFooter","setOpen","onClick","deleteAttribute","render","ProductUpdateInfoTab","PFormFields","category","is_pre_sale_text","description","is_oos","is_explicit","fields","border","footer","meta_title","meta_slug","meta_description","ProductUpdateInventoryTab","React","addAtr","setAddAtr","addSize","setAddSize","Size","sizes","map","size","attributes","attr","ProductUpdateSettingsTab","listRes","refresh","ProductUpdateMediaTab","cover_data","CoverCard","img","StaffImg","onDeleteSuccess","cover","images_data","image","ImageCard","swapCover","filter","i","images","key","getImageComponent","view","update","Image","ImgDeleteButton","field"],"sourceRoot":""}