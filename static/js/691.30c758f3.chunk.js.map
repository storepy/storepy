{"version":3,"file":"static/js/691.30c758f3.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/category/forms.tsx","../../../../shopy/shopy-storejs/src/category/views.List.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { isRequired as isR } from '@miq/utiljs';\nimport { FormProps, SelectFieldProps, TFormCallbackProps, TFormUpdateProps } from '@miq/formjs';\nimport Form, { DescriptionField, NameField, TextFieldProps, useForm } from '@miq/formjs';\n\nimport { StaffCategory } from './utils';\nimport { CategoryChoicesType } from '../types';\n\nexport const CategoryCreateForm: React.FC<TFormCallbackProps> = (props) => {\n  const form = useForm({ name: '' });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return StaffCategory({})\n      .create(form.values)\n      .then((res) => props?.onSuccess?.(res))\n      .catch((err) => {\n        form.handleError(err);\n        props?.onFailure?.(err);\n      });\n  };\n  return (\n    <CategoryForm context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <CategoryForm.NameField error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value=\"Save category\" className=\"btn btn-primary\" />\n      </div>\n    </CategoryForm>\n  );\n};\n\ninterface ICategoryUpdateFormProps extends TFormUpdateProps {\n  instance: ReturnType<typeof StaffCategory>;\n  categories?: CategoryChoicesType;\n  onWillSubmit?: () => void;\n  fields: string[];\n}\n\nexport const CategoryUpdateForm: React.FC<ICategoryUpdateFormProps> = ({\n  instance = isR('Category instance'),\n  categories,\n  fields = [],\n  children,\n  ...props\n}) => {\n  const { onSuccess, onError, onWillSubmit, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return (\n    <CategoryForm {...rest} onSubmit={handleSubmit}>\n      {fields.includes('parent') && categories && (\n        <CategoryForm.ParentField\n          categories={categories}\n          label=\"Catégorie mère\"\n          error={context?.errors?.parent}\n          // text={`Ajoutez un nom qui décrit cette catégorie.\\nNous recommandons 65 caractères au max.`}\n        />\n      )}\n\n      {fields.includes('name') && (\n        <CategoryForm.NameField label=\"Nom\" error={context?.errors?.name} text={`65 caractères au max.`} />\n      )}\n\n      {fields.includes('description') && (\n        <CategoryForm.DescriptionField\n          label=\"Description\"\n          error={context?.errors?.description}\n          text={`Décrivez cet catégorie.`}\n        />\n      )}\n\n      {fields.includes('position') && (\n        <CategoryForm.PositionField\n          label=\"Position\"\n          error={context?.errors?.position}\n          // text={`Décrivez cet ca`}\n        />\n      )}\n      {children}\n    </CategoryForm>\n  );\n};\n\nexport const CategoryForm = (props: FormProps) => <Form {...props} />;\n\nCategoryForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez le nom de la catégorie ...\" {...props} required />\n);\n\nCategoryForm.DescriptionField = (props: TextFieldProps) => <DescriptionField {...props} />;\n\nCategoryForm.ParentField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} name=\"parent\" nullValue={{ label: 'Aucune ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nCategoryForm.PositionField = ({ label, error, ...props }: TextFieldProps) => (\n  <Form.Field {...{ label, error }}>\n    <Form.Text name=\"position\" type=\"number\" min={0} {...props} />\n  </Form.Field>\n);\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { ResultsResponse, useRequest } from '@miq/hookjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { ViewSection, Icons, Pagination } from '@miq/componentjs';\n\nimport type { TCategory } from '../types';\n\nimport { PublishedIcon } from '../components';\n\nimport { StaffCategory } from './utils';\nimport { CategoryCreateForm, CategoryUpdateForm } from './forms';\n\nexport default function CategoryStaffIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, updateItem } = useRequest(() => StaffCategory({}).list({ params: { page } }), {\n    refreshDeps: [page],\n  });\n\n  const [isAdding, setAdding] = React.useState(false);\n\n  const r = new ResultsResponse<TCategory>(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Catégories\"\n      back=\"/staff/store/\"\n      actions={\n        <Staff.Button\n          onClick={() => setAdding(!isAdding)}\n          className=\"btn-primary-3\"\n          title=\"Add a new category\"\n          requiredPerms={['store.add_category']}\n        >\n          Ajouter\n        </Staff.Button>\n      }\n      requiredPerms={['store.view_category']}\n      mainCN=\"miq-container\"\n    >\n      {isAdding && (\n        <div className=\"miq-container center\">\n          <Staff.Section title=\"Add a category\" requiredPerms={['store.add_category']} border>\n            <CategoryCreateForm onSuccess={({ data }: any) => navigate(`${data.slug}/`)} />\n          </Staff.Section>\n        </div>\n      )}\n\n      {r.items.length === 0 && !isAdding && (\n        <div className=\"text-center p-staff-list-empty py-3 my-3\">\n          <p className=\"fw-light text-md\">Ajouter une catégorie pour commencer</p>\n\n          <div className=\"my-4\">\n            <Staff.Button\n              onClick={() => setAdding(!isAdding)}\n              requiredPerms={['store.add_category']}\n              className=\"btn btn-primary btn-md\"\n            >\n              Add a category\n            </Staff.Button>\n          </div>\n        </div>\n      )}\n\n      {r.items\n        .sort((a, b) => (a.position! > b.position! ? 1 : -1))\n        .map((item) => (\n          <CategoryStaffListItem\n            item={item}\n            onUpdate={(r) => {\n              updateItem(r.data);\n            }}\n            key={item.slug}\n          />\n        ))}\n\n      <div>\n        <Pagination {...r.pagination} component={Staff.Link} to />\n      </div>\n    </Staff.View>\n  );\n}\n\nfunction CategoryStaffListItem({ item, ...props }: { item: TCategory; onUpdate: (payload: any) => void }) {\n  const [open, setOpen] = React.useState(false);\n  const instance = StaffCategory(item);\n\n  const form = useForm({\n    name: instance?.name || '',\n    description: instance?.description || '',\n    position: instance?.position || 0,\n  });\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div onClick={() => setOpen(!open)} className=\"d-flex align-items-center\">\n          <div style={{ minWidth: 48, width: 48, height: 48 }}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1\">\n            <div className=\"text-ellipsis\">\n              <span className=\"me-1\">{form.values.name}</span>\n\n              <PublishedIcon show={instance.is_published} />\n            </div>\n\n            <div className=\"text-sm\">\n              <span>Total: {instance.products_count} </span>\n              <span>\n                ({instance.published_count}/<span className=\"text-muted\">{instance.draft_count}</span>)\n              </span>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div>\n          <Staff.Link\n            to={`${instance.slug}/`}\n            className=\"btn btn-square btn-primary-3\"\n            requiredPerms={['store.change_category']}\n          >\n            <Icons.Edit />\n          </Staff.Link>\n        </div>\n      }\n    >\n      {open && (\n        <div className=\"\">\n          <CategoryUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'description', 'position']}\n            onSuccess={props.onUpdate}\n          >\n            <div className=\"d-flex justify-content-center\">\n              <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n            </div>\n          </CategoryUpdateForm>\n        </div>\n      )}\n    </ViewSection>\n  );\n}\n"],"names":["CategoryCreateForm","props","form","useForm","name","CategoryForm","context","onSubmit","e","preventDefault","StaffCategory","create","values","then","res","onSuccess","catch","err","handleError","onFailure","className","NameField","error","errors","value","CategoryUpdateForm","instance","isR","categories","fields","children","onError","onWillSubmit","rest","fd","forEach","field","update","includes","ParentField","label","parent","text","DescriptionField","description","PositionField","position","placeholder","required","nullValue","items","map","cat","key","type","min","CategoryStaffIndexView","navigate","useNavigate","useSearchParams","page","get","useRequest","list","params","refreshDeps","updateItem","React","isAdding","setAdding","r","ResultsResponse","isSuccess","title","back","actions","onClick","requiredPerms","mainCN","border","data","slug","length","sort","a","b","item","CategoryStaffListItem","onUpdate","pagination","component","Staff","to","open","setOpen","style","minWidth","width","height","src","cover_data","show","is_published","products_count","published_count","draft_count"],"sourceRoot":""}