{"version":3,"file":"static/js/691.46e2a8f9.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/category/forms.tsx","../../../../shopy/shopy-storejs/src/category/views.List.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { isRequired as isR } from '@miq/utiljs';\nimport { FormProps, TFormCallbackProps, TFormUpdateProps } from '@miq/formjs';\nimport Form, { DescriptionField, NameField, TextFieldProps, useForm } from '@miq/formjs';\n\nimport { StaffCategory } from './utils';\n\nexport const CategoryCreateForm: React.FC<TFormCallbackProps> = (props) => {\n  const form = useForm({ name: '' });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return StaffCategory()\n      .create(form.values)\n      .then((res) => props?.onSuccess?.(res))\n      .catch((err) => {\n        form.handleError(err);\n        props?.onFailure?.(err);\n      });\n  };\n  return (\n    <CategoryForm context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <CategoryForm.NameField error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value=\"Save category\" className=\"btn btn-primary\" />\n      </div>\n    </CategoryForm>\n  );\n};\n\ninterface ICategoryUpdateFormProps extends TFormUpdateProps {\n  instance: ReturnType<typeof StaffCategory>;\n  onWillSubmit?: () => void;\n  fields: string[];\n}\n\nexport const CategoryUpdateForm: React.FC<ICategoryUpdateFormProps> = ({\n  instance = isR('Category instance'),\n  fields = [],\n  children,\n  ...props\n}) => {\n  const { onSuccess, onError, onWillSubmit, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return (\n    <CategoryForm {...rest} onSubmit={handleSubmit}>\n      {fields.includes('name') && (\n        <CategoryForm.NameField\n          label=\"Nom de la catégorie\"\n          error={context?.errors?.name}\n          text={`Ajoutez un nom qui décrit cette catégorie.\\nNous recommandons 65 caractères au max.`}\n        />\n      )}\n\n      {fields.includes('description') && (\n        <CategoryForm.DescriptionField\n          label=\"Description\"\n          error={context?.errors?.description}\n          text={`Décrivez cet catégorie.`}\n        />\n      )}\n\n      {fields.includes('position') && (\n        <CategoryForm.PositionField\n          label=\"Position\"\n          error={context?.errors?.position}\n          // text={`Décrivez cet ca`}\n        />\n      )}\n      {children}\n    </CategoryForm>\n  );\n};\n\nexport const CategoryForm = (props: FormProps) => <Form {...props} />;\n\nCategoryForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez le nom de la catégorie ...\" {...props} required />\n);\n\nCategoryForm.DescriptionField = (props: TextFieldProps) => <DescriptionField {...props} />;\nCategoryForm.PositionField = ({ label, error, ...props }: TextFieldProps) => (\n  <Form.Field {...{ label, error }}>\n    <Form.Text name=\"position\" type=\"number\" min={0} {...props} />\n  </Form.Field>\n);\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { ResultsResponse, useRequest } from '@miq/hookjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { ViewSection, Icons, Pagination } from '@miq/componentjs';\n\nimport type { TCategory } from '../types';\n\nimport { PublishedIcon } from '../components';\n\nimport { StaffCategory } from './utils';\nimport { CategoryCreateForm, CategoryUpdateForm } from './forms';\n\nexport default function CategoryStaffIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, updateItem } = useRequest(() => StaffCategory({}).list({ params: { page } }), {\n    refreshDeps: [page],\n  });\n\n  const [isAdding, setAdding] = React.useState(false);\n\n  const r = new ResultsResponse<TCategory>(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Catégories\"\n      back=\"/staff/store/\"\n      actions={\n        <Staff.Button\n          onClick={() => setAdding(!isAdding)}\n          className=\"btn-primary-3\"\n          title=\"Add a new category\"\n          requiredPerms={['store.add_category']}\n        >\n          Ajouter\n        </Staff.Button>\n      }\n      requiredPerms={['store.view_category']}\n    >\n      {isAdding && (\n        <div className=\"miq-container center\">\n          <Staff.Section title=\"Add a category\" requiredPerms={['store.add_category']} border>\n            <CategoryCreateForm onSuccess={({ data }: any) => navigate(data.slug)} />\n          </Staff.Section>\n        </div>\n      )}\n\n      {r.items.length === 0 && !isAdding && (\n        <div className=\"text-center p-staff-list-empty py-3 my-3\">\n          <p className=\"fw-light text-md\">Ajouter une catégorie pour commencer</p>\n\n          <div className=\"my-4\">\n            <Staff.Button\n              onClick={() => setAdding(!isAdding)}\n              requiredPerms={['store.add_category']}\n              className=\"btn btn-primary btn-md\"\n            >\n              Add a category\n            </Staff.Button>\n          </div>\n        </div>\n      )}\n\n      {r.items\n        .sort((a, b) => (a.position! > b.position! ? 1 : -1))\n        .map((item) => (\n          <CategoryStaffListItem\n            item={item}\n            onUpdate={(r) => {\n              updateItem(r.data);\n            }}\n            key={item.slug}\n          />\n        ))}\n\n      <div>\n        <Pagination {...r.pagination} component={Staff.Link} to />\n      </div>\n    </Staff.View>\n  );\n}\n\nfunction CategoryStaffListItem({ item, ...props }: { item: TCategory; onUpdate: (payload: any) => void }) {\n  const [open, setOpen] = React.useState(false);\n  const instance = StaffCategory(item);\n\n  const form = useForm({\n    name: instance?.name || '',\n    description: instance?.description || '',\n    position: instance?.position || 0,\n  });\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div onClick={() => setOpen(!open)} className=\"d-flex align-items-center\">\n          <div style={{ minWidth: 48, width: 48, height: 48 }}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1\">\n            <div className=\"text-ellipsis\">\n              <span className=\"me-1\">{form.values.name}</span>\n\n              <PublishedIcon show={instance.is_published} />\n            </div>\n\n            <div className=\"text-sm\">\n              <span>Total: {instance.products_count} </span>\n              <span>\n                ({instance.published_count}/<span className=\"text-muted\">{instance.draft_count}</span>)\n              </span>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div>\n          <Staff.Link\n            to={`${instance.slug}/`}\n            className=\"btn btn-square btn-primary-3\"\n            requiredPerms={['store.change_category']}\n          >\n            <Icons.Edit />\n          </Staff.Link>\n        </div>\n      }\n    >\n      {open && (\n        <div className=\"\">\n          <CategoryUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'description', 'position']}\n            onSuccess={props.onUpdate}\n          >\n            <div className=\"d-flex justify-content-center\">\n              <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n            </div>\n          </CategoryUpdateForm>\n        </div>\n      )}\n    </ViewSection>\n  );\n}\n"],"names":["CategoryCreateForm","props","form","useForm","name","CategoryForm","context","onSubmit","e","preventDefault","StaffCategory","create","values","then","res","onSuccess","catch","err","handleError","onFailure","className","NameField","error","errors","value","CategoryUpdateForm","instance","isR","fields","children","onError","onWillSubmit","rest","fd","forEach","field","update","includes","label","text","DescriptionField","description","PositionField","position","placeholder","required","type","min","CategoryStaffIndexView","navigate","useNavigate","useSearchParams","page","get","useRequest","list","params","refreshDeps","updateItem","React","isAdding","setAdding","r","ResultsResponse","isSuccess","title","back","actions","onClick","requiredPerms","border","data","slug","items","length","sort","a","b","map","item","CategoryStaffListItem","onUpdate","pagination","component","Staff","to","open","setOpen","style","minWidth","width","height","src","cover_data","show","is_published","products_count","published_count","draft_count"],"sourceRoot":""}