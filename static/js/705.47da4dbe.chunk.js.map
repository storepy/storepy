{"version":3,"file":"static/js/705.47da4dbe.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/product/index.tsx","../../../../shopy/shopy-storejs/src/supplier/forms.tsx","../../../../shopy/shopy-storejs/src/supplier/SupplierProductList.tsx","../../../../shopy/shopy-storejs/src/supplier/views.OrderUpdate.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport './index.scss';\n\nexport * as ProductFields from './forms/fields';\nexport { ProductListFilterForm } from './forms/form.PListFilter';\n\nconst ProductUpdateRoute = React.lazy(() => import('./views.Update'));\nconst ProductCreateView = React.lazy(() => import('./views.Create'));\nconst ProductListView = React.lazy(() => import('./views.List'));\n\nexport default function ProductRoutes() {\n  return (\n    <Routes>\n      <Route path=\":prodSlug/\" element={<ProductUpdateRoute />} />\n      <Route path=\"new\" element={<ProductCreateView />} />\n      <Route index element={<ProductListView />} />\n    </Routes>\n  );\n}\n\n//\n//\n//\n\nexport * from './models';\nexport * from './utils';\nexport * from './buttons';\n","import * as React from 'react';\nimport Form, {\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  useForm,\n  TextFieldProps,\n  CheckboxFieldProps,\n  SelectFieldProps,\n  TextChoicesType,\n} from '@miq/formjs';\nimport { ProductForm } from '../product/forms';\nimport { TProductStageSelectFieldProps } from '../product/forms/fields';\n\nimport { SupplierOrder } from './models';\n\ninterface ISupplierOrderUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof SupplierOrder>;\n  fields: string[];\n}\n\nexport const SupplierOrderUpdateForm: React.FC<ISupplierOrderUpdateFormProps> = ({ instance, fields, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <SupplierOrderForm {...rest} onSubmit={handleSubmit} />;\n};\n\n//#region ==================================== SUPPLIER ORDER FORM\n\nexport const SupplierOrderForm = (props: FormProps) => <Form {...props} />;\n\nSupplierOrderForm.NameField = (props: TextFieldProps) => {\n  const { label = 'Name', text = 'Write a name to help remember your order.', error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Nom\" maxLength={99} {...rest} name=\"name\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.OrderIDField = (props: TextFieldProps) => {\n  const { label = 'Order ID', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Order ID\" maxLength={99} {...rest} name=\"order_id\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.IsPaidField = (props: CheckboxFieldProps) => {\n  const { label = 'Payé', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error} checkbox>\n      <Form.Checkbox {...rest} name=\"is_paid\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.TotalCostField = (props: TextFieldProps) => {\n  const { label = 'Coût total', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text min=\"0\" step=\"0.01\" {...rest} required type=\"number\" name=\"total_cost\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.CurrencyField = (props: SelectFieldProps & { currencies: TextChoicesType }) => {\n  const { label, text = 'Select the supplier currency.', error, currencies, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"currency\" nullValue={{ label: 'Sélectionnez une monnaie ...' }}>\n        {currencies?.map((curr) => {\n          return <Form.Option {...curr} key={curr.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.SupplierField = (props: SelectFieldProps & { suppliers: TextChoicesType }) => {\n  const { label, text = 'Select the supplier.', error, suppliers, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"supplier\" nullValue={{ label: 'Sélectionnez le supplier ...' }}>\n        {suppliers?.map((supplier) => {\n          return <Form.Option {...supplier} key={supplier.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.StageSelectField = (props: TProductStageSelectFieldProps) => (\n  <ProductForm.StageSelectField required={false} {...props} />\n);\n\n//#endregion ==================================== SUPPLIER ORDER FORM\n\ninterface ISupplierOrderProductAddFormProps extends IFormCallbackProps {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  children?: React.ReactNode;\n}\n\nexport const SupplierOrderProductAddForm = ({ children, ...props }: ISupplierOrderProductAddFormProps) => {\n  const { orderInstance, onSuccess, onError } = props;\n  const supplier = orderInstance?.supplier?.toLowerCase();\n\n  const form = useForm({ supplier_name: supplier, url: '' });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const { url } = form.values;\n\n    const handleSuccess = (res: any) => {\n      setLoading(false);\n      form.setValue('url', '');\n      return onSuccess?.(res);\n    };\n\n    const handleError = (err: any) => {\n      form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n      setLoading(false);\n      return onError?.(err);\n    };\n\n    const urlErrMsg = `Invalid Url: does not match supplier ${orderInstance.supplier}`;\n\n    switch (supplier) {\n      case 'fnova':\n        if (!url.includes('fashionnova')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postFnova(url).then(handleSuccess).catch(handleError);\n      case 'plt':\n        if (!url.includes('prettylittlething')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postPlt(url).then(handleSuccess).catch(handleError);\n\n      default:\n        if (!url.includes(supplier)) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postShein(url).then(handleSuccess).catch(handleError);\n    }\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n      <Form.Field error={form.errors.url}>\n        <div className=\"d-flex flex-column flex-md-row align-items-center\">\n          <Form.Text\n            required\n            autoFocus\n            name=\"url\"\n            type=\"url\"\n            placeholder={`Add ${supplier} product source url ...`}\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <div className=\"mt-1 mt-md-0\">\n            <Form.Submit value=\"Add product\" className=\"btn btn-primary-3\" disabled={isLoading} />\n          </div>\n        </div>\n      </Form.Field>\n\n      {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n    </Form>\n  );\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport './supplier-product-list.scss';\n// import { TLang } from '@miq/utiljs';\n// import pflang from '../Product/forms/lang';\n\nimport Staff from '@miq/staffjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { useDocumentTitle } from '@miq/hookjs';\nimport { Button, HorizontalScrollGridLayout, Icons, Loading, Pagination, ViewSection } from '@miq/componentjs';\n\nimport { PSTitle } from '../product/components';\nimport { StaffProduct, useProductListRequest, ProductDeleteButton } from '../product';\nimport { ProductForm, ProductQuickUpdateForm } from '../product/forms';\nimport { CategoryChoicesType, TProduct, TProductStageData } from '../types';\n\nimport { SupplierOrder } from './models';\n\n// const i18n = (k: keyof TLang) => window.i18n(pflang, k);\n\nexport type SupplierProductListProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nexport default function SupplierProductList({\n  orderInstance,\n  refreshOrder,\n  categories,\n  stages,\n}: SupplierProductListProps) {\n  useDocumentTitle('Supplier products');\n  const { ordSlug } = useParams();\n  const { res = { data: { results: [] } }, loading, refresh } = useProductListRequest(ordSlug);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const form = useForm({ category: '', is_pre_sale: '' });\n\n  if (loading) return <Loading />;\n\n  const isSelected = selected.length !== 0;\n\n  return (\n    <Staff.Section\n      actions={\n        isSelected && (\n          <>\n            <span className=\"p-1\" onClick={() => setSelected([])} style={{ cursor: 'pointer' }}>\n              [x]\n            </span>\n          </>\n        )\n      }\n      footer={<Pagination {...res.data} component={Staff.NavLink} to />}\n      className=\"supplier-p-list\"\n    >\n      {res.data?.results.length ? (\n        <>\n          {isSelected && (\n            <div className=\"d-grid grid-2 grid-md-4 gap-2\" style={{ position: 'sticky', top: 0, zIndex: 1000 }}>\n              <div className=\"\">\n                <Form\n                  context={form}\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    const { category } = form.values;\n                    if (!category) return;\n\n                    orderInstance\n                      .updateCategories(category, selected)\n                      .then((r) => {\n                        refresh();\n                        form.setValue('category', '');\n                        setSelected([]);\n                      })\n                      .catch((err) => form.handleError(err));\n                  }}\n                >\n                  <div className=\"d-flex\">\n                    {categories && <ProductForm.CategoryField categories={categories} error={form.errors.category} />}\n                  </div>\n\n                  <Form.Submit className=\"btn-primary\">Update</Form.Submit>\n                </Form>\n              </div>\n\n              <div>\n                <Button\n                  className=\"me-1\"\n                  onClick={() => {\n                    orderInstance\n                      .markPresale(selected)\n                      .then(() => {\n                        refresh();\n                      })\n                      .catch((err) => form.handleError(err));\n                  }}\n                >\n                  Mark presale\n                </Button>\n\n                <Button\n                  onClick={() => {\n                    orderInstance\n                      .unmarkPresale(selected)\n                      .then(() => {\n                        refresh();\n                      })\n                      .catch((err) => form.handleError(err));\n                  }}\n                >\n                  unmark presale\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {res.data.results.map((item: TProduct) => (\n            <SupplierProductListItem\n              {...{ orderInstance, categories, selected, setSelected, refreshOrder, stages }}\n              instance={StaffProduct(item)}\n              key={item.slug}\n            />\n          ))}\n        </>\n      ) : null}\n    </Staff.Section>\n  );\n}\n\ntype TSPListItemProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  instance: ReturnType<typeof StaffProduct>;\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nconst ItemCheckBox = ({ instance, selected, setSelected }: TSPListItemProps) => (\n  <input\n    type=\"checkbox\"\n    name=\"selected\"\n    className=\"me-2\"\n    checked={selected.includes(instance.slug!)}\n    onChange={({ target }) => {\n      const { checked } = target;\n      if (checked) setSelected([...selected, instance.slug!]);\n      else setSelected((selected) => selected.filter((i) => i !== instance.slug));\n    }}\n  />\n);\n\nconst SupplierProductListItem = (props: TSPListItemProps) => {\n  // Used for deleted items\n  const [hide, setHide] = React.useState<boolean>(false);\n\n  const { instance, categories } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  if (hide) return null;\n\n  const { supplier_item, stage } = instance;\n  const { orderInstance, stages = [] } = props;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-items-center\">\n          <ItemCheckBox {...props} />\n\n          <div style={{ minWidth: 48, width: 48, height: 'auto' }} onClick={() => setOpen(!open)}>\n            <Staff.Img.Thumb slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"d-grid mx-1 text-sm\">\n            <PSTitle product={instance} className=\"\" />\n\n            <div className=\"\">\n              <div>\n                {instance.is_on_sale && instance.sale_price && (\n                  <span className=\"\">\n                    {instance.sale_price} {`<-`}{' '}\n                  </span>\n                )}\n                <span className=\"\">{instance.retail_price}</span>\n                <span className=\"text-muted\">\n                  {' | '}\n                  {supplier_item?.cost} {orderInstance.currency}\n                </span>\n              </div>\n\n              <div className=\"\">\n                {instance.category_data?.name || ' - '}\n                <span className=\"text-muted\">\n                  {' | '}\n                  {supplier_item?.category || '-'}\n                </span>\n              </div>\n\n              {stageData && <span className=\"text-muted\">{stageData.label}</span>}\n\n              <a className=\"ms-1\" href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex flex-column-reverse flex-md-row\">\n          <div className=\"\">\n            <ProductDeleteButton\n              instance={instance}\n              onSuccess={() => {\n                setHide(true);\n                props?.refreshOrder?.();\n              }}\n              className=\"btn-square\"\n            />\n          </div>\n\n          <div className=\"ms-md-1 mb-1\">\n            <Staff.Link to={`./${instance.slug}/`} className=\"btn btn-primary-3 btn-square\">\n              <Icons.Edit />\n            </Staff.Link>\n          </div>\n        </div>\n      }\n      className=\"suppier-p-list-item bg-white\"\n    >\n      {open && (\n        <HorizontalScrollGridLayout className=\"form-tab no-scroll-bar gap-2\">\n          <ProductQuickUpdateForm instance={instance} categories={categories} orderSlug={orderInstance?.slug} />\n\n          <div className=\"\">\n            <div className=\"mb-1\">\n              {`${supplier_item?.item_id ? <span className=\"\">Item ID: {supplier_item?.item_id}</span> : ''}`}\n            </div>\n            <ul>\n              {supplier_item?.category && (\n                <li className=\"mb-1\">\n                  <div className=\"text-sm\">Supplier Category</div>\n                  <div className=\"text-muted\">{supplier_item?.category}</div>\n                </li>\n              )}\n              <li className=\"mb-1\">\n                <div className=\"text-sm\">FOB Cost({orderInstance.currency})</div>\n                <div className=\"text-muted\">{supplier_item?.cost}</div>\n              </li>\n\n              {supplier_item?.url && (\n                <li className=\"\">\n                  <a href={supplier_item?.url} target=\"_blank\" className=\"text-underline\" rel=\"noopener noreferrer\">\n                    View supplier product page\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        </HorizontalScrollGridLayout>\n      )}\n    </ViewSection>\n  );\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useRequest } from '@miq/hookjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { Icons, Loading, ButtonProps } from '@miq/componentjs';\n\nimport { TSupplierOrder } from '../types';\nimport { ProductListFilterForm } from '../product';\n\nimport { SupplierOrder } from './models';\nimport SupplierProductList from './SupplierProductList';\nimport { SupplierOrderForm, SupplierOrderProductAddForm, SupplierOrderUpdateForm } from './forms';\n\nconst formFields: { [key: string]: any } = {\n  name: '',\n  order_id: '',\n  stage: '',\n  currency: 'USD',\n  supplier: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nexport const mapDataToValues = (data: any = {}): TSupplierOrder => {\n  const values: any = {};\n  Object.keys(formFields).forEach((k) => {\n    values[k] = data[`${k}`] || formFields[`${k}`];\n  });\n  return values;\n};\n\nexport default function OrderUpdateView() {\n  const { ordSlug } = useParams();\n\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { suppliers, currencies } = React.useContext(SharedDataCtx) as any;\n\n  const { setValues } = form;\n  const {\n    res,\n    loading,\n    setLoading,\n    setRes: setOrder,\n    refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => {\n      document.title = `${res?.data?.name} - Update supplier order`;\n      setValues(mapDataToValues(res.data));\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  // console.log(r.data.stages);\n\n  if (!instance.supplier || !instance.currency)\n    return (\n      <Staff.View title=\"Modifier une commande\" back=\"/staff/store/orders/\">\n        <Staff.Section className=\"d-flex justify-content-center mt-4\">\n          <SupplierOrderUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'currency', 'supplier']}\n            onSuccess={(res) => setOrder(res)}\n          >\n            <SupplierOrderForm.NameField required label=\"Nom\" error={form.errors.currency} />\n            <SupplierOrderForm.SupplierField\n              required\n              label=\"Supplier\"\n              suppliers={suppliers}\n              error={form.errors.supplier}\n            />\n            <SupplierOrderForm.CurrencyField\n              required\n              label=\"Supplier Currency\"\n              currencies={currencies}\n              error={form.errors.currency}\n            />\n\n            <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n          </SupplierOrderUpdateForm>\n        </Staff.Section>\n      </Staff.View>\n    );\n\n  return (\n    <Staff.View\n      title={form.values.name}\n      back=\"/staff/store/orders/\"\n      actions={\n        <Staff.NavLink to=\"settings/\">\n          <Icons.Gear />\n        </Staff.NavLink>\n      }\n    >\n      <div className=\"d-flex flex-column flex-xl-row\">\n        <div className=\"w-100\">\n          <Staff.Section header={<Header {...{ instance, setLoading, setOrder, categories: r?.data?.categories }} />}>\n            {loading ? (\n              <Loading icon />\n            ) : (\n              <SupplierProductList\n                orderInstance={instance}\n                categories={r?.data?.categories}\n                stages={r?.data?.stages}\n                refreshOrder={refreshOrder}\n              />\n            )}\n          </Staff.Section>\n        </div>\n\n        <div className=\"min-w-35 ps-md-1\">\n          <DetailDisplaySection {...{ loading, instance }} />\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst DetailDisplaySection = ({\n  loading,\n  instance,\n}: {\n  loading: boolean;\n  instance: ReturnType<typeof SupplierOrder>;\n}) => {\n  return (\n    <Staff.Section\n      border\n      className=\"bg-white mb-1\"\n      title={`Order Details${!loading && ` (${instance.products?.length})`}`}\n      text={`Supplier: ${instance.supplier} | Currency: ${instance.currency}`}\n    >\n      <div className=\"mb-2\">\n        Categories\n        <ul>\n          {instance?.by_categories\n            ?.filter((i) => i?.category__name)\n            ?.map(({ category__name: name, ...i }) => (\n              <DetailDisplaySection.Li title={name} key={name}>\n                : {i.count}\n              </DetailDisplaySection.Li>\n            ))}\n        </ul>\n      </div>\n\n      <ul className=\"mb-3\">\n        <DetailDisplaySection.Li title=\"Average cost: \">\n          {instance.avg_cost} {instance.currency}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Total cost: \">\n          {`${instance.total_cost || instance?.items_cost?.amountWithSymbol} ${instance.currency}`}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Est. revenue: \">{instance?.items_revenue?.amount}</DetailDisplaySection.Li>\n      </ul>\n    </Staff.Section>\n  );\n};\n\nDetailDisplaySection.Li = ({ children, title }: { children: React.ReactNode; title: string }) => (\n  <li>\n    <span className=\"mr-2 text-muted\">{title}</span>\n    {children}\n  </li>\n);\n\nconst Header = ({ instance, setLoading, setOrder, categories }: any) => {\n  const [tab, setTab] = React.useState<'filter' | 'add'>('filter');\n\n  const render = () => {\n    switch (tab) {\n      case 'add':\n        return (\n          <SupplierOrderProductAddForm\n            orderInstance={instance}\n            onSuccess={(res) => {\n              setLoading();\n              setOrder(res);\n            }}\n          />\n        );\n\n      default:\n        return <ProductListFilterForm categories={categories} fields={['category', 'published', 'presale']} />;\n    }\n  };\n\n  return (\n    <Staff.Section\n      border\n      title={\n        <div>\n          <HeaderButton tab={tab} onClick={() => setTab('filter')} active={tab === 'filter'}>\n            <Icons.Funnel />\n          </HeaderButton>\n        </div>\n      }\n      actions={\n        <HeaderButton tab={tab} onClick={() => setTab('add')} active={tab === 'add'}>\n          <Icons.Plus />\n        </HeaderButton>\n      }\n      className=\"bg-white mb-1\"\n    >\n      <div className=\"\" style={{ top: 0, position: 'sticky' }}>\n        {render()}\n      </div>\n    </Staff.Section>\n  );\n};\nconst HeaderButton = ({\n  children,\n  tab,\n  active,\n  ...props\n}: ButtonProps & { tab: string; children: React.ReactNode; active: boolean }) => {\n  return (\n    <Staff.Button\n      className=\"btn-primary-3\"\n      style={{ border: active ? '1px solid var(--blue-600)' : undefined }}\n      {...props}\n    >\n      {children}\n    </Staff.Button>\n  );\n};\n"],"names":["ProductUpdateRoute","React","ProductCreateView","ProductListView","ProductRoutes","path","element","index","SupplierOrderUpdateForm","instance","fields","props","onSuccess","onError","rest","context","SupplierOrderForm","onSubmit","e","preventDefault","fd","forEach","field","value","values","update","then","res","catch","err","handleError","NameField","label","text","error","placeholder","maxLength","name","OrderIDField","IsPaidField","checkbox","TotalCostField","min","step","required","type","CurrencyField","currencies","nullValue","map","curr","key","SupplierField","suppliers","supplier","StageSelectField","SupplierOrderProductAddForm","children","orderInstance","toLowerCase","form","useForm","supplier_name","url","isLoading","setLoading","handleSuccess","setValue","setErrors","errors","urlErrMsg","includes","postFnova","postPlt","postShein","className","autoFocus","disabled","SupplierProductList","refreshOrder","categories","stages","useDocumentTitle","ordSlug","useParams","useProductListRequest","data","results","loading","refresh","selected","setSelected","category","is_pre_sale","isSelected","length","actions","onClick","style","cursor","footer","component","Staff","to","position","top","zIndex","updateCategories","r","markPresale","unmarkPresale","item","SupplierProductListItem","StaffProduct","slug","ItemCheckBox","checked","onChange","target","filter","i","hide","setHide","open","setOpen","supplier_item","stage","stageData","find","border","title","minWidth","width","height","src","cover_data","product","is_on_sale","sale_price","retail_price","cost","currency","category_data","href","rel","ProductDeleteButton","orderSlug","item_id","formFields","order_id","is_paid","total_cost","mapDataToValues","Object","keys","k","OrderUpdateView","SharedDataCtx","setValues","useRequest","SupplierOrder","retrieve","refreshDeps","document","setOrder","setRes","Response","isSuccess","back","header","Header","icon","DetailDisplaySection","products","by_categories","category__name","Li","count","avg_cost","items_cost","amountWithSymbol","items_revenue","amount","tab","setTab","HeaderButton","active","ProductListFilterForm","undefined"],"sourceRoot":""}