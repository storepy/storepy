{"version":3,"file":"static/js/716.4f160ea3.chunk.js","mappings":"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","sources":["../../../../packages/miq-staffjs/src/setting/models.tsx","../../../../packages/miq-staffjs/src/setting/views.GeneralUpdate.tsx"],"sourcesContent":["import { StaffModel, StaffService } from '../service';\nimport { TIndex, TSetting } from './types';\n\nexport class SettingService extends StaffService<TSetting> {\n  updatePages(values: any) {\n    return this.patch(`${this._path}pages/`, values);\n  }\n\n  updateSite(values: any) {\n    return this.patch(`${this._path}site/`, values);\n  }\n}\n\nexport function Setting(data: TSetting = {}) {\n  return StaffModel<TSetting, SettingService>(data, 'settings/', SettingService);\n}\n\nexport type TSettingInstance = ReturnType<typeof Setting>;\n\nexport function Index(data: TIndex = {}) {\n  return StaffModel<TIndex>(data, 'index/');\n}\n\nexport type TIndexInstance = ReturnType<typeof Index>;\n","import * as React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getCN, Response } from '@miq/utiljs';\nimport { useRequest } from '@miq/hookjs';\nimport { Icons } from '@miq/componentjs';\nimport { SharedDataCtx, TSDState } from '@miq/contextjs';\nimport Form, { Inputs, FormProps, useForm } from '@miq/formjs';\n\nimport StaffView from '../Views';\nimport { StaffLink, StaffNavLink, StaffSection } from '../components';\n\nimport { TSetting } from './types';\nimport { Setting, TSettingInstance } from './models';\n\nconst PrivacySection = React.lazy(() => import('./section.Privacy'));\n\n//#region SettingModel\n\nconst contactFields = ['contact_number', 'contact_number_title', 'contact_number_display', 'contact_email'];\nconst whaFields = ['whatsapp_number', 'whatsapp_link', 'whatsapp_link_title'];\nconst analyticsFields = ['ga_tracking', 'fb_pixel'];\nconst fbAppFields = ['fb_app_id', 'fb_app_secret'];\nconst fields = [...contactFields, ...whaFields, ...analyticsFields, ...fbAppFields];\n\n//#endregion SettingModel\n\n//#region GeneralSettingUpdateView\n\nconst View: React.FC<{ children?: React.ReactNode; back?: string; text?: string; params: URLSearchParams }> = ({\n  children,\n  back,\n  params,\n  ...props\n}) => {\n  const tab = params?.get('tab');\n  return (\n    <StaffView\n      title=\"Site General Settings\"\n      text={props?.text}\n      back={back}\n      actions={\n        <StaffNavLink to=\"./?tab=privacy\">\n          <Icons.Gear />\n        </StaffNavLink>\n      }\n      className=\"site-general-setting-view\"\n    >\n      <div className=\"view-menu\">\n        <StaffLink to=\"./\" className={getCN([!tab && 'active'])}>\n          Site Details\n        </StaffLink>\n        <StaffLink to=\"./?tab=contact\" className={getCN([tab === 'contact' && 'active'])}>\n          Contact\n        </StaffLink>\n\n        <StaffLink to=\"./?tab=analytics\" className={getCN([tab === 'analytics' && 'active'])}>\n          Analytics\n        </StaffLink>\n        <StaffLink to=\"./?tab=social\" className={getCN([tab === 'social' && 'active'])}>\n          Social\n        </StaffLink>\n        <StaffLink to=\"./?tab=apps\" className={getCN([tab === 'apps' && 'active'])}>\n          Apps\n        </StaffLink>\n      </div>\n\n      <div className=\"view-content\">{children}</div>\n    </StaffView>\n  );\n};\n\nexport default function GeneralSettingUpdateView() {\n  const [params] = useSearchParams();\n  const { site } = React.useContext<TSDState>(SharedDataCtx);\n  const settingSlug = site.settings;\n\n  const form = useForm(mapDataToFormValues({}));\n  const { res, updateData } = useRequest(() => Setting({ slug: settingSlug }).retrieve(), {\n    refreshDeps: [settingSlug],\n    onSuccess: ({ data }) => form.setValues(mapDataToFormValues(data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = Setting(r.data);\n  const sharedProps = { settingSlug, instance, context: form, res, onUpdate: updateData, site };\n\n  const tab = params.get('tab');\n\n  switch (tab) {\n    case 'privacy':\n      return (\n        <View back=\"./\" {...{ params }}>\n          <PrivacySection {...sharedProps} />\n        </View>\n      );\n\n    case 'contact':\n      return (\n        <View back=\"./\" {...{ params }}>\n          <StaffSection text=\"What's the best way to contact you?\">\n            <SettingForm {...sharedProps} fields={contactFields} />\n          </StaffSection>\n          <StaffSection title=\"Whatsapp\" text=\"A whatsapp icon will be added to your site.\">\n            <SettingForm {...sharedProps} fields={whaFields} />\n          </StaffSection>\n        </View>\n      );\n\n    case 'analytics':\n      return (\n        <View back=\"./\" {...{ params }}>\n          <StaffSection text=\"Set up third-party analytics.\">\n            <SettingForm {...sharedProps} fields={analyticsFields} />\n          </StaffSection>\n        </View>\n      );\n\n    case 'social':\n      return (\n        <View back=\"./\" {...{ params }}>\n          <StaffSection text=\"Display Your social media accounts. Comin Soon ...\" />\n        </View>\n      );\n\n    case 'apps':\n      return (\n        <View back=\"./\" {...{ params }}>\n          <StaffSection title=\"Facebook\">\n            <SettingForm {...sharedProps} fields={fbAppFields} />\n          </StaffSection>\n        </View>\n      );\n\n    default:\n      return (\n        <View back=\"../\" {...{ params }}>\n          <div className=\"d-grid grid-md-5 gap-2\">\n            <StaffSection className=\"span-md-3\">\n              <SiteUpdateForm {...sharedProps} />\n            </StaffSection>\n          </div>\n        </View>\n      );\n  }\n}\n\n//#endregion GeneralSettingUpdateView\n\n//#region SettingForms\n\ntype SettingFormProps = Omit<FormProps, 'children'> & {\n  instance: TSettingInstance;\n  context: ReturnType<typeof useForm>;\n  fields: string[];\n  settingSlug: string;\n  onUpdate?: (r: any) => void;\n};\n\nconst SettingForm = ({ settingSlug, instance, fields, ...props }: SettingFormProps) => {\n  const { context } = props;\n  const { onUpdate, ...rest } = props;\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    const values: any = {};\n\n    fields.forEach((field) => {\n      values[field] = context.values[field];\n    });\n\n    return instance\n      .update(values)\n      .then(({ data }: any) => {\n        onUpdate?.(data);\n        // toast.success.({ message: 'Site updated.' });\n      })\n      .catch((err: any) => {\n        context.handleError(err);\n      });\n  };\n\n  return (\n    <Form {...rest} onSubmit={handleSubmit}>\n      {fields.map((name, i) => {\n        return getFormField(name, context, i);\n      })}\n      <div className=\"mt-1\">\n        <Form.Submit value=\"Save\" className=\"btn-md btn-primary-3 min-w-25\" />\n      </div>\n    </Form>\n  );\n};\n\n//#endregion SettingForms\n\nconst getFormField = (name: string, form: ReturnType<typeof useForm>, key?: number | string) => {\n  switch (name) {\n    // CONTACT FIELDS\n    case 'contact_number':\n      return (\n        <Form.Field\n          key={key}\n          label=\"Phone number\"\n          text=\"Write your (business) contact number without country extension.\"\n          error={form.errors.contact_number}\n        >\n          <Inputs.FormPhoneInput name=\"contact_number\" className=\"w-100 w-md-50\" />\n        </Form.Field>\n      );\n    case 'contact_number_title':\n      return (\n        <Form.Field\n          key={key}\n          label=\"Phone number link text\"\n          text=\"Describe your phone number link (SEO).\"\n          error={form.errors.contact_number_title}\n        >\n          <Form.Text name=\"contact_number_title\" className=\"w-100 w-md-50\" maxLength={99} />\n        </Form.Field>\n      );\n    case 'contact_number_display':\n      return (\n        <Form.Field\n          key={key}\n          label=\"Phone number display\"\n          text=\"Write a call to action for your contact number.\"\n          error={form.errors.contact_number_display}\n        >\n          <Form.Text\n            // required={props.required}\n            name=\"contact_number_display\"\n            placeholder=\"Call us now\"\n            maxLength={99}\n            className=\"w-100 w-md-50\"\n          />\n        </Form.Field>\n      );\n    case 'contact_email':\n      return (\n        <Form.Field\n          key={key}\n          label=\"Email\"\n          text=\"Write your (business) contact email.\"\n          error={form.errors.contact_email}\n        >\n          <Form.Text name=\"contact_email\" type=\"email\" className=\"w-100 w-md-50\" maxLength={99} />\n        </Form.Field>\n      );\n\n    // WHATSAPP\n    case 'whatsapp_number':\n      return (\n        <Form.Field\n          key={key}\n          label=\"Whatsapp number\"\n          text=\"Write your international whatsapp number.(229 ...)\"\n          error={form.errors.whatsapp_number}\n        >\n          <Form.Phone name=\"whatsapp_number\" className=\"w-100 w-md-50\" />\n        </Form.Field>\n      );\n    case 'whatsapp_link':\n      return (\n        <Form.Field label=\"Whatsapp link\" text=\"Write your whatsapp link.\" key={key}>\n          <Form.Text name=\"whatsapp_link\" type=\"url\" maxLength={200} className=\"w-100 w-md-50\" />\n        </Form.Field>\n      );\n    case 'whatsapp_link_title':\n      return (\n        <Form.Field\n          label=\"Whatsapp link text\"\n          text=\"Describe your whatsapp link.\"\n          error={form.errors.whatsapp_link_title}\n          key={key}\n        >\n          <Form.Text name=\"whatsapp_link_title\" className=\"w-100 w-md-50\" maxLength={99} />\n        </Form.Field>\n      );\n\n    // ANALYTICS\n    case 'ga_tracking':\n      return (\n        <Form.Field label=\"Google Analytics Tracking Number\" key={key}>\n          <Form.Text name=\"ga_tracking\" className=\"w-100 w-md-50\" placeholder=\"G-\" />\n        </Form.Field>\n      );\n    case 'fb_pixel':\n      return (\n        <Form.Field label=\"Facebook Pixel\" error={form.errors.fb_pixel} key={key}>\n          <Form.Text name=\"fb_pixel\" className=\"w-100 w-md-50\" />\n        </Form.Field>\n      );\n\n    // FACEBOOK APP\n    case 'fb_app_id':\n      return (\n        <Form.Field label=\"Facebook App ID\" error={form.errors.fb_app_id} key={key}>\n          <Form.Text name=\"fb_app_id\" className=\"w-100 w-md-50\" />\n        </Form.Field>\n      );\n    case 'fb_app_secret':\n      return (\n        <Form.Field label=\"Facebook App Secret\" error={form.errors.fb_app_secret} key={key}>\n          <Form.Text name=\"fb_app_secret\" className=\"w-100 w-md-50\" />\n        </Form.Field>\n      );\n\n    default:\n      return null;\n  }\n};\n\n//#region SiteUpdateForm\n\nconst SiteUpdateForm = (props: { instance: TSettingInstance }) => {\n  const ctx = React.useContext(SharedDataCtx);\n  const { site } = ctx;\n  const form = useForm({ name: site.name, domain: site.domain });\n\n  const { instance } = props;\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    return instance\n      .updateSite({ name: form.values.name, domain: form.values.domain })\n      .then((res: any) => {\n        ctx.updateSite(res.data.site);\n        // toast.success({ message: 'Site updated.' });\n      })\n      .catch((err: any) => form.handleError(err));\n  };\n\n  const disabled = !Boolean(site.settings);\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <Form.Field\n        label=\"Site name\"\n        text=\"Give a name to your site. Keep it short and clean.(65 Characters max.)\"\n        error={form.errors.name}\n      >\n        <Form.Text\n          required\n          name=\"name\"\n          placeholder={'example'}\n          maxLength={65}\n          minLength={2}\n          disabled={disabled}\n          className=\"w-100 w-md-50\"\n        />\n      </Form.Field>\n\n      <Form.Field\n        label=\"Site domain\"\n        text=\"Enter your domain name url. Include the http(s) part.\"\n        error={form.errors.domain}\n      >\n        <Form.Text\n          required\n          type=\"url\"\n          name=\"domain\"\n          maxLength={99}\n          placeholder={'http(s)://example.com'}\n          minLength={3}\n          disabled={disabled}\n        />\n      </Form.Field>\n\n      <div className=\"\">\n        <Form.Submit value=\"Save\" className=\"btn-md btn-primary-3 min-w-25\" />\n      </div>\n    </Form>\n  );\n};\n\n//#endregion SiteUpdateForm\n\n//#region HELPERS\n\nconst mapDataToFormValues = (data: TSetting = {}) => {\n  const values: TSetting = {};\n\n  fields.forEach((field) => {\n    values[field] = data[field] || '';\n  });\n  return values;\n};\n\n//#endregion HELPERS\n"],"names":["SettingService","values","this","patch","_path","StaffService","Setting","data","StaffModel","Index","PrivacySection","React","contactFields","whaFields","analyticsFields","fbAppFields","fields","View","children","back","params","props","tab","get","title","text","actions","to","className","getCN","GeneralSettingUpdateView","useSearchParams","site","SharedDataCtx","settingSlug","settings","form","useForm","mapDataToFormValues","useRequest","slug","retrieve","refreshDeps","onSuccess","setValues","res","updateData","r","Response","isSuccess","instance","sharedProps","context","onUpdate","SettingForm","SiteUpdateForm","rest","onSubmit","e","preventDefault","forEach","field","update","then","catch","err","handleError","map","name","i","getFormField","value","key","label","error","errors","contact_number","contact_number_title","maxLength","contact_number_display","placeholder","contact_email","type","whatsapp_number","whatsapp_link_title","fb_pixel","fb_app_id","fb_app_secret","ctx","domain","disabled","Boolean","updateSite","required","minLength"],"sourceRoot":""}