{"version":3,"file":"static/js/740.18d2b914.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-orderjs/src/buttons.tsx","../../../../shopy/shopy-orderjs/src/components.tsx","../../../../shopy/shopy-orderjs/src/forms/fields.tsx","../../../../shopy/shopy-orderjs/src/views.Index.tsx","../../../../shopy/shopy-orderjs/src/index.tsx","../../../../shopy/shopy-orderjs/src/models.tsx","../../../../shopy/shopy-storejs/src/Product/Size/index.tsx","../../../../shopy/shopy-storejs/src/Product/buttons.tsx","../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/forms/fields.tsx","../../../../shopy/shopy-storejs/src/Product/forms/index.tsx","../../../../shopy/shopy-storejs/src/Product/forms/lang.ts","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/Supplier/forms.tsx","../../../../shopy/shopy-storejs/src/Supplier/SupplierProductList.tsx","../../../../shopy/shopy-storejs/src/Supplier/OrderUpdateView.tsx","../../../../shopy/shopy-storejs/src/Supplier/components.tsx","../../../../shopy/shopy-storejs/src/Supplier/index.tsx","../../../../shopy/shopy-storejs/src/Supplier/models.tsx","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events.tsx","../../../../shopy/shopy-storejs/src/types.ts","../../../../shopy/shopy-storejs/src/index.tsx"],"sourcesContent":["import { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { TCampaignInstance } from '@miq/staffjs';\nimport { getCN } from '@miq/utiljs';\n\nimport { TCartInstance } from './models';\nimport { TCart } from './types';\n\nexport const CartItemDeleteButton = ({\n  cartInstance,\n  itemSlug,\n  ...props\n}: {\n  itemSlug: string;\n  cartInstance: TCartInstance;\n  onSuccess?: (res?: any) => void;\n  onError?: (res?: any) => void;\n}) => {\n  if (!itemSlug) return null;\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer ce produit</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              cartInstance\n                .destroyItem(itemSlug)\n                .then((r) => {\n                  props?.onSuccess?.(r);\n                  // setOpen(false);\n                })\n                .catch((err) => {\n                  props?.onError?.(err);\n                })\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Voulez-vous supprimer ce produit</div>}\n      className={getCN(['cart-item-delete-button btn-danger-3'])}\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n\nexport const CartDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TCart>, 'context'> & { label?: string; instance: TCampaignInstance }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        onSuccess?.(res);\n        setOpen?.(false);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer ce panier</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['cart-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { truncateStr } from '@miq/utiljs';\nimport { ProductPriceDisplay, TProduct, TProductSize } from '@shopy/storejs';\n\nimport { TCustomer } from './types';\n\nexport const ItemProductCard = ({ product, size }: { product: TProduct; size: TProductSize }) => (\n  <div className=\"d-flex align-items-center\">\n    <ProductImage {...{ product, width: 60, height: 60 }} />\n    <div className=\"flex-1 rounded p-1 \">\n      <div className=\"fw-bold\">{truncateStr(product?.name, 0, 25)}</div>\n      <ProductPriceDisplay {...product} inline />\n      {size && (\n        <div>\n          <span className=\"me-1\">Size:</span>\n          <span className=\"text-sm\">{size?.name}</span>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport const ProductImage = ({\n  product,\n  width,\n  height,\n  ...props\n}: {\n  product: TProduct;\n  width?: number | string;\n  height?: number | string;\n}) =>\n  product?.slug ? (\n    <div {...props} style={{ width: width, height: height }}>\n      <Staff.Img.Square slug=\"slug\" src=\"src\" {...product.cover_data} className=\"rounded\" />\n    </div>\n  ) : null;\n\nexport const CustomerCard = ({ data, ...props }: { data: TCustomer }) => {\n  if (!data || !data.slug) return null;\n\n  const { first_name, last_name, email, phone } = data;\n\n  return (\n    <div className=\"customer-card\">\n      <div className=\"fw-bold\">{`${first_name} ${last_name}`}</div>\n      <div className=\"\">{phone}</div>\n      <div className=\"text-muted text-sm\">{email}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { EmailField, FirstNameField, TextFieldProps } from '@miq/formjs';\nimport { Customer } from '../models';\nimport { TCustomer } from '../types';\nimport { Response } from '@miq/utiljs';\n\nconst CustomerSelect = ({ customers, onItemClick }: { customers: TCustomer[]; onItemClick: (p) => void }) => {\n  return (\n    <div className=\"mt-1 border-1 rounded bg-white\">\n      {customers.map((cust) => {\n        return (\n          <div\n            className=\"d-flex justify-content-between p-1 border-bottom\"\n            onClick={() => onItemClick(cust)}\n            key={cust?.slug}\n          >\n            <div className=\"fw-bold\">{`${cust.first_name} ${cust.last_name}`}</div>\n            <div className=\"text-muted text-sm\">{cust.phone}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const CustomerLNameField = ({\n  label = 'Nom',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps & { allowSuggestions?: boolean; onCustomerSelect?: (p: TCustomer) => void }) => {\n  const [customers, setCustomers] = React.useState<TCustomer[]>([]);\n\n  const handleDebounce = ({ value }) => {\n    if (!allowSuggestions || !value || value.length < 3) return;\n\n    Customer()\n      .find(value)\n      .then((r) => {\n        const items = new Response(r).items;\n\n        if (items.length > 0) setCustomers(items);\n        else setCustomers([]);\n      })\n      .catch((err) => {});\n  };\n\n  const { onCustomerSelect, allowSuggestions, ...rest } = props;\n\n  return (\n    <div className=\"\">\n      <Form.Field {...{ label, error, text }} className={fieldCN}>\n        <div className=\"span-md-3\">\n          <Form.Text required name=\"last_name\" {...rest} maxLength={99} minLength={2} onDebounce={handleDebounce} />\n\n          {allowSuggestions && Boolean(customers.length) && (\n            <CustomerSelect\n              customers={customers}\n              onItemClick={(p) => {\n                onCustomerSelect?.(p);\n              }}\n            />\n          )}\n        </div>\n      </Form.Field>\n    </div>\n  );\n};\n\nexport const CustomerFNameField = (props: TextFieldProps) => <FirstNameField required {...props} />;\nexport const CustomerEmailField = (props: TextFieldProps) => <EmailField {...props} />;\n\nexport const CustomerPhoneField = ({\n  label = 'Numéro de téléphone',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps) => (\n  <Form.Field {...{ label, error, text }} className={fieldCN}>\n    <Form.Phone required name=\"phone\" {...props} />\n  </Form.Field>\n);\n\nexport const CustomerFields = {\n  LName: CustomerLNameField,\n  FName: CustomerFNameField,\n  Email: CustomerEmailField,\n  Phone: CustomerPhoneField,\n};\n","import * as React from 'react';\nimport { Card, HorizontalScrollGridLayout, Icons, Loading, ViewSection } from '@miq/componentjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response, uuid } from '@miq/utiljs';\nimport { ProductPriceDisplay } from '@shopy/storejs';\nimport { Link } from 'react-router-dom';\nimport { CartDeleteButton } from './buttons';\nimport { ProductImage } from './components';\nimport { Cart } from './models';\nimport { TCart } from './types';\n\nexport default function SalesIndexView() {\n  const { res, loading, refresh, ...request } = useRequest(() => Cart().list());\n\n  if (loading) return <Loading />;\n\n  const r = new Response<TCart>(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Sales\"\n      actions={\n        <>\n          <Staff.Link to=\"cart/\" className=\"btn btn-primary btn-round\" title=\"Ajouter un panier\">\n            <Icons.CartPlus />\n          </Staff.Link>\n        </>\n      }\n      className=\"sales-index-view\"\n    >\n      {r.items?.map((i) => {\n        const { customer_data = {}, items = [] } = i || {};\n        const cart = Cart(i);\n\n        return (\n          <Card\n            // border\n            style={{ marginBottom: 12 }}\n            actions={<CartDeleteButton instance={cart} onSuccess={() => refresh()} />}\n            title={<div className=\"\">{`${customer_data?.first_name} ${customer_data?.last_name}`}</div>}\n            text={new Date(cart?.created).toLocaleDateString(undefined, {\n              day: '2-digit',\n              weekday: 'short',\n              month: 'short',\n              year: '2-digit',\n            })}\n            footer={\n              i.products.length > 0 && (\n                <div className=\"fw-bold\">\n                  <ProductPriceDisplay retail_price_data={i?.total || i?.subtotal} />\n                </div>\n              )\n            }\n            key={i.slug}\n            className=\"mb-1\"\n          >\n            <Link to={`cart/${i.slug}/`}>\n              <HorizontalScrollGridLayout className=\"cart-items-preview\" style={{ marginBottom: 0 }}>\n                {items.map((i) => {\n                  return (\n                    <div key={uuid()}>\n                      <ProductImage product={i.product} {...{ width: 48, height: 48 }} />\n                    </div>\n                  );\n                })}\n              </HorizontalScrollGridLayout>\n            </Link>\n          </Card>\n        );\n      })}\n    </Staff.View>\n  );\n}\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport './views.scss';\n\nimport SalesIndexView from './views.Index';\n\nconst CartCreateView = React.lazy(() => import('./views.CartCreate'));\nconst CartUpdateView = React.lazy(() => import('./views.CartUpdate'));\n// const OrderCreateView = React.lazy(() => import('./OrdCreateView'));\n\nexport default function SalesStaffRoutes() {\n  return (\n    <div className=\"sales-staff\">\n      <Routes>\n        {/* <Route path=\":catMetaSlug/:prodMetaSlug/\" element={<ProductView />} /> */}\n        {/* <Route path=\"cart/\" element={<CartDetailView />} /> */}\n        <Route path=\"cart/:cartSlug/\" element={<CartUpdateView />} />\n        <Route path=\"cart/\" element={<CartCreateView />} />\n        <Route path=\"/\" element={<SalesIndexView />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport { CustomerFields } from './forms/fields';\nexport * from './types';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCart, TCustomer } from './types';\n\nconst timeout = 5000;\n\nclass CustomerService extends StaffService<TCustomer> {\n  find(q: string) {\n    return this.list({ params: { q } });\n  }\n}\n\nexport const Customer = (data: TCustomer = {}) => {\n  return StaffModel<TCustomer, CustomerService>(data, 'customers', CustomerService);\n};\n\nexport type TCustomerInstance = ReturnType<typeof Customer>;\n\n/**\n * CART\n */\n\nclass CartService extends StaffService<TCart> {\n  addItems(sizeSlug: string) {\n    return this.post(`${this._path}items/`, { sizeSlug });\n  }\n\n  addItem(prodSlug: string, size: string, qty?: string) {\n    return this.post(`${this._path}item/${prodSlug}/`, { size, qty });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(itemSlug: string) {\n    return this.delete(`${this._path}item/${itemSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = (data: TCart = {}) => {\n  return StaffModel<TCart, CartService>(data, 'carts', CartService);\n};\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n\n// export const Cart = (data: any) => {\n//   getIsValid(data: Record<string, any>): boolean {\n//     return data && data.slug && data.products && Boolean(data.items.length);\n//   }\n\n//   getItem(meta_slug: string) {\n//     return;\n//     // return this.items?.find((i: any) => i.product.meta_slug === meta_slug);\n//   }\n\n//   postItem(prod_meta_slug: string, values: any) {\n//     // values may contain size and other info\n\n//     if (this.slug && values) values.cart_slug = this.slug;\n//     return this.postPath(`${this._endpoint}items/`, { ...values, prod_meta_slug });\n//   }\n\n//   patchItem(itemSlug: string, values: any) {\n//     return this.patchPath(`${this._path}/item/${itemSlug}/`, values);\n//   }\n//   deleteItem(itemSlug: string) {\n//     return this.deletePath(`${this._path}/item/${itemSlug}/`);\n//   }\n\n//   patchCustomer(values: any) {\n//     if (values && this?.customer?.slug) values.cust_slug = this.customer.slug;\n//     return this.patchPath(`${this._path}/customer/`, values);\n//   }\n//   postCustomer(values: any) {\n//     return this._s.post(`${this._path}/customer/`, values);\n//   }\n// }\n\n// //   const methods = {\n// //     getItem,\n// //     postItem,\n// //     patchItem,\n// //     deleteItem,\n// //     patchCustomer,\n// //     postCustomer,\n// //   };\n\n// //   return Object.assign({ isValid: getIsValid() }, CrudModel(data, 'api/carts/'), methods);\n// // };\n\n// export const Customer = (data: any) => {\n//   // return Object.assign({}, CrudModel(data, 'api/carts/'), methods);\n// };\n","import * as React from 'react';\nimport Form, { FormFieldProps, IFormCallbackProps, SelectFieldProps, TextFieldProps, useForm } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { StaffProduct } from '../models';\nimport { TProductSize } from '../../types';\n\ntype UpdateFormProps = IFormCallbackProps & {\n  data: any;\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\nexport const SizeUpdateForm = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  const form = useForm<TProductSize>({\n    name: data.name || '',\n    code: data.code || '',\n    quantity: data.quantity || 0,\n  });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n\n  const { onSuccess, onError } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchSize(data.slug, form.values)\n          .then((res: any) => onSuccess?.(res))\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <SizeDeleteButton {...{ productInstance, data, onSuccess, onError }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst commonSizes: { [k: string]: any } = {\n  xs: { name: 'Extra-small', code: 'XS' },\n  s: { name: 'Small', code: 'S' },\n  m: { name: 'Medium', code: 'M' },\n  l: { name: 'Large', code: 'L' },\n  xl: { name: 'Extra-large', code: 'XL' },\n};\nconst formDefaultValues: TProductSize = { name: '', code: '', quantity: 1 };\n\nexport const SizeAddForm = ({ productInstance, ...props }: Omit<UpdateFormProps, 'data'>) => {\n  const form = useForm<TProductSize>(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postSize(form.values)\n          .then((res: any) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-flex my-2\">\n        <Button\n          onClick={() => form.setValues({ ...form.values, name: 'One-size', code: 'ONESIZE' })}\n          className=\"size-select-btn me-1\"\n        >\n          One/size\n        </Button>\n\n        {Object.keys(commonSizes).map((key: string) => {\n          const data = commonSizes[key];\n          return (\n            <Button\n              onClick={() => form.setValues({ ...form.values, ...data })}\n              className=\"size-select-btn me-1\"\n              key={key}\n            >\n              {key}\n            </Button>\n          );\n        })}\n      </div>\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst SizeNameField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        placeholder=\"Entrez le nom de la taille ...\"\n        {...rest}\n        required\n        name=\"name\"\n        maxLength={20}\n        minLength={2}\n      />\n    </Form.Field>\n  );\n};\nconst SizeCodeField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez le code de la taille ...\" {...rest} required name=\"code\" maxLength={10} />\n    </Form.Field>\n  );\n};\n\nexport const SizeQuantityField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez la quantité ...\" {...rest} required type=\"number\" name=\"quantity\" min={0} />\n    </Form.Field>\n  );\n};\n\nexport const SizeSelectField = (props: SelectFieldProps & { sizes: TProductSize[] }) => {\n  const { label, text, error, sizes, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"size\" nullValue={{ label: 'Sélectionnez une taille ...' }}>\n        {sizes?.map((size) => {\n          return <Form.Option label={size.code?.toUpperCase()} value={size.slug!} key={size.slug} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nconst SizeSkuField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Sku\" {...rest} name=\"sku\" maxLength={99} minLength={2} />\n    </Form.Field>\n  );\n};\n\nconst SizeDeleteButton = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer une taille</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteSize(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onError?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this size:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"size-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\n\nimport { getCN } from '@miq/utiljs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { TImgButtonAddProps, StaffImgAddButton } from '@miq/staffjs';\n\nimport { emitter } from '../events';\n\nimport { TStaffProductInstance } from './models';\n\nexport type ProductImagesAddButtonProps = Omit<TImgButtonAddProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: TStaffProductInstance;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\n/**\n * Button component for deleting a product\n * ```js\n * <ProductDeleteButton instance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TStaffProductInstance>, 'context'> & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\nimport { NavLink, useParams, useSearchParams } from 'react-router-dom';\n\nimport { getCN } from '@miq/utiljs';\nimport { Button, Icons, ViewSection } from '@miq/componentjs';\nimport Staff, { StaffImg } from '@miq/staffjs';\n\nimport { emitter } from '../events';\nimport { TSupplierOrderInstance } from '../Supplier';\nimport { TProduct, TProductStageData } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\n\nexport const ProductListItem = ({\n  item,\n  ...props\n}: {\n  item: TProduct;\n  orderInstance?: TSupplierOrderInstance;\n  stages: TProductStageData[];\n  params?: URLSearchParams;\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  if (!item?.slug) return null;\n\n  const instance = StaffProduct(item);\n\n  return (\n    <ViewSection\n      border\n      header={\n        <div className=\"\" onClick={() => setOpen(!open)}>\n          <ProductListItemHeader {...props} {...{ instance }} />\n        </div>\n      }\n      className=\"mb-1\"\n    />\n  );\n};\n\nconst ProductListItemHeader = ({\n  instance,\n  ...props\n}: {\n  instance: TStaffProductInstance;\n  orderInstance?: TSupplierOrderInstance;\n  stages: TProductStageData[];\n  params?: URLSearchParams;\n}) => {\n  const { orderInstance, stages, params } = props;\n  const { supplier_item = { cost: 0 }, stage } = instance;\n\n  const stageData = stages?.find((i) => i.value === stage);\n  const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n\n  return (\n    <div className=\"d-flex\">\n      <div className=\"d-flex flex-1\">\n        <div style={{ width: 48 }}>\n          <Staff.Img.Thumb src=\"src\" {...instance.cover_data} className=\"rounded\" />\n        </div>\n\n        <div className=\"ms-1 d-grid grid-md-4 flex-1 gap-2\">\n          <div className=\"span-md-2\">\n            {instance.is_oos && <span className=\"text-sm text-danger\">Out of stock</span>}\n            <div className=\"text-sm d-flex align-items-center\">\n              <div className=\"text-ellipsis me-1 fw-bold\">{instance.name_truncated}</div>\n              <PublishedIcon show={instance.is_published || false} />\n            </div>\n\n            <div className=\"d-flex text-sm\">\n              <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n              <div className=\"text-muted px-1\">{`|`}</div>\n              {supplier_item && supplier_item?.cost && (\n                <div className=\"text-muted\">{`${supplier_item?.cost} ${orderInstance?.currency || 'USD'}`}</div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"d-flex align-items-center\">\n            <Button\n              className={getCN(['btn-round', instance.is_pinned && 'btn-primary-3'])}\n              style={{ width: 20, height: 20, padding: 8 }}\n              onClick={(e) => {\n                e.stopPropagation();\n                instance.update({ is_pinned: !instance.is_pinned }).then(({ data }) => {\n                  emitter.update(data);\n                });\n              }}\n              title=\"This product is pinned\"\n            >\n              <Icons.PinAngle />\n            </Button>\n\n            <Staff.Link to={`./${to}`} className=\"btn btn-square btn-primary-3 ms-1\" title=\"Edit product\">\n              <Icons.PencilSquare />\n            </Staff.Link>\n          </div>\n\n          <div className=\"text-sm text-left\">\n            <div>\n              <span className=\"\">\n                {instance?.category_data?.name || \"' - '\"}\n                {supplier_item && <span className=\"text-muted\">{` | ${supplier_item.category}`}</span>}\n              </span>\n            </div>\n\n            <span>{`Sizes: ${instance.size_count}`}</span>\n            {stageData && <span className=\"text-muted\">{` - ${stageData.label}`}</span>}\n\n            {supplier_item && (\n              <a className=\"ms-1\" href={supplier_item.url} target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"d-flex align-items-center\">\n        \n      </div> */}\n    </div>\n  );\n};\n\nexport const ProductCardItem = ({ data, ...props }: { data: TProduct }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: TProduct[];\n  itempath: string;\n};\n\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  const { prodSlug } = useParams();\n\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: TProduct) => {\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug} className={getCN([prodSlug === item.slug && 'active'])}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import lang from './lang';\n\nimport { DescriptionField as DField, NameField as NField } from '@miq/formjs';\nimport Form, { CheckboxFieldProps, SelectFieldProps, TextChoicesType, TextFieldProps } from '@miq/formjs';\n\nimport { CategoryChoicesType } from '../../types';\n\nconst { i18n } = window;\n\nexport const NameField = (props: TextFieldProps) => (\n  <NField placeholder={i18n(lang, 'NField.placeholder')} {...props} />\n);\n\nexport const DescriptionField = (props: TextFieldProps) => (\n  <DField placeholder={i18n(lang, 'DField.placeholder')} {...props} />\n);\n\nexport const CategoryField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"category\" nullValue={{ label: i18n(lang, 'CatField.nullValueLabel') }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nexport const SalePriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        required\n        placeholder={i18n(lang, 'SalePField.placeholder')}\n        {...rest}\n        type=\"number\"\n        name=\"sale_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport const OnSaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_on_sale\" />\n    </Form.Field>\n  );\n};\n\nexport const PresaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_pre_sale\" />\n    </Form.Field>\n  );\n};\n\nexport const OosCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = i18n(lang, 'OosField.label'), text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_oos\" />\n    </Form.Field>\n  );\n};\n\nexport const PresaleTextField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.TextAreaX placeholder=\"\" {...rest} name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </Form.Field>\n  );\n};\n\nexport const RetailPriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        required\n        placeholder={i18n(lang, 'RetailPField.placeholder')}\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        {...rest}\n        type=\"number\"\n        name=\"retail_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport type TProductStageSelectFieldProps = SelectFieldProps & { stages: TextChoicesType };\n\nexport const StageSelectField = (props: TProductStageSelectFieldProps) => {\n  const { label, text, error, required = true, stages, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select\n        required={required}\n        name=\"stage\"\n        nullValue={{ label: i18n(lang, 'StageField.nullValueLabel') }}\n        {...rest}\n      >\n        {stages?.map?.((stage) => {\n          return <Form.Option {...stage} key={stage.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nexport const IsExplicitCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = i18n(lang, 'ExplicitField.label'), text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_explicit\" />\n    </Form.Field>\n  );\n};\n","import * as React from 'react';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\n\nimport lang from './lang';\n\nimport { Button } from '@miq/componentjs';\nimport { getCN, isRequired as isR, TLang } from '@miq/utiljs';\nimport Form, { FormProps, IFormCallbackProps, IFormUpdateProps, useForm } from '@miq/formjs';\n\nimport { emitter } from '../../events';\nimport { CategoryChoicesType } from '../../types';\nimport { SupplierOrder } from '../../Supplier';\nimport { StaffProduct, TStaffProductInstance } from '../models';\n\nimport * as ProductFields from './fields';\n\nconst i18n = (k: keyof TLang) => window.i18n(lang, k);\n\n/**\n *\n */\n\ninterface IProductUpdateFormProps extends IFormUpdateProps<TStaffProductInstance> {\n  onWillSubmit?: () => void;\n  fields?: string[];\n}\n\nexport const ProductQuickUpdateForm = (\n  props: Omit<IProductUpdateFormProps, 'context'> & { categories: CategoryChoicesType; orderSlug?: string }\n) => {\n  const { instance, categories, orderSlug, ...rest } = props;\n\n  const form = useForm({\n    name: instance.name || '',\n    category: instance.category || '',\n    description: instance.description || '',\n    retail_price: instance?.retail_price || 0.0,\n    is_pre_sale: instance.is_pre_sale || false,\n    is_pre_sale_text: instance.is_pre_sale_text || '',\n  });\n\n  const { errors } = form;\n  const { fields = ['name', 'category', 'description', 'retail_price', 'is_pre_sale', 'is_pre_sale_text'] } = props;\n\n  return (\n    <ProductUpdateForm {...rest} context={form} instance={instance} fields={fields}>\n      <ProductForm.NameField error={errors.name} />\n\n      <ProductForm.DescriptionField error={errors.description} />\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        {categories && <ProductForm.CategoryField categories={categories} error={errors.category} />}\n        <ProductForm.RetailPriceField error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label={i18n('PresaleField.label')} error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField\n          label={i18n('PresaleTextField.label')}\n          placeholder={i18n('PresaleTextField.placeholder')}\n          error={errors.is_pre_sale_text}\n        />\n      )}\n\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div>\n          {orderSlug && instance?.slug && (\n            <Button\n              onClick={() => {\n                SupplierOrder({ slug: orderSlug }).destroyItem(instance.slug!);\n              }}\n            >\n              {i18n('QUpdateForm.removeFromOrderLabel')}\n            </Button>\n          )}\n        </div>\n\n        <Form.Submit value={i18n('QUpdateForm.submitLabel')} className=\"btn-primary-3 btn-md\" />\n      </div>\n    </ProductUpdateForm>\n  );\n};\n\nexport function ProductUpdateForm({ children, ...props }: IProductUpdateFormProps) {\n  const {\n    instance = isR('StaffProduct instance'),\n    fields = isR('fields instance'),\n    onSuccess,\n    onError,\n    ...rest\n  } = props;\n\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props?.onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      if (field == 'is_pre_sale_dt' && !value) return;\n\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then(({ data }: any) => {\n        onSuccess?.(data);\n        emitter.update(data);\n      })\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm {...rest} onSubmit={handleSubmit}>\n      {children}\n    </ProductForm>\n  );\n}\n\n/**\n *\n */\n\nexport interface ProductCreateFormProps extends IFormCallbackProps {}\n\nexport const ProductCreateForm: React.FC<ProductCreateFormProps> = (props) => {\n  const form = useForm({ name: '', retail_price: '', description: '' });\n\n  const { errors } = form;\n\n  const handleCreate = (e: React.FormEvent) => {\n    e.preventDefault();\n    StaffProduct({})\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => form.handleError(err));\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleCreate}>\n      <ProductForm.NameField label={i18n('NField.label')} error={errors.name} />\n      <ProductForm.RetailPriceField required={false} label={i18n('RetailPField.label')} error={errors.retail_price} />\n      <ProductForm.DescriptionField label={i18n('DField.label')} error={errors.description} />\n\n      <Form.Submit value={i18n('CreateForm.submitLabel')} className=\"btn-primary-3\" />\n    </ProductForm>\n  );\n};\n\n/**\n *\n */\n\nexport const ProductForm = (props: FormProps) => <Form {...props} />;\n\n/**\n *\n */\n\nProductForm.NameField = ProductFields.NameField;\nProductForm.DescriptionField = ProductFields.DescriptionField;\nProductForm.CategoryField = ProductFields.CategoryField;\nProductForm.SalePriceField = ProductFields.SalePriceField;\nProductForm.OnSaleCheckboxField = ProductFields.OnSaleCheckboxField;\nProductForm.OosCheckboxField = ProductFields.OosCheckboxField;\nProductForm.PresaleTextField = ProductFields.PresaleTextField;\nProductForm.RetailPriceField = ProductFields.RetailPriceField;\nProductForm.StageSelectField = ProductFields.StageSelectField;\nProductForm.PresaleCheckboxField = ProductFields.PresaleCheckboxField;\nProductForm.IsExplicitCheckboxField = ProductFields.IsExplicitCheckboxField;\n\n//\n//\n//\n\nexport const ProductListFilterForm = ({\n  children,\n  ...props\n}: {\n  children?: React.ReactNode;\n  categories?: CategoryChoicesType;\n}) => {\n  const [params, setParams] = useSearchParams();\n  const [q, setQ] = React.useState<string>(params.get('q') || '');\n  const { categories, ...rest } = props;\n\n  return (\n    <form\n      {...rest}\n      action=\".\"\n      method=\"GET\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (!q) params.delete('q');\n        else params.set('q', q);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {children || (\n        <>\n          <div className=\"mb-2 d-flex\">\n            <input\n              type=\"text\"\n              name=\"q\"\n              value={q}\n              onChange={(e) => {\n                const { value } = e.target;\n                setQ(value);\n                if (!value && params.get('q')) params.delete('q');\n              }}\n              className=\"miq-form-input flex-1\"\n              placeholder={i18n('ListFilterForm.Q.placeholder')}\n            />\n            <Form.Submit value={i18n('ListFilterForm.submitLabel')} className=\"btn-primary-3 ms-1\" />\n          </div>\n\n          {categories && <ProductListFilterForm.Category {...{ params, setParams, categories }} />}\n\n          <ProductListFilterForm.Published {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.Sale {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.PreSale {...{ params, setParams }} className=\"mb-1\" />\n        </>\n      )}\n    </form>\n  );\n};\n\ntype TParamsProps = {\n  params: URLSearchParams;\n  setParams: (\n    nextInit: URLSearchParamsInit,\n    navigateOptions?:\n      | {\n          replace?: boolean | undefined;\n          state?: any;\n        }\n      | undefined\n  ) => void;\n};\n\ntype QuerySelectFieldProps = TParamsProps & {\n  emptyLabel?: string;\n  name: string;\n  children?: React.ReactNode;\n  className?: string;\n};\n\nProductListFilterForm.Category = (props: Omit<QuerySelectFieldProps, 'name'> & { categories: CategoryChoicesType }) => {\n  const { categories, ...rest } = props;\n\n  return (\n    <QuerySelectField emptyLabel={i18n('ListFilterForm.categoryEmptyLabel')} {...rest} name=\"cat\">\n      <option value=\"no-cat\">{i18n('ListFilterForm.noCategoryOptionLabel')}</option>\n\n      {categories.items.map((cat) => {\n        return (\n          <option value={cat.value} key={cat.slug}>\n            {cat.label}\n          </option>\n        );\n      })}\n    </QuerySelectField>\n  );\n};\n\nProductListFilterForm.Published = (props: Omit<QuerySelectFieldProps, 'name'>) => {\n  return (\n    <QuerySelectField emptyLabel={i18n('ListFilterForm.publishedEmptyLabel')} {...props} name=\"published\">\n      <option value=\"include\">{i18n('ListFilterForm.publishedOptionLabel')}</option>\n      <option value=\"pinned\"> {i18n('ListFilterForm.pinnedOptionLabel')}</option>\n      <option value=\"exclude\"> {i18n('ListFilterForm.unpublishedOptionLabel')}</option>\n      <option value=\"explicit\"> {i18n('ListFilterForm.explicitOptionLabel')}</option>\n    </QuerySelectField>\n  );\n};\n\nconst QuerySelectField = ({ children, ...props }: QuerySelectFieldProps) => {\n  const { name, params, setParams, emptyLabel } = props;\n  return (\n    <select\n      className={getCN(['miq-select', props.className])}\n      name={name}\n      value={params.get(name) || ''}\n      onChange={(e) => {\n        const { value } = e.target;\n\n        if (!value) params.delete(name);\n        else params.set(name, value);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {emptyLabel && <option value=\"\">{emptyLabel}</option>}\n      {children}\n    </select>\n  );\n};\n\nProductListFilterForm.PreSale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"presale\" label={i18n('ListFilterForm.preSaleLabel')} />;\n};\n\nProductListFilterForm.Sale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"sale\" label={i18n('ListFilterForm.onSaleLabel')} />;\n};\n\ntype QueryToggleFieldProps = Omit<QuerySelectFieldProps, 'emptyLabel'> & { label: string; inputId?: string };\n\nconst QueryToggleField = (props: QueryToggleFieldProps) => {\n  const { label, name, params, setParams, inputId } = props;\n\n  return (\n    <div className={getCN(['miq-query-filter-toggle d-flex align-items-center', props.className])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox me-1\"\n        id={inputId}\n        onChange={(e) => {\n          const { checked } = e.target;\n          if (!checked) params.delete(name);\n          else params.set(name, `${checked}`);\n          params.delete('page');\n          setParams(params);\n        }}\n        checked={Boolean(params.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n","import { TLang } from '@miq/utiljs';\n\nexport default {\n  //   'NField.placeholder': { fr: \"\", en: \"\" },\n\n  /**\n   * ************************ FIELDS\n   */\n\n  //\n  'PresaleField.label': { fr: 'En pré-vente', en: 'Pre sale' },\n  'PresaleTextField.label': { fr: 'Pré-vente description', en: 'Pre sale text' },\n  'PresaleTextField.text': {\n    fr: 'Ajouter un texte de pré-vente. (facultatif)',\n    en: 'Add a pre sale text (not required)',\n  },\n  'PresaleTextField.placeholder': { fr: 'Expliquez ... (facultatif)', en: 'Explain ... (not required)' },\n\n  //\n  'OnsaleField.label': { fr: 'En solde', en: 'On sale' },\n\n  //\n  'OosField.label': { fr: 'En rupture de stock', en: 'Out of Stock' },\n\n  //\n  'CatField.label': { fr: 'Catégorie', en: 'Category' },\n  'CatField.nullValueLabel': { fr: 'Sélectionnez une catégorie ...', en: 'Select a category ...' },\n\n  //\n  'RetailPField.label': { fr: 'Prix', en: 'Price' },\n  'RetailPField.placeholder': { fr: 'Combien coûte le produit', en: 'Enter the price' },\n\n  //\n  'SalePField.label': { fr: 'Prix réduit', en: 'Sale price' },\n  'SalePField.placeholder': { fr: 'Prix réduit', en: 'Discounted price' },\n\n  //\n  'NField.label': { fr: 'Nom', en: 'Name' },\n  'NField.text': {\n    fr: `Ajoutez un nom qui décrit ce produit. Les noms peuvent contenir jusqu’à 99 caractères.\\nNous recommandons 65 caractères au max`,\n    en: 'Add a name that accurately describes the product. Names can contain up to 99 characters.\\nThough we recommend 65 characters',\n  },\n  'NField.placeholder': { fr: 'Entrez un nom clair et concis ...', en: \"Enter product's name ...\" },\n\n  //\n  'DField.label': { fr: 'Description', en: 'Description' },\n  'DField.text': { fr: `Ajoutez les caractéristiques uniques qui décrivent ce produit`, en: '' },\n  'DField.placeholder': { fr: 'Décrivez les caractéristiques et les avantages ...', en: 'Describe product ...' },\n\n  //\n  'StageField.nullValueLabel': { fr: 'Sélectionnez un stage ...', en: 'Select stage ...' },\n\n  //\n  'ExplicitField.label': { fr: 'Exclure de la boutique Facebook', en: 'Exclude from facebook Shop' },\n\n  /**\n   * ************************ FORMS\n   */\n\n  'CreateForm.submitLabel': { fr: 'Suivant', en: 'Continue' },\n  //\n  'QUpdateForm.removeFromOrderLabel': { fr: 'Retirer de la commande', en: 'Remove from order' },\n  'QUpdateForm.submitLabel': { fr: 'Sauvegarder', en: 'Update' },\n\n  //\n  'ListFilterForm.publishedOptionLabel': { fr: 'Produits publiés', en: 'Published' },\n  'ListFilterForm.pinnedOptionLabel': { fr: 'Produits épinglés', en: 'Pinned' },\n  'ListFilterForm.unpublishedOptionLabel': { fr: 'Produits non publiés', en: 'Unpublished' },\n  'ListFilterForm.explicitOptionLabel': { fr: 'Produits exclus de Facebook', en: 'Excluded from FB Shop' },\n  'ListFilterForm.publishedEmptyLabel': { fr: 'Tous les produits ...', en: 'All products ...' },\n\n  'ListFilterForm.preSaleLabel': { fr: 'En pré-vente', en: 'Pre sale' },\n  'ListFilterForm.onSaleLabel': { fr: 'En promo', en: 'On sale' },\n\n  'ListFilterForm.categoryEmptyLabel': { fr: 'Toutes les catégories ...', en: 'All categories ...' },\n  'ListFilterForm.noCategoryOptionLabel': { fr: 'Sans catégorie', en: 'No category' },\n  'ListFilterForm.Q.placeholder': {\n    fr: 'Cherchez un produit par nom, catégorie ou numero de serie ...',\n    en: 'Search products by name, category or serial number ...',\n  },\n  'ListFilterForm.submitLabel': { fr: 'Rechercher', en: 'Search' },\n\n  //\n} as TLang;\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TProduct } from '../types';\n\nclass StaffProductService extends StaffService<TProduct> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: TProduct) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<TProduct, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n\nexport type TStaffProductInstance = ReturnType<typeof StaffProduct>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (\n  orderSlug?: string,\n  filter?: { published?: 'include' | 'exclude'; atc?: 0 | 1 }\n) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale, q, ...filter };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct({}).list({ params: searchParams }), {\n    refreshDeps: [q, page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import * as React from 'react';\nimport Form, {\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  useForm,\n  TextFieldProps,\n  CheckboxFieldProps,\n  SelectFieldProps,\n  TextChoicesType,\n} from '@miq/formjs';\nimport { SupplierOrder } from './models';\nimport { ProductForm } from '../Product/forms';\nimport { TProductStageSelectFieldProps } from '../Product/forms/fields';\n\ninterface ISupplierOrderUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof SupplierOrder>;\n  fields: string[];\n}\n\nexport const SupplierOrderUpdateForm: React.FC<ISupplierOrderUpdateFormProps> = ({ instance, fields, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <SupplierOrderForm {...rest} onSubmit={handleSubmit} />;\n};\n\n//#region ==================================== SUPPLIER ORDER FORM\n\nexport const SupplierOrderForm = (props: FormProps) => <Form {...props} />;\n\nSupplierOrderForm.NameField = (props: TextFieldProps) => {\n  const { label = 'Name', text = 'Write a name to help remember your order.', error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Nom\" maxLength={99} {...rest} name=\"name\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.OrderIDField = (props: TextFieldProps) => {\n  const { label = 'Order ID', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Order ID\" maxLength={99} {...rest} name=\"order_id\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.IsPaidField = (props: CheckboxFieldProps) => {\n  const { label = 'Payé', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error} checkbox>\n      <Form.Checkbox {...rest} name=\"is_paid\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.TotalCostField = (props: TextFieldProps) => {\n  const { label = 'Coût total', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text min=\"0\" step=\"0.01\" {...rest} required type=\"number\" name=\"total_cost\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.CurrencyField = (props: SelectFieldProps & { currencies: TextChoicesType }) => {\n  const { label, text = 'Select the supplier currency.', error, currencies, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"currency\" nullValue={{ label: 'Sélectionnez une monnaie ...' }}>\n        {currencies?.map((curr) => {\n          return <Form.Option {...curr} key={curr.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.SupplierField = (props: SelectFieldProps & { suppliers: TextChoicesType }) => {\n  const { label, text = 'Select the supplier.', error, suppliers, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"supplier\" nullValue={{ label: 'Sélectionnez le supplier ...' }}>\n        {suppliers?.map((supplier) => {\n          return <Form.Option {...supplier} key={supplier.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.StageSelectField = (props: TProductStageSelectFieldProps) => (\n  <ProductForm.StageSelectField required={false} {...props} />\n);\n\n//#endregion ==================================== SUPPLIER ORDER FORM\n\ninterface ISupplierOrderProductAddFormProps extends IFormCallbackProps {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  children?: React.ReactNode;\n}\n\nexport const SupplierOrderProductAddForm = ({ children, ...props }: ISupplierOrderProductAddFormProps) => {\n  const { orderInstance, onSuccess, onError } = props;\n  const supplier = orderInstance?.supplier?.toLowerCase();\n\n  const form = useForm({ supplier_name: supplier, url: '' });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const { url } = form.values;\n\n    const handleSuccess = (res: any) => {\n      setLoading(false);\n      form.setValue('url', '');\n      return onSuccess?.(res);\n    };\n\n    const handleError = (err: any) => {\n      form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n      setLoading(false);\n      return onError?.(err);\n    };\n\n    const urlErrMsg = `Invalid Url: does not match supplier ${orderInstance.supplier}`;\n\n    switch (supplier) {\n      case 'fnova':\n        if (!url.includes('fashionnova')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postFnova(url).then(handleSuccess).catch(handleError);\n      case 'plt':\n        if (!url.includes('prettylittlething')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postPlt(url).then(handleSuccess).catch(handleError);\n\n      default:\n        if (!url.includes(supplier)) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postShein(url).then(handleSuccess).catch(handleError);\n    }\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n      <Form.Field error={form.errors.url}>\n        <div className=\"d-flex flex-column flex-md-row align-items-center\">\n          <Form.Text\n            required\n            autoFocus\n            name=\"url\"\n            type=\"url\"\n            placeholder={`Add ${supplier} product source url ...`}\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <div className=\"mt-1 mt-md-0\">\n            <Form.Submit value=\"Add product\" className=\"btn btn-primary-3\" disabled={isLoading} />\n          </div>\n        </div>\n      </Form.Field>\n\n      {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n    </Form>\n  );\n};\n\nconst u = 'https://www.fashionnova.com/products/jessa-denim-mini-dress-white';\nconst shein404 = 'https://us.shein.com/Clear-Acrylic-Frame-Glasses-p-1792787-cat-2842.html';\nconst fnovavariant = 'https://www.fashionnova.com/products/kayla-seamless-bandeau-olive?variant=12191869272188';\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport './supplier-product-list.scss';\n\nimport Staff from '@miq/staffjs';\nimport { Button, HorizontalScrollGridLayout, Icons, Pagination, ViewSection } from '@miq/componentjs';\n\nimport { StaffProduct } from '../Product';\nimport { useProductListRequest } from '../Product';\nimport { ProductForm, ProductQuickUpdateForm } from '../Product/forms';\nimport { ProductDeleteButton } from '../Product/';\nimport { CategoryChoicesType, TProduct, TProductStageData } from '../types';\n\nimport { SupplierOrder } from './models';\nimport Form, { useForm } from '@miq/formjs';\n\nexport type SupplierProductListProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nexport default function SupplierProductList({\n  orderInstance,\n  refreshOrder,\n  categories,\n  stages,\n}: SupplierProductListProps) {\n  const { ordSlug } = useParams();\n  const { res = { data: { results: [] } }, refresh } = useProductListRequest(ordSlug);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const form = useForm({ category: '' });\n\n  const updateCategories = () => {\n    const { category } = form.values;\n    if (!category) return;\n\n    orderInstance\n      .updateCategories(category, selected)\n      .then((r) => {\n        refresh();\n        form.setValue('category', '');\n      })\n      .catch((err) => {});\n  };\n\n  const isSelected = selected.length !== 0;\n\n  return (\n    <Staff.Section\n      actions={\n        isSelected && (\n          <>\n            <span className=\"p-1\" onClick={() => setSelected([])} style={{ cursor: 'pointer' }}>\n              [x]\n            </span>\n          </>\n        )\n      }\n      footer={<Pagination {...res.data} component={Staff.NavLink} to />}\n      className=\"supplier-p-list\"\n    >\n      {res.data?.results.length ? (\n        <>\n          {isSelected && (\n            <div className=\"bg-white p-1\" style={{ position: 'sticky', top: 0, zIndex: 1000 }}>\n              <Form context={form}>\n                <div className=\"d-flex\">\n                  {categories && <ProductForm.CategoryField categories={categories} error={form.errors.category} />}\n                </div>\n              </Form>\n\n              <Button className=\"btn-primary\" onClick={updateCategories}>\n                Publier\n              </Button>\n            </div>\n          )}\n\n          {res.data.results.map((item: TProduct) => (\n            <SupplierProductListItem\n              {...{ orderInstance, categories, selected, setSelected, refreshOrder, stages }}\n              instance={StaffProduct(item)}\n              key={item.slug}\n            />\n          ))}\n        </>\n      ) : null}\n    </Staff.Section>\n  );\n}\n\ntype TSPListItemProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  instance: ReturnType<typeof StaffProduct>;\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nconst ItemCheckBox = ({ instance, selected, setSelected }: TSPListItemProps) => (\n  <input\n    type=\"checkbox\"\n    name=\"selected\"\n    className=\"me-2\"\n    checked={selected.includes(instance.slug!)}\n    onChange={({ target }) => {\n      const { checked } = target;\n      if (checked) setSelected([...selected, instance.slug!]);\n      else setSelected((selected) => selected.filter((i) => i !== instance.slug));\n    }}\n  />\n);\n\nconst SupplierProductListItem = (props: TSPListItemProps) => {\n  // Used for deleted items\n  const [hide, setHide] = React.useState<boolean>(false);\n\n  const { instance, categories } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  if (hide) return null;\n\n  const { supplier_item, stage } = instance;\n  const { orderInstance, stages = [] } = props;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-items-center\">\n          <ItemCheckBox {...props} />\n\n          <div style={{ width: 48, height: 48 }} onClick={() => setOpen(!open)}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1\">\n            <div className=\"text-ellipsis\">{instance.name}</div>\n            <div className=\"text-sm\">\n              {instance.is_on_sale && instance.sale_price && (\n                <span className=\"\">\n                  {instance.sale_price} {`<-`}{' '}\n                </span>\n              )}\n              <span className=\"\">{instance.retail_price}</span>\n              <span className=\"text-muted\">\n                {' | '}\n                {supplier_item.cost} {orderInstance.currency}\n              </span>\n              <span className=\"\">\n                {' - '}\n                {instance.category_data?.name || \"' - '\"}\n                <span className=\"text-muted\">\n                  {' | '}\n                  {supplier_item.category}\n                </span>\n              </span>\n              {stageData && (\n                <span className=\"text-muted\">\n                  {' - '}\n                  {stageData.label}\n                </span>\n              )}\n\n              <a className=\"btn ms-1\" href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <ProductDeleteButton\n            instance={instance}\n            onSuccess={() => {\n              setHide(true);\n              props?.refreshOrder?.();\n            }}\n            className=\"me-2\"\n          />\n          <Staff.Link to={`./${instance.slug}/`} className=\"btn btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"suppier-p-list-item bg-white\"\n    >\n      {open && (\n        <HorizontalScrollGridLayout className=\"form-tab no-scroll-bar gap-2\">\n          <ProductQuickUpdateForm instance={instance} categories={categories} orderSlug={orderInstance?.slug} />\n\n          <div className=\"\">\n            <div className=\"mb-1\">\n              {`${supplier_item.item_id ? <span className=\"\">Item ID: {supplier_item.item_id}</span> : ''}`}\n            </div>\n            <ul>\n              {supplier_item.category && (\n                <li className=\"mb-1\">\n                  <div className=\"text-sm\">Supplier Category</div>\n                  <div className=\"text-muted\">{supplier_item.category}</div>\n                </li>\n              )}\n              <li className=\"mb-1\">\n                <div className=\"text-sm\">FOB Cost({orderInstance.currency})</div>\n                <div className=\"text-muted\">{supplier_item.cost}</div>\n              </li>\n\n              {supplier_item.url && (\n                <li className=\"\">\n                  <a href={supplier_item.url} target=\"_blank\" className=\"text-underline\" rel=\"noopener noreferrer\">\n                    View supplier product page\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        </HorizontalScrollGridLayout>\n      )}\n    </ViewSection>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Icons, Loading, ViewSection, ButtonProps } from '@miq/componentjs';\nimport { SupplierOrderForm, SupplierOrderProductAddForm, SupplierOrderUpdateForm } from './forms';\nimport SupplierProductList from './SupplierProductList';\nimport { TSupplierOrder } from '../types';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { ProductListFilterForm } from '../Product/forms';\n\nconst formFields: { [key: string]: any } = {\n  name: '',\n  order_id: '',\n  stage: '',\n  currency: 'USD',\n  supplier: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nconst mapDataToValues = (data: any = {}): TSupplierOrder => {\n  const values: any = {};\n  Object.keys(formFields).forEach((k) => {\n    values[k] = data[`${k}`] || formFields[`${k}`];\n  });\n  return values;\n};\n\nexport default function OrderUpdateView() {\n  const { ordSlug } = useParams();\n\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { suppliers, currencies } = React.useContext(SharedDataCtx) as any;\n\n  const { setValues } = form;\n  const {\n    res,\n    loading,\n    setLoading,\n    setRes: setOrder,\n    refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  // console.log(r.data.stages);\n\n  if (!instance.supplier || !instance.currency)\n    return (\n      <Staff.View title=\"Modifier une commande\" back=\"/staff/store/orders/\">\n        <Staff.Section className=\"d-flex justify-content-center mt-4\">\n          <SupplierOrderUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'currency', 'supplier']}\n            onSuccess={(res) => setOrder(res)}\n          >\n            <SupplierOrderForm.NameField required label=\"Nom\" error={form.errors.currency} />\n            <SupplierOrderForm.SupplierField\n              required\n              label=\"Supplier\"\n              suppliers={suppliers}\n              error={form.errors.supplier}\n            />\n            <SupplierOrderForm.CurrencyField\n              required\n              label=\"Supplier Currency\"\n              currencies={currencies}\n              error={form.errors.currency}\n            />\n\n            <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n          </SupplierOrderUpdateForm>\n        </Staff.Section>\n      </Staff.View>\n    );\n\n  return (\n    <Staff.View\n      title={form.values.name}\n      back=\"/staff/store/orders/\"\n      actions={\n        <Staff.NavLink to=\"settings/\">\n          <Icons.Gear />\n        </Staff.NavLink>\n      }\n    >\n      <div className=\"d-flex flex-column flex-xl-row\">\n        <div className=\"w-100\">\n          <Staff.Section header={<Header {...{ instance, setLoading, setOrder, categories: r?.data?.categories }} />}>\n            {loading ? (\n              <Loading icon />\n            ) : (\n              <SupplierProductList\n                orderInstance={instance}\n                categories={r?.data?.categories}\n                stages={r?.data?.stages}\n                refreshOrder={refreshOrder}\n              />\n            )}\n          </Staff.Section>\n        </div>\n\n        <div className=\"min-w-35 ps-md-1\">\n          <DetailDisplaySection {...{ loading, instance }} />\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst DetailDisplaySection = ({\n  loading,\n  instance,\n}: {\n  loading: boolean;\n  instance: ReturnType<typeof SupplierOrder>;\n}) => {\n  return (\n    <Staff.Section\n      border\n      className=\"bg-white mb-1\"\n      title={`Order Details${!loading && ` (${instance.products?.length})`}`}\n      text={`Supplier: ${instance.supplier} | Currency: ${instance.currency}`}\n    >\n      <div className=\"mb-2\">\n        Categories\n        <ul>\n          {instance?.by_categories\n            ?.filter((i) => i?.category__name)\n            ?.map(({ category__name: name, ...i }) => (\n              <DetailDisplaySection.Li title={name} key={name}>\n                : {i.count}\n              </DetailDisplaySection.Li>\n            ))}\n        </ul>\n      </div>\n\n      <ul className=\"mb-3\">\n        <DetailDisplaySection.Li title=\"Average cost: \">\n          {instance.avg_cost} {instance.currency}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Total cost: \">\n          {`${instance.total_cost || instance?.items_cost?.amountWithSymbol} ${instance.currency}`}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Est. revenue: \">{instance?.items_revenue?.amount}</DetailDisplaySection.Li>\n      </ul>\n    </Staff.Section>\n  );\n};\n\nDetailDisplaySection.Li = ({ children, title }: { children: React.ReactNode; title: string }) => (\n  <li>\n    <span className=\"mr-2 text-muted\">{title}</span>\n    {children}\n  </li>\n);\n\nconst Header = ({ instance, setLoading, setOrder, categories }: any) => {\n  const [tab, setTab] = React.useState<'filter' | 'add'>('filter');\n\n  const render = () => {\n    switch (tab) {\n      case 'add':\n        return (\n          <SupplierOrderProductAddForm\n            orderInstance={instance}\n            onSuccess={(res) => {\n              setLoading();\n              setOrder(res);\n            }}\n          />\n        );\n\n      default:\n        return <ProductListFilterForm categories={categories} />;\n    }\n  };\n\n  return (\n    <Staff.Section\n      border\n      title={\n        <div>\n          <HeaderButton tab={tab} onClick={() => setTab('filter')} active={tab === 'filter'}>\n            <Icons.Funnel />\n          </HeaderButton>\n        </div>\n      }\n      actions={\n        <HeaderButton tab={tab} onClick={() => setTab('add')} active={tab === 'add'}>\n          <Icons.Plus />\n        </HeaderButton>\n      }\n      className=\"bg-white mb-1\"\n    >\n      <div className=\"\" style={{ top: 0, position: 'sticky' }}>\n        {render()}\n      </div>\n    </Staff.Section>\n  );\n};\nconst HeaderButton = ({\n  children,\n  tab,\n  active,\n  ...props\n}: ButtonProps & { tab: string; children: React.ReactNode; active: boolean }) => {\n  return (\n    <Staff.Button\n      className=\"btn-primary-3\"\n      style={{ border: active ? '1px solid var(--blue-600)' : undefined }}\n      {...props}\n    >\n      {children}\n    </Staff.Button>\n  );\n};\n\nexport const OrderSettingUpdateView = () => {\n  const { ordSlug } = useParams();\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { setValues } = form;\n  const {\n    res,\n    // setRes: setOrder,\n    // refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  return (\n    <Staff.View title={`${instance.name} Order Update`} back={`/staff/store/orders/${ordSlug}/`}>\n      <SupplierOrderUpdateForm\n        {...{ instance, context: form, fields: ['is_paid', 'order_id', 'total_cost', 'stage'] }}\n        // onSuccess={(r) => setOrder({ ...res, ...r })}\n      >\n        <ViewSection border footer={<Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />}>\n          <SupplierOrderForm.IsPaidField error={form.errors.is_paid} className=\"my-2\" />\n          {form.values.is_paid && (\n            <>\n              <SupplierOrderForm.OrderIDField required={form.values.is_paid} error={form.errors.order_id} />\n              <SupplierOrderForm.TotalCostField required={form.values.is_paid} error={form.errors.total_cost} />\n            </>\n          )}\n\n          <SupplierOrderForm.StageSelectField {...{ stages: r.data.stages }} />\n        </ViewSection>\n      </SupplierOrderUpdateForm>\n    </Staff.View>\n  );\n};\n","import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { SupplierOrder, TSupplierOrderInstance } from './models';\nimport Staff from '@miq/staffjs';\n\ntype TSupplierOrderDeleteButtonProps = Omit<IFormUpdateProps<TSupplierOrderInstance>, 'context'> & {\n  label?: string;\n};\n\nexport const SupplierOrderDeleteButton: React.FC<TSupplierOrderDeleteButtonProps> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['s-order-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const SupplierOrderAddButton = (props: { onSuccess: (p?: any) => void; label?: string; className?: string }) => {\n  const { label = 'Add order' } = props;\n\n  return (\n    <Staff.Button\n      onClick={() => {\n        SupplierOrder()\n          .create({})\n          .then((r) => props?.onSuccess?.(r))\n          .catch((err: any) => {\n            // console.log(err);\n          });\n      }}\n      className={props.className}\n      requiredPerms={['store.add_supplierorder']}\n      title={'Add a new order'}\n    >\n      {label}\n    </Staff.Button>\n  );\n};\n\nexport const SupplierPrice = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { Pagination, Table } from '@miq/componentjs';\n\nimport { TSupplierOrder } from '../types';\n\nimport { SupplierOrder } from './models';\nimport { SupplierOrderAddButton, SupplierOrderDeleteButton, SupplierPrice } from './components';\n\nconst SupplierOrderRow = ({ item, removeItem }: { item: TSupplierOrder; removeItem: (payload: any) => void }) => {\n  const { name = 'New order', slug, is_paid, items, items_revenue, supplier } = item || {};\n\n  return (\n    <Table.Tr>\n      <Table.Td>\n        <Staff.Link to={`${slug}/`} className=\"\">\n          <div className={getCN(['fw-bold text-ellipsis', is_paid && 'text-line-through'])}>{name}</div>\n        </Staff.Link>\n        <span className=\"text-sm\">{item.avg_cost}</span>\n      </Table.Td>\n\n      <Table.Td>{items?.length}</Table.Td>\n\n      <Table.Td>{supplier}</Table.Td>\n\n      <Table.Td>\n        <SupplierPrice {...item.total_cost_data} />\n      </Table.Td>\n      <Table.Td>\n        <SupplierPrice {...items_revenue} />\n      </Table.Td>\n\n      <Table.Td>\n        <SupplierOrderDeleteButton instance={SupplierOrder(item)} onSuccess={() => removeItem?.({ slug })} />\n      </Table.Td>\n    </Table.Tr>\n  );\n};\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, removeItem } = useRequest(() => SupplierOrder().list({ params: { page } }), { refreshDeps: [page] });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const { items } = r;\n\n  return (\n    <Staff.View\n      title=\"Supplier Orders\"\n      back=\"/staff/store/\"\n      actions={\n        <SupplierOrderAddButton onSuccess={({ data }: any) => navigate(`${data.slug}/`)} className=\"btn-primary-3\" />\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      {Boolean(items.length) ? (\n        <Staff.Section footer={<Pagination {...r.data} component={Staff.Link} to />}>\n          <Table\n            border\n            items={items}\n            header={\n              <>\n                <Table.Th />\n                <Table.Th>Items</Table.Th>\n                <Table.Th>Supplier</Table.Th>\n\n                <Table.Th>Total Cost</Table.Th>\n                <Table.Th>Est. Revenue</Table.Th>\n                <Table.Th />\n              </>\n            }\n            renderItem={(item) => <SupplierOrderRow {...{ item, removeItem }} key={item.slug} />}\n            className=\"w-100\"\n          />\n        </Staff.Section>\n      ) : (\n        <div className=\"p-4\">\n          <div className=\"text-center\">\n            <div className=\"mb-4 text-md\">Add a supplier order to get started.</div>\n            <SupplierOrderAddButton\n              onSuccess={({ data }: any) => navigate(`${data.slug}/`)}\n              label=\"Add an order\"\n              className=\"btn-md btn-primary fw-bold\"\n            />\n          </div>\n        </div>\n      )}\n    </Staff.View>\n  );\n}\n\n// EXPORTS\n\nexport * from './models';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TSupplierOrder } from '../types';\n\nconst timeout = 10000;\n\nclass SupplierOrderService extends StaffService<TSupplierOrder> {\n  updateCategories(category: string, slugs: string[]) {\n    return this.post(`${this._path}batch/`, { slugs, category }, { timeout });\n  }\n\n  postFnova(url: string) {\n    return this.post(`${this._path}fnova/`, { url }, { timeout });\n  }\n  postPlt(url: string) {\n    return this.post(`${this._path}plt/`, { url }, { timeout });\n  }\n\n  postShein(url: string) {\n    return this.post(`${this._path}shein/`, { url }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n}\n\nexport const SupplierOrder = (data: TSupplierOrder = {}) =>\n  StaffModel<TSupplierOrder, SupplierOrderService>(data, 'supplierorders', SupplierOrderService);\n\nexport type TSupplierOrderInstance = ReturnType<typeof SupplierOrder>;\n\nexport type SupplierType = {\n  slug?: string;\n  name_choices: any;\n  created: any;\n  updated: any;\n};\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { TPriceData, TProduct } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return (\n    <Button onClick={handleClick} className=\"btn-primary btn-md fw-bold\" {...rest} disabled={instance.is_published} />\n  );\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return (\n    <Button className=\"btn-danger btn-md fw-bold\" onClick={handleClick} {...rest} disabled={!instance.is_published} />\n  );\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = TPriceData & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  inline,\n  ...props\n}: TProduct & { className?: string; style?: any; inline?: boolean | string }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className, inline && 'd-flex'])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype TCallBack<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: TCallBack, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n","import { TImg } from '@miq/componentjs';\nimport { TextChoicesType } from '@miq/formjs';\nimport { WithMetaFields } from '@miq/utiljs';\n\nexport type TPriceData = { currency: string; amount: string; amountWithSymbol: string };\nexport type TPrice = number | TPriceData;\n\nexport type TProduct = WithMetaFields<{\n  slug?: string;\n\n  category?: string;\n  category_data?: TCategory;\n  name?: string;\n\n  cover?: string;\n  cover_data?: TImg;\n  images?: string[];\n  images_data?: TImg[];\n\n  readonly name_truncated?: string;\n  description?: string;\n  retail_price?: TPrice;\n  retail_price_data?: TPriceData;\n  is_on_sale?: boolean;\n  sale_price?: TPrice;\n  sale_price_data?: TPriceData;\n  is_pre_sale?: boolean;\n  is_pre_sale_text?: string;\n  is_pre_sale_dt?: string | Date;\n  url?: string;\n\n  has_attributes?: boolean;\n  attributes?: any[];\n  sizes?: any[];\n  size_count: number | undefined;\n\n  is_pinned?: boolean;\n  is_explicit?: boolean;\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  supplier_item: SupplierItemType;\n  position?: number;\n  color_group_pk?: string;\n  stage?: string;\n  is_oos: boolean | undefined;\n\n  readonly detail_path?: string;\n\n  readonly created?: string | Date;\n  readonly updated?: string | Date;\n}>;\n\nexport type CategoryChoicesType = {\n  items: TextChoicesType;\n};\n\nexport type TProductStageData = { name: string; label: string; value: string };\n\nexport type TCategory = WithMetaFields<{\n  slug?: string;\n  supplier_item_id?: string;\n  name?: string;\n  description?: string;\n  cover?: TImg;\n  position?: number;\n\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  cover_data?: TImg;\n  products_count?: number;\n  published_count?: number;\n  draft_count?: number;\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type SupplierItemType = {\n  slug?: string;\n  item_id?: string;\n  item_sn?: string;\n  category?: string;\n  url?: string;\n  cost?: number;\n  created?: string;\n  updated?: string;\n};\n\nexport enum SupplierName {\n  SHEIN = 'SHEIN',\n  PLT = 'PLT',\n  FNOVA = 'FNOVA',\n}\n\nexport type TSupplierOrder = {\n  slug?: string;\n  name?: string;\n  supplier?: string;\n  order_id?: string;\n  products?: TProduct[];\n  items?: any[];\n  items_cost?: number;\n  items_revenue?: number;\n  avg_cost?: number;\n  by_categories?: { category__name: string; count: number }[] | undefined;\n\n  currency?: string;\n  is_paid?: boolean;\n  is_paid_dt?: string;\n  is_fulfilled_dt?: string;\n  total_cost?: number;\n  total_cost_data?: TPriceData;\n};\n\nexport type TProductSize = {\n  slug?: string;\n  name?: string;\n  code?: string;\n  quantity?: number;\n};\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { SharedDataCtx, TSDState } from '@miq/contextjs';\nimport { OrderSettingUpdateView } from './Supplier/OrderUpdateView';\n\nconst ShopStaffIndexView = React.lazy(() => import('./IndexView'));\n\nconst SupplierOrderIndexView = React.lazy(() => import('./Supplier'));\nconst SupplierOrderProductUpdateView = React.lazy(() => import('./Supplier/OrderProductUpdateView'));\nconst SupplierOrderUpdateView = React.lazy(() => import('./Supplier/OrderUpdateView'));\n\nconst CategoryIndexView = React.lazy(() => import('./Category'));\nconst CategoryUpdateView = React.lazy(() => import('./Category/views.Update'));\n\nconst ProductIndexView = React.lazy(() => import('./Product/views.Index'));\nconst ShopSettingUpdateView = React.lazy(() => import('./Setting'));\n\nexport default function ShopStaffRoutes() {\n  const { shopy_settings } = React.useContext<TSDState<{ shopy_settings: any | null }>>(SharedDataCtx);\n\n  if (!shopy_settings) return null;\n\n  return (\n    <Routes>\n      <Route\n        path=\"orders/*\"\n        element={\n          <Routes>\n            <Route path={`:ordSlug/:prodSlug/`} element={<SupplierOrderProductUpdateView />} />\n            <Route path={`:ordSlug/settings/`} element={<OrderSettingUpdateView />} />\n            <Route path={`:ordSlug/`} element={<SupplierOrderUpdateView />} />\n            <Route path=\"/*\" element={<SupplierOrderIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"products/*\"\n        element={\n          <Routes>\n            <Route path=\"/*\" element={<ProductIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"categories/*\"\n        element={\n          <Routes>\n            <Route path=\":catSlug/\" element={<CategoryUpdateView />} />\n            <Route index element={<CategoryIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route path=\"settings/\" element={<ShopSettingUpdateView />} />\n      <Route path=\"/\" element={<ShopStaffIndexView />} />\n    </Routes>\n  );\n}\n\nexport * from './types';\n\nexport { useProductListRequest } from './Product/utils';\nexport { ProductListFilterForm } from './Product/forms';\nexport { ProductListItem } from './Product/components';\nexport { ProductPriceDisplay } from './components';\nexport { SizeQuantityField, SizeSelectField } from './Product/Size';\n"],"names":["CartItemDeleteButton","cartInstance","itemSlug","props","renderHeader","renderFooter","setOpen","className","onClick","destroyItem","then","r","onSuccess","catch","err","onError","render","getCN","CartDeleteButton","instance","label","destroy","res","handleDelete","ItemProductCard","product","size","ProductImage","width","height","truncateStr","name","inline","slug","style","src","cover_data","CustomerCard","data","first_name","last_name","email","phone","CustomerSelect","customers","onItemClick","map","cust","CustomerLNameField","text","error","fieldCN","React","setCustomers","onCustomerSelect","allowSuggestions","rest","required","maxLength","minLength","onDebounce","value","length","Customer","find","items","Response","Boolean","p","CustomerFNameField","CustomerEmailField","CustomerPhoneField","CustomerFields","LName","FName","Email","Phone","SalesIndexView","useRequest","Cart","list","loading","refresh","isSuccess","title","actions","to","i","customer_data","cart","marginBottom","Date","created","toLocaleDateString","undefined","day","weekday","month","year","footer","products","retail_price_data","total","subtotal","uuid","CartCreateView","CartUpdateView","SalesStaffRoutes","path","element","CustomerService","q","this","params","StaffService","StaffModel","CartService","sizeSlug","post","_path","prodSlug","qty","values","timeout","delete","SizeUpdateForm","productInstance","form","useForm","code","quantity","context","onSubmit","e","preventDefault","patchSize","handleError","SizeNameField","errors","SizeCodeField","SizeQuantityField","SizeDeleteButton","commonSizes","xs","s","m","l","xl","formDefaultValues","SizeAddForm","postSize","setValues","Object","keys","key","placeholder","type","min","SizeSelectField","sizes","nullValue","toUpperCase","deleteSize","ProductImagesAddButton","multiple","onSuccessMulti","resArray","imgsArray","filter","images","includes","update","ProductDeleteButton","emitter","ProductListItem","item","open","StaffProduct","border","header","ProductListItemHeader","orderInstance","stages","supplier_item","cost","stage","stageData","is_oos","name_truncated","show","is_published","export","currency","is_pinned","padding","stopPropagation","category_data","category","size_count","href","url","target","rel","ProductCardItem","ProductCardList","itempath","useSearchParams","useParams","i18n","window","NameField","lang","DescriptionField","CategoryField","categories","cat","SalePriceField","step","OnSaleCheckboxField","checkbox","PresaleCheckboxField","OosCheckboxField","PresaleTextField","RetailPriceField","StageSelectField","IsExplicitCheckboxField","k","ProductQuickUpdateForm","orderSlug","description","retail_price","is_pre_sale","is_pre_sale_text","fields","ProductUpdateForm","ProductForm","SupplierOrder","children","isR","onWillSubmit","fd","forEach","field","ProductCreateForm","create","ProductFields","ProductListFilterForm","setParams","get","setQ","action","method","set","onChange","Category","Published","Sale","PreSale","QuerySelectField","emptyLabel","QueryToggleField","inputId","id","checked","htmlFor","fr","en","StaffProductService","patch","attrSlug","dt_published","useProductListRequest","page","published","presale","sale","searchParams","supplier_order_slug","refreshDeps","SupplierOrderUpdateForm","SupplierOrderForm","OrderIDField","IsPaidField","TotalCostField","CurrencyField","currencies","curr","SupplierField","suppliers","supplier","SupplierOrderProductAddForm","toLowerCase","supplier_name","isLoading","setLoading","handleSuccess","setValue","setErrors","urlErrMsg","postFnova","postPlt","postShein","autoFocus","disabled","SupplierProductList","refreshOrder","ordSlug","results","selected","setSelected","isSelected","cursor","component","Staff","position","top","zIndex","updateCategories","SupplierProductListItem","ItemCheckBox","hide","setHide","is_on_sale","sale_price","Product","item_id","formFields","order_id","is_paid","total_cost","mapDataToValues","OrderUpdateView","SharedDataCtx","retrieve","setOrder","setRes","back","Header","icon","DetailDisplaySection","by_categories","category__name","Li","count","avg_cost","items_cost","amountWithSymbol","items_revenue","amount","tab","setTab","HeaderButton","active","OrderSettingUpdateView","SupplierOrderDeleteButton","SupplierOrderAddButton","requiredPerms","SupplierPrice","SupplierOrderRow","removeItem","total_cost_data","SupplierOrderIndexView","navigate","useNavigate","renderItem","SupplierOrderService","slugs","PublishButton","publish","UnPublishButton","unpublish","PriceDisplay","lineThrough","ProductPriceDisplay","sale_price_data","isSale","PublishedIcon","ToastEmitter","CrudEmitter","args","prefix","payload","emit","EventEmitter","useCrudEmitter","callbacks","match","on","onCreate","call","onUpdate","onDestroy","SupplierName","ShopStaffIndexView","SupplierOrderProductUpdateView","SupplierOrderUpdateView","CategoryIndexView","CategoryUpdateView","ProductIndexView","ShopSettingUpdateView","ShopStaffRoutes","shopy_settings","index"],"sourceRoot":""}