{"version":3,"file":"static/js/750.a3916562.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/productAttribute/buttons.tsx","../../../../shopy/shopy-storejs/src/productAttribute/index.tsx","../../../../shopy/shopy-storejs/src/product/views.Update/tabs.InventoryUpdate.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { TFormCallbackProps } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\n\nimport { TStaffProductInstance } from '../product/models';\nimport { TProductAttribute } from '../types';\n\nexport function AttributeDeleteButton({\n  data,\n  productInstance,\n  ...props\n}: { data: TProductAttribute; productInstance: TStaffProductInstance } & TFormCallbackProps) {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onFailure, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer un attribut</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteAttribute(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onFailure?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this attribute:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"attr-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n}\n","import * as React from 'react';\nimport Form, { TextFieldProps, TFormCallbackProps, useForm } from '@miq/formjs';\n\nimport { TProductAttribute } from '../types';\nimport { StaffProduct } from '../product/models';\nimport { AttributeDeleteButton } from './buttons';\n\ntype TAttrFormProps = TFormCallbackProps & {\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\nexport const AttributeUpdateForm = ({\n  data,\n  productInstance,\n  ...props\n}: TAttrFormProps & { data: TProductAttribute }) => {\n  const form = useForm<TProductAttribute>({ name: data.name || '', value: data.value || '' });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onFailure } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchAttribute(data.slug, form.values)\n          .then((res) => onSuccess?.(res))\n          .catch((err) => {\n            form.handleError(err);\n            return onFailure?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-md-6 gap-1\">\n        <div className=\"span-md-2\">\n          <AttrNameField error={form.errors.name} />\n        </div>\n\n        <div className=\"span-md-3\">\n          <AttrValueField error={form.errors.value} className=\"\" />\n        </div>\n\n        <div className=\"span-md-1\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <AttributeDeleteButton {...{ productInstance, data, onSuccess, onFailure }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst formDefaultValues = { name: '', value: '' };\n\nexport const AttributeCreateForm = ({ productInstance, ...props }: TAttrFormProps) => {\n  const form = useForm(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postAttribute(form.values)\n          .then((res) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err) => {\n            form.handleError(err);\n            return props?.onFailure?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-md-6 gap-1\">\n        <div className=\"span-md-2\">\n          <AttrNameField error={form.errors.name} />\n        </div>\n\n        <div className=\"span-md-3\">\n          <AttrValueField error={form.errors.value} className=\"\" />\n        </div>\n\n        <div className=\"span-md-1\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\n// =============================================================================\n//                   FIELDS\n// =============================================================================\n\nconst AttrNameField = (props: TextFieldProps) => {\n  const { label, text, error, placeholder = `Entrez le nom de l'attribut ...`, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder={placeholder} maxLength={30} minLength={2} {...rest} required name=\"name\" />\n    </Form.Field>\n  );\n};\n\nconst AttrValueField = (props: TextFieldProps) => {\n  const { label, text, error, placeholder = `Entrez la valuer de l'attribut ...`, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder={placeholder} maxLength={99} minLength={2} {...rest} required name=\"value\" />\n    </Form.Field>\n  );\n};\n","import * as React from 'react';\n\nimport lang from '../views.lang';\n\nimport Staff from '@miq/staffjs';\nimport { Button } from '@miq/componentjs';\n\nimport { SizeAddForm, SizeUpdateForm } from '../../productSize';\nimport { AttributeCreateForm, AttributeUpdateForm } from '../../productAttribute';\n\nimport { TProductUpdateTabProps } from './utils';\n\nconst { i18n } = window;\n\nconst SizeSection = (props: TProductUpdateTabProps) => {\n  const [addSize, setAddSize] = React.useState(false);\n  const { instance, onUpdate } = props;\n\n  return (\n    <Staff.Section\n      title=\"Tailles\"\n      text=\"Ajouter des tailles\"\n      actions={\n        <Button onClick={() => setAddSize(!addSize)} className=\"btn-primary-3\">\n          Ajouter une taille\n        </Button>\n      }\n    >\n      {addSize && (\n        <Staff.Section text=\"Ajouter une taille\">\n          <SizeAddForm productInstance={instance} onSuccess={({ data }) => onUpdate(data)} />\n        </Staff.Section>\n      )}\n\n      {instance.sizes?.map((size) => {\n        return (\n          <SizeUpdateForm\n            data={size}\n            productInstance={instance}\n            onSuccess={({ data }) => onUpdate(data)}\n            key={size.slug}\n          />\n        );\n      })}\n    </Staff.Section>\n  );\n};\n\nconst AttributeSection = (props: TProductUpdateTabProps) => {\n  const { instance, onUpdate } = props;\n  const [addAtr, setAddAtr] = React.useState(false);\n\n  return (\n    <Staff.Section\n      title=\"Attributs\"\n      actions={\n        <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n          Ajouter un attribut\n        </Button>\n      }\n    >\n      {addAtr && (\n        <Staff.Section text=\"Ajouter un attribut au produit.\">\n          <AttributeCreateForm productInstance={instance} onSuccess={({ data }) => onUpdate(data)} />\n        </Staff.Section>\n      )}\n\n      {instance?.attributes?.map((attr) => (\n        <div className=\"mb-1\" key={attr.slug}>\n          <AttributeUpdateForm data={attr} productInstance={instance} onSuccess={({ data }) => onUpdate(data)} />\n        </div>\n      ))}\n    </Staff.Section>\n  );\n};\n\nexport default function ProductUpdateInventoryTab(props: TProductUpdateTabProps) {\n  return (\n    <Staff.Section title={i18n(lang, 'InventoryTab.title')}>\n      <SizeSection {...props} />\n      <AttributeSection {...props} />\n    </Staff.Section>\n  );\n}\n"],"names":["AttributeDeleteButton","data","productInstance","props","slug","onSuccess","onFailure","rest","renderHeader","renderFooter","setOpen","className","onClick","deleteAttribute","then","res","catch","err","render","name","AttributeUpdateForm","form","useForm","value","context","onSubmit","e","preventDefault","patchAttribute","values","handleError","AttrNameField","error","errors","AttrValueField","formDefaultValues","AttributeCreateForm","postAttribute","setValues","label","text","placeholder","maxLength","minLength","required","i18n","window","SizeSection","React","addSize","setAddSize","instance","onUpdate","title","actions","sizes","map","size","AttributeSection","addAtr","setAddAtr","attributes","attr","ProductUpdateInventoryTab","lang"],"sourceRoot":""}