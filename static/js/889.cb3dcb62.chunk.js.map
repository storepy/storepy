{"version":3,"file":"static/js/889.cb3dcb62.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-salejs/src/cart/components.tsx","../../../../shopy/shopy-salejs/src/cart/utils.ts","../../../../shopy/shopy-salejs/src/cart/views.UpdateItems.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { truncateStr } from '@miq/utiljs';\nimport { ProductPriceDisplay, TProduct, TProductSize } from '@shopy/storejs';\n\nexport const ItemProductCard = ({ product, size }: { product: TProduct; size: TProductSize }) => (\n  <div className=\"d-flex align-items-center\">\n    <ProductImage {...{ product, width: 60, height: 60 }} />\n    <div className=\"flex-1 rounded p-1 \">\n      <div className=\"fw-bold\">{truncateStr(product?.name, 0, 25)}</div>\n      <ProductPriceDisplay {...product} inline />\n      {size && (\n        <div>\n          <span className=\"me-1\">Size:</span>\n          <span className=\"text-sm\">{size?.name}</span>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport const ProductImage = ({\n  product,\n  width,\n  height,\n  ...props\n}: {\n  product: TProduct;\n  width?: number | string;\n  height?: number | string;\n}) =>\n  product?.slug || product.meta_slug ? (\n    <div {...props} style={{ width: width, height: height }}>\n      <Staff.Img.Square slug=\"slug\" src=\"src\" {...product.cover_data} className=\"rounded\" />\n    </div>\n  ) : null;\n","import { getStaffModel, StaffService } from '@miq/staffjs';\nimport { TPriceData, TProductSize } from '@shopy/storejs';\n\nimport { TCustomer } from '../customer';\n\nconst timeout = 5000;\n\nexport type TAPIOrderItem = {\n  slug: string;\n  product: {\n    // slug: string;\n    meta_slug: string;\n    name: string;\n    name_truncated: string;\n    cover: string;\n    cover_data: {\n      src: string;\n      src_mobile: string;\n      thumb: string;\n      thumb_sq: string;\n      alt_text: string;\n      caption: string;\n    };\n    price: TPriceData;\n    retail_price: string;\n    retail_price_data: TPriceData;\n    sale_price: string;\n    sale_price_data: TPriceData;\n    is_on_sale: boolean;\n    is_oos: boolean;\n  };\n  size: string;\n  size_data: TProductSize;\n  quantity: number;\n};\n\nexport type TAPICart = {\n  slug?: string;\n  customer?: string;\n  customer_name?: string;\n  products?: string[];\n  items?: TAPIOrderItem[];\n};\n\nexport type TOrderItem = Record<string, any> & {\n  order?: string;\n  product?: string;\n  product_data?: any;\n  name?: string;\n  price?: string;\n  size?: string;\n  was_sale?: boolean;\n  img?: string;\n  quantity?: number;\n};\n\nexport type TCart = {\n  slug?: string;\n  customer?: string;\n  customer_name?: string;\n  customer_data?: TCustomer;\n  notes?: string;\n  is_paid?: boolean;\n\n  dt_delivery?: string;\n  items?: TOrderItem[];\n  products?: string[];\n\n  is_placed?: boolean;\n  subtotal?: TPriceData;\n  total?: TPriceData;\n\n  created?: string;\n  updated?: string;\n};\n\nclass CartService extends StaffService<TCart> {\n  get createdDt() {\n    return this.data?.created\n      ? new Date(this.data.created!).toLocaleDateString(undefined, {\n          day: '2-digit',\n          weekday: 'short',\n          month: 'short',\n          year: '2-digit',\n        })\n      : null;\n  }\n\n  get canDestroy(): boolean {\n    return this?.data?.products?.length === 0;\n  }\n\n  place() {\n    return this.post(`${this._path}place/`, {}, { timeout });\n  }\n\n  addItems(values: { size: string; quantity: number; product_slug: string }[]) {\n    return this.post(`${this._path}products/`, values);\n  }\n\n  addItem(prodSlug: string, values: { size: string; quantity: number }) {\n    return this.post(`${this._path}product/${prodSlug}/`, values);\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(itemSlug: string) {\n    return this.delete(`${this._path}item/${itemSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = getStaffModel<TCart, CartService>('carts', CartService);\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useDocumentTitle } from '@miq/hookjs';\nimport {\n  Button,\n  HorizontalScrollGridLayout,\n  Loading,\n  SectionHeader,\n  StickyFooterLayout,\n  ViewHeaderBackLink,\n} from '@miq/componentjs';\n\nimport { uuid } from '@miq/utiljs';\nimport { TProduct, TProductSize, ProductListFilterForm } from '@shopy/storejs';\n\nimport { Cart, TCartInstance } from './utils';\nimport { ItemProductCard, ProductImage } from './components';\nimport { getCartPath } from './buttons';\nimport { SharedDataCtx } from '@miq/contextjs';\n\ntype TProps = {\n  cart: TCartInstance;\n  onSuccess: (res: any) => void;\n  onError?: (err: any) => void;\n};\n\ntype TSelect = TProduct & { sizeSlug: string };\n\nexport default function CartUpdateItemsView() {\n  useDocumentTitle('Add items to cart - Sales');\n\n  const { cartSlug } = useParams();\n\n  //   const { res, setRes } = useRequest(() => Cart({ slug: cartSlug }).retrieve(), {\n  //     refreshDeps: [cartSlug],\n  //     // onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n  //     onError: ({ response }) => {\n  //       // if (response?.status === 404) return navigate('../');\n  //     },\n  //   });\n\n  //   const { res: productRes, loading } = useProductListRequest({}, { atc: '1' });\n  const ctx = React.useContext(SharedDataCtx);\n  const { cart: cartData, products = [], reload } = ctx;\n\n  React.useEffect(() => {\n    reload();\n  }, [cartSlug]);\n\n  const [selected, setSelected] = React.useState<TSelect[]>([]);\n\n  if (cartSlug !== cartData?.slug || !ctx.isLoaded) return <Loading />;\n\n  const cart = Cart(cartData || {});\n\n  const cartSizes = cart?.items?.map(({ size }) => size) || [];\n\n  const addItems = () => {\n    const values = selected.map((s) => ({ product_slug: s.meta_slug!, size: s.sizeSlug, quantity: 1 }));\n\n    if (values.length === 0) return;\n\n    cart\n      .addItems(values)\n      .then((r) => {\n        setSelected([]);\n        ctx.updateData({ cart: r.data });\n        //   props?.onSuccess?.(r);\n      })\n      .catch((err) => {\n        // props?.onError?.(err)\n      });\n  };\n\n  return (\n    <StickyFooterLayout\n      style={{ zIndex: 10000 }}\n      className=\"bg-white p-4 rounded\"\n      header={<CartAddItemViewHeader {...{ cart, selected }} />}\n      footer={\n        <div className=\"miq-container center\">\n          <div className=\"d-flex justify-content-center bg-white p-2\">\n            <div>\n              <Button disabled={selected.length === 0} onClick={() => addItems()} className=\"btn-primary fw-bold\">\n                Ajouter\n              </Button>\n            </div>\n          </div>\n        </div>\n      }\n    >\n      <Staff.Section header={<ProductListFilterForm fields={[]} />} className=\"miq-container center px-1\">\n        {products.map((product) => {\n          const { sizes = [] } = product;\n\n          return sizes\n            .filter(({ quantity }) => quantity >= 1)\n            .filter((i) => !cartSizes.includes(i.slug))\n            .map((size: TProductSize) => {\n              const checked = selected.find(({ sizeSlug }) => sizeSlug === size?.slug);\n              const isChecked = Boolean(checked);\n              return (\n                <div\n                  className=\"d-flex align-items-center mb-1 border-1 rounded\"\n                  key={uuid()}\n                  style={{ padding: 6 }}\n                  onClick={() => {\n                    if (isChecked) setSelected((items) => items.filter(({ sizeSlug }) => sizeSlug != size?.slug));\n                    else setSelected([{ ...product, sizeSlug: size.slug }, ...selected]);\n                  }}\n                >\n                  <div className=\"flex-1\">\n                    <ItemProductCard {...{ product, size }} />\n                  </div>\n\n                  <div style={{ minWidth: 24, marginLeft: 3, marginRight: 6 }}>\n                    <input type=\"checkbox\" name=\"selected\" className=\"me-2\" checked={isChecked} onChange={() => {}} />\n                  </div>\n                </div>\n              );\n            });\n        })}\n      </Staff.Section>\n    </StickyFooterLayout>\n  );\n}\n\nconst CartAddItemViewHeader = ({ cart, ...props }: TProps & { selected: TSelect[] }) => {\n  const { selected = [] } = props;\n\n  return (\n    <div className=\"cart-add-item-view-header miq-container center px-1 pt-2\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"me-1\">\n          <ViewHeaderBackLink to={getCartPath(cart)} title=\"Annuler\" prefix=\"miq-staff\">\n            «\n          </ViewHeaderBackLink>\n        </div>\n\n        <SectionHeader\n          title={<span className=\"fw-bold mt-2\">Ajouter des produits</span>}\n          text=\"Tap on a product to add to the cart/ Cliquez sur un produit pour l'ajouter au panier\"\n          // actions={<div onClick={() => setOpen?.(false)}> [ x ]</div>}\n        />\n      </div>\n\n      <HorizontalScrollGridLayout className=\"cart-items-preview\" style={{ minHeight: 48, paddingBottom: 0 }}>\n        {cart?.items?.map((i) => {\n          console.log(i.product);\n\n          return (\n            <div key={uuid()}>\n              <ProductImage product={i.product} {...{ width: 48, height: 48 }} />\n            </div>\n          );\n        })}\n        {selected.map((i) => {\n          return (\n            <div key={uuid()}>\n              <ProductImage product={i} {...{ width: 48, height: 48 }} />\n            </div>\n          );\n        })}\n      </HorizontalScrollGridLayout>\n    </div>\n  );\n};\n"],"names":["ItemProductCard","product","size","className","ProductImage","width","height","truncateStr","name","inline","props","slug","meta_slug","style","src","cover_data","timeout","CartService","this","data","created","Date","toLocaleDateString","undefined","day","weekday","month","year","products","length","post","_path","values","prodSlug","itemSlug","delete","StaffService","Cart","getStaffModel","CartUpdateItemsView","useDocumentTitle","cartSlug","useParams","ctx","React","SharedDataCtx","cartData","cart","reload","selected","setSelected","isLoaded","cartSizes","items","map","zIndex","header","CartAddItemViewHeader","footer","disabled","onClick","s","product_slug","sizeSlug","quantity","addItems","then","r","updateData","catch","err","fields","sizes","filter","i","includes","checked","find","isChecked","Boolean","padding","minWidth","marginLeft","marginRight","type","onChange","uuid","to","getCartPath","title","prefix","text","minHeight","paddingBottom","console","log"],"sourceRoot":""}