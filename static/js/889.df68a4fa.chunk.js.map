{"version":3,"file":"static/js/889.df68a4fa.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-salejs/src/cart/utils.ts","../../../../shopy/shopy-salejs/src/cart/views.UpdateItems.tsx"],"sourcesContent":["import { getStaffModel, StaffService } from '@miq/staffjs';\nimport { TPriceData, TProductSize } from '@shopy/storejs';\n\nimport { TCustomer } from '../customer';\n\nconst timeout = 5000;\n\nexport type TAPIOrderItem = {\n  slug: string;\n  product: {\n    // slug: string;\n    meta_slug: string;\n    name: string;\n    name_truncated: string;\n    cover: string;\n    cover_data: {\n      src: string;\n      src_mobile: string;\n      thumb: string;\n      thumb_sq: string;\n      alt_text: string;\n      caption: string;\n    };\n    price: TPriceData;\n    retail_price: string;\n    retail_price_data: TPriceData;\n    sale_price: string;\n    sale_price_data: TPriceData;\n    is_on_sale: boolean;\n    is_oos: boolean;\n  };\n  size: string;\n  size_data: TProductSize;\n  quantity: number;\n};\n\nexport type TAPICart = {\n  slug?: string;\n  customer?: string;\n  customer_name?: string;\n  products?: string[];\n  items?: TAPIOrderItem[];\n};\n\nexport type TOrderItem = Record<string, any> & {\n  order?: string;\n  product?: string;\n  product_data?: any;\n  name?: string;\n  price?: string;\n  size?: string;\n  was_sale?: boolean;\n  img?: string;\n  quantity?: number;\n};\n\nexport type TCart = {\n  slug?: string;\n  customer?: string;\n  customer_name?: string;\n  customer_data?: TCustomer;\n  notes?: string;\n  is_paid?: boolean;\n\n  dt_delivery?: string;\n  items?: TOrderItem[];\n  products?: string[];\n\n  is_placed?: boolean;\n  subtotal?: TPriceData;\n  total?: TPriceData;\n\n  created?: string;\n  updated?: string;\n};\n\nclass CartService extends StaffService<TCart> {\n  get createdDt() {\n    return this.data?.created\n      ? new Date(this.data.created!).toLocaleDateString(undefined, {\n          day: '2-digit',\n          weekday: 'short',\n          month: 'short',\n          year: '2-digit',\n        })\n      : null;\n  }\n\n  get canDestroy(): boolean {\n    return this?.data?.products?.length === 0;\n  }\n\n  mark_paid() {\n    return this.post(`${this._path}pay/`, {}, { timeout });\n  }\n\n  place() {\n    return this.post(`${this._path}place/`, {}, { timeout });\n  }\n\n  addItems(values: { size: string; quantity: number; product_slug: string }[]) {\n    return this.post(`${this._path}products/`, values);\n  }\n\n  addItem(prodSlug: string, values: { size: string; quantity: number }) {\n    return this.post(`${this._path}product/${prodSlug}/`, values);\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(itemSlug: string) {\n    return this.delete(`${this._path}item/${itemSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = getStaffModel<TCart, CartService>('carts', CartService);\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n","import * as React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useDocumentTitle } from '@miq/hookjs';\nimport {\n  Button,\n  HorizontalScrollGridLayout,\n  Loading,\n  SectionHeader,\n  StickyFooterLayout,\n  ViewHeaderBackLink,\n} from '@miq/componentjs';\n\nimport { uuid } from '@miq/utiljs';\nimport { TProduct, TProductSize, ProductListFilterForm } from '@shopy/storejs';\n\nimport { Cart, TCartInstance } from './utils';\nimport { ItemProductCard, ProductImage } from './components';\nimport { getCartPath } from './buttons';\nimport { SharedDataCtx } from '@miq/contextjs';\n\ntype TSelect = TProduct & { sizeSlug: string };\n\nexport default function CartUpdateItemsView() {\n  useDocumentTitle('Add items to cart - Sales');\n\n  const ctx = React.useContext(SharedDataCtx);\n  const { cart: cartData, products = [], reload } = ctx;\n\n  const [params] = useSearchParams();\n  const { cartSlug } = useParams();\n\n  React.useEffect(() => {\n    reload({ params });\n  }, [cartSlug, params]);\n\n  const [selected, setSelected] = React.useState<TSelect[]>([]);\n\n  console.log(products.length);\n\n  if (cartSlug !== cartData?.slug || !ctx.isLoaded) return <Loading />;\n\n  const cart = Cart(cartData || {});\n\n  const addItems = () => {\n    const values = selected.map((s) => ({ product_slug: s.meta_slug!, size: s.sizeSlug, quantity: 1 }));\n\n    if (values.length === 0) return;\n\n    cart\n      .addItems(values)\n      .then((r) => {\n        setSelected([]);\n        ctx.updateData({ cart: r.data });\n      })\n      .catch((err) => {\n        // props?.onError?.(err)\n      });\n  };\n\n  const cartSizes = cart?.items?.map(({ size }) => size) || [];\n\n  return (\n    <StickyFooterLayout\n      style={{ zIndex: 10000 }}\n      className=\"bg-white p-4 rounded\"\n      header={<CartAddItemViewHeader {...{ cart, selected }} />}\n      footer={\n        <div className=\"miq-container center\">\n          <div className=\"d-flex justify-content-center bg-white p-2\">\n            <div>\n              <Button\n                disabled={selected.length === 0}\n                onClick={() => addItems()}\n                className=\"btn-primary btn-md fw-bold\"\n              >\n                Ajouter\n              </Button>\n            </div>\n          </div>\n        </div>\n      }\n    >\n      <Staff.Section\n        header={\n          <div className=\"p-2\">\n            <ProductListFilterForm fields={[]} />\n          </div>\n        }\n        className=\"miq-container center px-1\"\n      >\n        {products.length > 0 ? (\n          <>\n            {products.map((product: TProduct) => {\n              const { sizes = [] } = product;\n\n              return sizes\n                .filter(({ quantity }) => quantity >= 1)\n                .filter((i) => !cartSizes.includes(i.slug))\n                .map((size: TProductSize) => {\n                  const checked = selected.find(({ sizeSlug }) => sizeSlug === size?.slug);\n                  const isChecked = Boolean(checked);\n\n                  return (\n                    <div\n                      className=\"d-flex align-items-center mb-1 border-1 rounded\"\n                      key={uuid()}\n                      style={{ padding: 6 }}\n                      onClick={() => {\n                        if (isChecked) setSelected((items) => items.filter(({ sizeSlug }) => sizeSlug != size?.slug));\n                        else setSelected([{ ...product, sizeSlug: size.slug }, ...selected]);\n                      }}\n                    >\n                      <div className=\"flex-1\">\n                        <ItemProductCard {...{ product, size }} />\n                      </div>\n\n                      <div style={{ minWidth: 24, marginLeft: 3, marginRight: 6 }}>\n                        <input\n                          type=\"checkbox\"\n                          name=\"selected\"\n                          className=\"me-2\"\n                          checked={isChecked}\n                          onChange={() => {}}\n                        />\n                      </div>\n                    </div>\n                  );\n                });\n            })}\n          </>\n        ) : (\n          <>\n            <div className=\"text-center\">\n              <div className=\"text-md\">Aucun produit trouvé</div>\n              <div className=\"text-muted\">Re-éssayez votre recherche avec des mots-clés plus précis.</div>\n            </div>\n          </>\n        )}\n      </Staff.Section>\n    </StickyFooterLayout>\n  );\n}\n\nconst CartAddItemViewHeader = ({ cart, ...props }: { cart: TCartInstance; selected: TSelect[] }) => {\n  const { selected = [] } = props;\n\n  return (\n    <div className=\"cart-add-item-view-header miq-container center px-1 pt-2\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"me-1\">\n          <ViewHeaderBackLink to={getCartPath(cart)} title=\"Annuler\" prefix=\"miq-staff\">\n            «\n          </ViewHeaderBackLink>\n        </div>\n\n        <SectionHeader\n          title={<span className=\"mt-2\">Ajouter des produits au panier</span>}\n          text=\"Tap on a product to add to the cart/ Cliquez sur un produit pour l'ajouter au panier\"\n          // actions={<div onClick={() => setOpen?.(false)}> [ x ]</div>}\n        />\n      </div>\n\n      <HorizontalScrollGridLayout className=\"cart-items-preview\" style={{ minHeight: 48, paddingBottom: 0 }}>\n        {cart?.items?.map((i) => {\n          return (\n            <div key={uuid()}>\n              <ProductImage product={i.product} {...{ width: 48, height: 48 }} />\n            </div>\n          );\n        })}\n        {selected.map((i) => {\n          return (\n            <div key={uuid()}>\n              <ProductImage product={i} {...{ width: 48, height: 48 }} />\n            </div>\n          );\n        })}\n      </HorizontalScrollGridLayout>\n    </div>\n  );\n};\n"],"names":["timeout","CartService","this","data","created","Date","toLocaleDateString","undefined","day","weekday","month","year","products","length","post","_path","values","prodSlug","itemSlug","delete","StaffService","Cart","getStaffModel","CartUpdateItemsView","useDocumentTitle","ctx","React","SharedDataCtx","cartData","cart","reload","useSearchParams","params","cartSlug","useParams","selected","setSelected","console","log","slug","isLoaded","cartSizes","items","map","size","style","zIndex","className","header","CartAddItemViewHeader","footer","disabled","onClick","s","product_slug","meta_slug","sizeSlug","quantity","addItems","then","r","updateData","catch","err","fields","product","sizes","filter","i","includes","checked","find","isChecked","Boolean","padding","minWidth","marginLeft","marginRight","type","name","onChange","uuid","to","getCartPath","title","prefix","text","minHeight","paddingBottom","width","height"],"sourceRoot":""}