{"version":3,"file":"static/js/972.73858689.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-salejs/src/cart/buttons.tsx","../../../../shopy/shopy-salejs/src/cart/components.tsx","../../../../shopy/shopy-salejs/src/cart/models.tsx","../../../../shopy/shopy-salejs/src/cart/views.AddItem.tsx","../../../../shopy/shopy-salejs/src/cart/views.Update.tsx","../../../../shopy/shopy-salejs/src/customer/components.tsx","../../../../shopy/shopy-salejs/src/customer/forms/index.tsx","../../../../shopy/shopy-salejs/src/customer/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\n\nimport { TCartInstance } from './models';\nimport { TCart } from './types';\n\nexport const CartItemDeleteButton = ({\n  cartInstance,\n  itemSlug,\n  ...props\n}: {\n  itemSlug: string;\n  cartInstance: TCartInstance;\n  onSuccess?: (res?: any) => void;\n  onError?: (res?: any) => void;\n}) => {\n  if (!itemSlug) return null;\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer ce produit</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              cartInstance\n                .destroyItem(itemSlug)\n                .then((r) => {\n                  props?.onSuccess?.(r);\n                  // setOpen(false);\n                })\n                .catch((err) => {\n                  props?.onError?.(err);\n                })\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Voulez-vous supprimer ce produit</div>}\n      className={getCN(['cart-item-delete-button btn-danger-3'])}\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n\nexport const CartDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TCart>, 'context'> & { label?: string; instance: TCartInstance }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    if (!instance.canDestroy) return;\n\n    instance\n      .destroy()\n      .then((res) => {\n        onSuccess?.(res);\n        setOpen?.(false);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      disabled={!instance.canDestroy}\n      title={instance.canDestroy ? 'Delete this cart' : \"Can't delete a cart with items\"}\n      renderHeader={() => <div>Supprimer ce panier</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['cart-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { truncateStr } from '@miq/utiljs';\nimport { ProductPriceDisplay, TProduct, TProductSize } from '@shopy/storejs';\n\nexport const ItemProductCard = ({ product, size }: { product: TProduct; size: TProductSize }) => (\n  <div className=\"d-flex align-items-center\">\n    <ProductImage {...{ product, width: 60, height: 60 }} />\n    <div className=\"flex-1 rounded p-1 \">\n      <div className=\"fw-bold\">{truncateStr(product?.name, 0, 25)}</div>\n      <ProductPriceDisplay {...product} inline />\n      {size && (\n        <div>\n          <span className=\"me-1\">Size:</span>\n          <span className=\"text-sm\">{size?.name}</span>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport const ProductImage = ({\n  product,\n  width,\n  height,\n  ...props\n}: {\n  product: TProduct;\n  width?: number | string;\n  height?: number | string;\n}) =>\n  product?.slug ? (\n    <div {...props} style={{ width: width, height: height }}>\n      <Staff.Img.Square slug=\"slug\" src=\"src\" {...product.cover_data} className=\"rounded\" />\n    </div>\n  ) : null;\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCart } from './types';\n\nconst timeout = 5000;\n\n/**\n * CART\n */\n\nclass CartService extends StaffService<TCart> {\n  get canDestroy(): boolean {\n    return this?.data?.products?.length === 0;\n  }\n  addItems(values: { size: string; quantity: number; product_slug: string }[]) {\n    return this.post(`${this._path}products/`, values);\n  }\n\n  addItem(prodSlug: string, values: { size: string; quantity: number }) {\n    return this.post(`${this._path}product/${prodSlug}/`, values);\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(itemSlug: string) {\n    return this.delete(`${this._path}item/${itemSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = (data: TCart = {}) => {\n  return StaffModel<TCart, CartService>(data, 'carts', CartService);\n};\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n\n// export const Cart = (data: any) => {\n//   getIsValid(data: Record<string, any>): boolean {\n//     return data && data.slug && data.products && Boolean(data.items.length);\n//   }\n\n//   getItem(meta_slug: string) {\n//     return;\n//     // return this.items?.find((i: any) => i.product.meta_slug === meta_slug);\n//   }\n\n//   postItem(prod_meta_slug: string, values: any) {\n//     // values may contain size and other info\n\n//     if (this.slug && values) values.cart_slug = this.slug;\n//     return this.postPath(`${this._endpoint}items/`, { ...values, prod_meta_slug });\n//   }\n\n//   patchItem(itemSlug: string, values: any) {\n//     return this.patchPath(`${this._path}/item/${itemSlug}/`, values);\n//   }\n//   deleteItem(itemSlug: string) {\n//     return this.deletePath(`${this._path}/item/${itemSlug}/`);\n//   }\n\n//   patchCustomer(values: any) {\n//     if (values && this?.customer?.slug) values.cust_slug = this.customer.slug;\n//     return this.patchPath(`${this._path}/customer/`, values);\n//   }\n//   postCustomer(values: any) {\n//     return this._s.post(`${this._path}/customer/`, values);\n//   }\n// }\n\n// //   const methods = {\n// //     getItem,\n// //     postItem,\n// //     patchItem,\n// //     deleteItem,\n// //     patchCustomer,\n// //     postCustomer,\n// //   };\n\n// //   return Object.assign({ isValid: getIsValid() }, CrudModel(data, 'api/carts/'), methods);\n// // };\n\n// export const Customer = (data: any) => {\n//   // return Object.assign({}, CrudModel(data, 'api/carts/'), methods);\n// };\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { Response, uuid } from '@miq/utiljs';\nimport { useProductListRequest, ProductListFilterForm, TProduct, TProductSize } from '@shopy/storejs';\nimport { Button, HorizontalScrollGridLayout, Loading, SectionHeader, StickyFooterLayout } from '@miq/componentjs';\n\nimport { TCartInstance } from './models';\nimport { ItemProductCard, ProductImage } from './components';\n\ntype TProps = {\n  cart: TCartInstance;\n  isOpen: boolean;\n  setOpen: any;\n  onSuccess: (res: any) => void;\n  onError?: (err: any) => void;\n};\n\ntype TSelect = TProduct & { sizeSlug: string };\n\nconst CartAddItemViewHeader = (props: TProps & { selected: TSelect[] }) => {\n  const { setOpen, selected = [] } = props;\n\n  return (\n    <div className=\"cart-add-item-view-header miq-container center px-1 pt-2\">\n      <SectionHeader\n        title={<span className=\"fw-bold mt-2\">Ajouter des produits</span>}\n        text=\"Tap on a product to add to the cart/ Cliquez sur un produit pour l'ajouter au panier\"\n        actions={<div onClick={() => setOpen?.(false)}> [ x ]</div>}\n      />\n\n      <HorizontalScrollGridLayout className=\"cart-items-preview\" style={{ minHeight: 48, paddingBottom: 0 }}>\n        {selected.map((i) => {\n          return (\n            <div key={uuid()}>\n              <ProductImage product={i} {...{ width: 48, height: 48 }} />\n            </div>\n          );\n        })}\n      </HorizontalScrollGridLayout>\n    </div>\n  );\n};\n\nexport default function CartAddItemView(props: TProps) {\n  const { res: productRes, loading } = useProductListRequest(undefined, { published: 'include', atc: 1 });\n  const [selected, setSelected] = React.useState<TSelect[]>([]);\n\n  if (!props.isOpen) return null;\n  if (loading) return <Loading />;\n\n  const r = new Response<TProduct>(productRes);\n\n  const products = r.items || [];\n\n  const { cart } = props;\n  const cartSizes = cart?.items?.map(({ size }) => size) || [];\n\n  const addItems = () => {\n    const values = selected.map((s) => ({ product_slug: s.meta_slug!, size: s.sizeSlug, quantity: 1 }));\n\n    if (values.length === 0) return;\n\n    cart\n      .addItems(values)\n      .then((r) => {\n        setSelected([]);\n        props?.onSuccess?.(r);\n      })\n      .catch((err) => props?.onError?.(err));\n  };\n\n  return (\n    <StickyFooterLayout\n      style={{ zIndex: 10000 }}\n      className=\"bg-white m-1 rounded\"\n      header={<CartAddItemViewHeader {...props} {...{ selected }} />}\n      footer={\n        <div className=\"miq-container center\">\n          <div className=\"d-flex justify-content-between bg-white p-2\">\n            <div>\n              <Button onClick={() => props.setOpen(false)} className=\"\">\n                Annuler\n              </Button>\n            </div>\n            <div>\n              <Button disabled={selected.length === 0} onClick={() => addItems()} className=\"btn-primary fw-bold\">\n                Ajouter\n              </Button>\n            </div>\n          </div>\n        </div>\n      }\n    >\n      <Staff.Section header={<ProductListFilterForm />} className=\"miq-container center px-1\">\n        {products.map((product) => {\n          const { sizes = [] } = product;\n\n          return sizes\n            .filter(({ quantity }) => quantity >= 1)\n            .filter((i) => !cartSizes.includes(i.slug))\n            .map((size: TProductSize) => {\n              const checked = selected.find(({ sizeSlug }) => sizeSlug === size?.slug);\n              const isChecked = Boolean(checked);\n              return (\n                <div\n                  className=\"d-flex align-items-center mb-1 border-1 rounded\"\n                  key={uuid()}\n                  style={{ padding: 6 }}\n                  onClick={() => {\n                    if (isChecked) setSelected((items) => items.filter(({ sizeSlug }) => sizeSlug != size?.slug));\n                    else setSelected([{ ...product, sizeSlug: size.slug }, ...selected]);\n                  }}\n                >\n                  <div className=\"flex-1\">\n                    <ItemProductCard {...{ product, size }} />\n                  </div>\n\n                  <div style={{ minWidth: 24, marginLeft: 3, marginRight: 6 }}>\n                    <input type=\"checkbox\" name=\"selected\" className=\"me-2\" checked={isChecked} onChange={() => {}} />\n                  </div>\n                </div>\n              );\n            });\n        })}\n      </Staff.Section>\n    </StickyFooterLayout>\n  );\n}\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useDocumentTitle, useRequest } from '@miq/hookjs';\nimport { Button, Icons, Loading } from '@miq/componentjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { Response, truncateStr, uuid } from '@miq/utiljs';\nimport { SizeQuantityField, SizeSelectField, TProduct, ProductPriceDisplay } from '@shopy/storejs';\n\nimport { Cart } from './models';\nimport { TCart } from './types';\nimport { ItemProductCard } from './components';\nimport CartAddItemView from './views.AddItem';\nimport { CartItemDeleteButton } from './buttons';\nimport { CustomerCard } from '../customer';\n\nexport default function CartUpdateView() {\n  useDocumentTitle('Add items to cart - Sales');\n  const { cartSlug } = useParams();\n\n  const { res, setRes, loading, ...request } = useRequest(() => Cart({ slug: cartSlug }).retrieve(), {\n    refreshDeps: [cartSlug],\n    // onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      // if (response?.status === 404) return navigate('../');\n    },\n  });\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const cart = Cart(r.data);\n\n  return (\n    <Staff.View title=\"Ajouter au panier\" back=\"/staff/sales/carts\">\n      <div className=\"miq-container center\">\n        <Staff.Section\n          border\n          title={`Panier (${cart?.products?.length} produits)`}\n          actions={\n            <>\n              <Button onClick={() => setOpen(true)} className=\"btn-primary-3 btn-round\" title=\"Ajouter des produits\">\n                <Icons.CartPlus />\n              </Button>\n            </>\n          }\n          footer={\n            <div className=\"\">\n              <div className=\"d-flex justify-content-between\">\n                <span className=\"\">Subtotal</span>\n                <span>\n                  <ProductPriceDisplay retail_price_data={cart?.subtotal} />\n                </span>\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                <span className=\"\">Total</span>\n                <span className=\"fw-bold\">\n                  <ProductPriceDisplay retail_price_data={cart?.subtotal} />\n                </span>\n              </div>\n            </div>\n          }\n        >\n          {cart.items.length > 0 ? (\n            <>\n              {cart.items.map((i) => {\n                // console.log(i);\n\n                return (\n                  <div key={uuid()} className=\"d-flex justify-content-between align-items-center\">\n                    <ItemProductCard {...i} size={i.size_data} />\n                    <div>\n                      <CartItemDeleteButton cartInstance={cart} itemSlug={i?.slug} onSuccess={(r) => setRes(r)} />\n                    </div>\n                  </div>\n                );\n              })}\n            </>\n          ) : (\n            <>Ajouter</>\n          )}\n        </Staff.Section>\n\n        <Staff.Section border title=\"Client\">\n          <CustomerCard data={cart.customer_data!} />\n        </Staff.Section>\n\n        <div className=\"text-center\">\n          <Button disabled={cart.products!.length <= 0} className=\"btn-primary btn-md fw-bold w-50\">\n            Confirmer\n          </Button>\n        </div>\n      </div>\n\n      {isOpen && (\n        <CartAddItemView\n          {...{ isOpen, setOpen, cart }}\n          onSuccess={(r) => {\n            setRes(r);\n            setOpen(false);\n          }}\n        />\n      )}\n    </Staff.View>\n  );\n}\n\nexport const ProductAddForm = ({\n  item,\n  onItemClick,\n  ...props\n}: {\n  item: TProduct;\n  onItemClick: (p: TProduct, size: string, qty: string) => Promise<TCart>;\n}) => {\n  const form = useForm({ quantity: 1, size: '' });\n\n  if (!item?.slug) return null;\n\n  const { sizes = [], is_oos, category_data, cover_data, name, size_count = 0 } = item;\n\n  const canAdd = !is_oos && size_count > 0;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        onItemClick(item, form.values.size, form.values.quantity).catch((err) => {\n          form.handleError(err);\n        });\n      }}\n    >\n      <Staff.Section\n        border\n        header={\n          <div className=\"d-flex\">\n            <div style={{ minWidth: 34, maxWidth: 50 }} className=\"me-1\">\n              <Staff.Img.Thumb src=\"src\" {...cover_data} className=\"rounded\" />\n            </div>\n\n            <div className=\"flex-1\" title={name}>\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{truncateStr(name!, 0, 45)}</span>\n              </div>\n\n              <div className=\"d-flex flex-column flex-md-ro justify-content-between\">\n                <div className=\"d-grid grid-md-2 gap-1 flex-1\">\n                  <SizeSelectField required sizes={sizes.filter((i) => i.quantity > 0)} error={form.errors.size} />\n                  <SizeQuantityField max={sizes.find((i) => i.slug === form.values.size)?.quantity || 0} min={1} />\n                </div>\n                <div className=\"text-right\">\n                  <Form.Submit className=\"btn btn-primary-2 btn-md fw-bold\">Ajouter</Form.Submit>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        actions={<ProductPriceDisplay {...item} className=\"d-flex flex-wrap\" />}\n        className=\"mb-1\"\n      ></Staff.Section>\n    </Form>\n  );\n};\n","import * as React from 'react';\n\nimport { TCustomer } from './types';\n\nexport const CustomerCard = ({ data, ...props }: { data: TCustomer }) => {\n  if (!data || !data.slug) return null;\n\n  const { first_name, last_name, email, phone } = data;\n\n  return (\n    <div className=\"customer-card\">\n      <div className=\"fw-bold\">{`${first_name} ${last_name}`}</div>\n      <div className=\"\">{phone}</div>\n      <div className=\"text-muted text-sm\">{email}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { IFormUpdateProps, useForm } from '@miq/formjs';\nimport { TCustomer } from '../types';\nimport { TCustomerInstance } from '../../cart/models';\nimport { CustomerEmailField, CustomerFNameField, CustomerLNameField, CustomerPhoneField } from './fields';\n\ntype TFormUpdateProps<T, I> = IFormUpdateProps<T> & {\n  fields: string[];\n  instance?: I;\n};\n\ntype TCustomerFormProps = Omit<TFormUpdateProps<TCustomer, TCustomerInstance>, 'context'> & {\n  onCustomerSelect?: (p: TCustomer) => void;\n};\n\nexport const CustomerForm = ({\n  children,\n  instance,\n  onSuccess,\n  onError,\n  onCustomerSelect,\n  ...props\n}: TCustomerFormProps) => {\n  const { fields } = props;\n  const form = useForm<TCustomer>(getCustomerFD(instance?.export(), fields));\n\n  const { errors } = form;\n  const sharedProps = { className: 'span-md-3', fieldCN: 'd-grid grid-md-5' };\n\n  return (\n    <Form {...props} context={form} className=\"customer-form\">\n      <div className=\"base-fields\">\n        {fields?.includes('last_name') && (\n          <CustomerLNameField\n            allowSuggestions\n            error={errors.last_name}\n            {...sharedProps}\n            onCustomerSelect={onCustomerSelect}\n            className=\"\"\n          />\n        )}\n\n        {fields?.includes('first_name') && <CustomerFNameField error={errors.first_name} {...sharedProps} />}\n\n        {fields?.includes('phone') && <CustomerPhoneField error={errors.phone} {...sharedProps} />}\n        {fields?.includes('email') && <CustomerEmailField error={errors.email} {...sharedProps} />}\n      </div>\n\n      {children}\n    </Form>\n  );\n};\nconst getCustomerFD = (data?: TCustomer, fields?: string[]) => {\n  if (!data) data = { first_name: '', last_name: '', email: '', phone: '' };\n  const fd: TCustomer = {};\n  fields?.forEach((field) => {\n    fd[field] = data![field];\n  });\n\n  return fd;\n};\n\nconst CustomerSearchInput = (props) => {\n  return <Form.Text {...props} />;\n};\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nconst CustomerCreateView = React.lazy(() => import('./views.Create'));\nconst CustomerUpdateView = React.lazy(() => import('./views.Update'));\nconst CustomerListView = React.lazy(() => import('./views.List'));\n\nexport default function CustomerRoutes() {\n  return (\n    <Routes>\n      <Route path=\":custSlug/\" element={<CustomerUpdateView />} />\n      <Route path=\"new/\" element={<CustomerCreateView />} />\n      <Route index element={<CustomerListView />} />\n    </Routes>\n  );\n}\n\nexport * from './types';\nexport * from './components';\nexport { CustomerForm } from './forms';\n"],"names":["CartItemDeleteButton","cartInstance","itemSlug","props","renderHeader","renderFooter","setOpen","className","onClick","destroyItem","then","r","onSuccess","catch","err","onError","render","getCN","CartDeleteButton","instance","label","disabled","canDestroy","title","destroy","res","handleDelete","ItemProductCard","product","size","ProductImage","width","height","truncateStr","name","inline","slug","style","src","cover_data","CartService","this","data","products","length","values","post","_path","prodSlug","timeout","delete","StaffService","Cart","StaffModel","CartAddItemViewHeader","selected","text","actions","minHeight","paddingBottom","map","i","uuid","CartAddItemView","useProductListRequest","undefined","published","atc","productRes","loading","React","setSelected","isOpen","Response","items","cart","cartSizes","zIndex","header","footer","s","product_slug","meta_slug","sizeSlug","quantity","addItems","sizes","filter","includes","checked","find","isChecked","Boolean","padding","minWidth","marginLeft","marginRight","type","onChange","CartUpdateView","useDocumentTitle","cartSlug","useParams","useRequest","retrieve","refreshDeps","response","setRes","isSuccess","back","border","retail_price_data","subtotal","size_data","CustomerCard","customer_data","ProductAddForm","item","onItemClick","form","useForm","is_oos","category_data","size_count","context","onSubmit","e","preventDefault","handleError","maxWidth","required","error","errors","max","min","first_name","last_name","email","phone","CustomerForm","children","onCustomerSelect","fields","getCustomerFD","export","sharedProps","fieldCN","allowSuggestions","fd","forEach","field","CustomerCreateView","CustomerUpdateView","CustomerListView","CustomerRoutes","path","element","index"],"sourceRoot":""}