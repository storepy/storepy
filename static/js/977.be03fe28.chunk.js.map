{"version":3,"file":"static/js/977.be03fe28.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-orderjs/src/views.CartAddItem.tsx","../../../../shopy/shopy-orderjs/src/views.CartUpdate.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { Response, uuid } from '@miq/utiljs';\nimport { useProductListRequest, ProductListFilterForm, TProduct, TProductSize } from '@shopy/storejs';\nimport { Button, HorizontalScrollGridLayout, SectionHeader, StickyFooterLayout } from '@miq/componentjs';\n\nimport { TCartInstance } from './models';\nimport { ItemProductCard, ProductImage } from './components';\n\ntype TProps = { cart: TCartInstance; isOpen: boolean; setOpen: any };\n\ntype TSelect = TProduct & { sizeSlug: string };\n\nconst ViewHeader = (props: TProps & { selected: TSelect[] }) => {\n  const { setOpen, selected = [] } = props;\n\n  return (\n    <div className=\"cart-add-item-view-header miq-container center px-1 pt-2\">\n      <SectionHeader\n        title={<span className=\"fw-bold mt-2\">Ajouter des produits</span>}\n        text=\"Tap on a product to add to the cart/ Cliquez sur un produit pour l'ajouter au panier\"\n        actions={<div onClick={() => setOpen?.(false)}> [ x ]</div>}\n      />\n\n      <HorizontalScrollGridLayout className=\"cart-items-preview\" style={{ minHeight: 48, paddingBottom: 0 }}>\n        {selected.map((i) => {\n          return (\n            <div key={uuid()}>\n              <ProductImage product={i} {...{ width: 48, height: 48 }} />\n            </div>\n          );\n        })}\n      </HorizontalScrollGridLayout>\n    </div>\n  );\n};\n\nexport default function CartAddItemView(props: TProps) {\n  const { res: productRes } = useProductListRequest(undefined, { published: 'include', atc: 1 });\n  const [selected, setSelected] = React.useState<TSelect[]>([]);\n\n  if (!props.isOpen) return null;\n\n  const products = new Response(productRes).items || [];\n\n  const { cart } = props;\n  const cartSizes = cart.items.map(({ size }) => size?.slug) || [];\n\n  return (\n    <StickyFooterLayout\n      style={{ zIndex: 10000 }}\n      className=\"bg-white\"\n      header={<ViewHeader {...props} {...{ selected }} />}\n      footer={\n        <div className=\"miq-container center\">\n          <div className=\"d-flex justify-content-between bg-white p-2\">\n            <div>\n              <Button onClick={() => props.setOpen(false)} className=\"\">\n                Annuler\n              </Button>\n            </div>\n            <div>\n              <Button\n                disabled={selected.length === 0}\n                // onClick={() => props.setOpen(false)}\n                className=\"btn-primary fw-bold\"\n              >\n                Ajouter\n              </Button>\n            </div>\n          </div>\n        </div>\n      }\n    >\n      <Staff.Section header={<ProductListFilterForm />} className=\"miq-container center px-1\">\n        {products.map((product) => {\n          const { sizes = [] } = product;\n          return sizes\n            .filter((i) => !cartSizes.includes(i.slug))\n            .map((size: TProductSize) => {\n              const checked = selected.find(({ sizeSlug }) => sizeSlug === size?.slug);\n              const isChecked = Boolean(checked);\n              return (\n                <div\n                  className=\"d-flex align-items-center mb-1 border-1 rounded\"\n                  key={uuid()}\n                  style={{ padding: 6 }}\n                  onClick={() => {\n                    if (isChecked) setSelected((items) => items.filter(({ sizeSlug }) => sizeSlug != size?.slug));\n                    else setSelected([{ ...product, sizeSlug: size.slug }, ...selected]);\n                  }}\n                >\n                  <div className=\"flex-1\">\n                    <ItemProductCard {...{ product, size }} />\n                  </div>\n\n                  <div style={{ minWidth: 24, marginLeft: 3, marginRight: 6 }}>\n                    <input type=\"checkbox\" name=\"selected\" className=\"me-2\" checked={isChecked} onChange={() => {}} />\n                  </div>\n                </div>\n              );\n            });\n        })}\n      </Staff.Section>\n    </StickyFooterLayout>\n  );\n}\n","import * as React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Button, Icons, Loading } from '@miq/componentjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { Response, truncateStr, uuid } from '@miq/utiljs';\nimport { SizeQuantityField, SizeSelectField, TProduct, ProductPriceDisplay } from '@shopy/storejs';\n\nimport { Cart } from './models';\nimport { TOrder } from './types';\nimport { CustomerCard, ItemProductCard } from './components';\nimport CartAddItemView from './views.CartAddItem';\nimport { CartItemDeleteButton } from './buttons';\n\nexport default function CartUpdateView() {\n  const { cartSlug } = useParams();\n\n  const { res, setRes, loading, ...request } = useRequest(() => Cart({ slug: cartSlug }).retrieve(), {\n    refreshDeps: [cartSlug],\n    // onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      // if (response?.status === 404) return navigate('../');\n    },\n  });\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const cart = Cart(r.data);\n\n  return (\n    <Staff.View title=\"Modifier une commande\" back=\"/staff/sales/\">\n      <div className=\"miq-container center\">\n        <Staff.Section border title=\"Client\" actions={<>Modifier</>}>\n          <CustomerCard data={cart.customer_data} />\n        </Staff.Section>\n\n        <Staff.Section\n          border\n          title={`Panier (${cart.products.length} produits)`}\n          actions={\n            <>\n              <Button onClick={() => setOpen(true)} className=\"btn-primary-3 btn-round\" title=\"Ajouter des produits\">\n                <Icons.CartPlus />\n              </Button>\n            </>\n          }\n          footer={\n            <div className=\"\">\n              <div className=\"d-flex justify-content-between\">\n                <span className=\"\">Subtotal</span>\n                <span>\n                  <ProductPriceDisplay retail_price_data={cart?.subtotal} />\n                </span>\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                <span className=\"\">Total</span>\n                <span className=\"fw-bold\">\n                  <ProductPriceDisplay retail_price_data={cart?.subtotal} />\n                </span>\n              </div>\n            </div>\n          }\n        >\n          {cart.items.length > 0 ? (\n            <>\n              {cart.items.map((i) => {\n                console.log(i);\n\n                return (\n                  <div key={uuid()} className=\"d-flex justify-content-between align-items-center\">\n                    <ItemProductCard {...i} size={i.size_data} />\n                    <div>\n                      <CartItemDeleteButton cartInstance={cart} itemSlug={i?.slug} onSuccess={(r) => setRes(r)} />\n                    </div>\n                  </div>\n                );\n              })}\n            </>\n          ) : (\n            <>Ajouter</>\n          )}\n        </Staff.Section>\n\n        <div className=\"text-center\">\n          <Button disabled={cart.products.length <= 0} className=\"btn-primary btn-md fw-bold w-50\">\n            Confirmer\n          </Button>\n        </div>\n      </div>\n\n      <CartAddItemView {...{ isOpen, setOpen, cart }} />\n    </Staff.View>\n  );\n}\n\nexport const ProductAddForm = ({\n  item,\n  onItemClick,\n  ...props\n}: {\n  item: TProduct;\n  onItemClick: (p: TProduct, size: string, qty: string) => Promise<TOrder>;\n}) => {\n  const form = useForm({ quantity: 1, size: '' });\n\n  if (!item?.slug) return null;\n\n  const { sizes = [], is_oos, category_data, cover_data, name, size_count = 0 } = item;\n\n  const canAdd = !is_oos && size_count > 0;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        onItemClick(item, form.values.size, form.values.quantity).catch((err) => {\n          form.handleError(err);\n        });\n      }}\n    >\n      <Staff.Section\n        border\n        header={\n          <div className=\"d-flex\">\n            <div style={{ minWidth: 34, maxWidth: 50 }} className=\"me-1\">\n              <Staff.Img.Thumb src=\"src\" {...cover_data} className=\"rounded\" />\n            </div>\n\n            <div className=\"flex-1\" title={name}>\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{truncateStr(name!, 0, 45)}</span>\n              </div>\n\n              <div className=\"d-flex flex-column flex-md-ro justify-content-between\">\n                <div className=\"d-grid grid-md-2 gap-1 flex-1\">\n                  <SizeSelectField required sizes={sizes.filter((i) => i.quantity > 0)} error={form.errors.size} />\n                  <SizeQuantityField max={sizes.find((i) => i.slug === form.values.size)?.quantity || 0} min={1} />\n                </div>\n                <div className=\"text-right\">\n                  <Form.Submit className=\"btn btn-primary-2 btn-md fw-bold\">Ajouter</Form.Submit>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        actions={<ProductPriceDisplay {...item} className=\"d-flex flex-wrap\" />}\n        className=\"mb-1\"\n      ></Staff.Section>\n    </Form>\n  );\n};\n"],"names":["ViewHeader","props","setOpen","selected","className","title","text","actions","onClick","style","minHeight","paddingBottom","map","i","product","width","height","uuid","CartAddItemView","productRes","useProductListRequest","undefined","published","atc","res","React","setSelected","isOpen","products","Response","items","cartSizes","cart","size","slug","zIndex","header","footer","disabled","length","sizes","filter","includes","checked","find","sizeSlug","isChecked","Boolean","padding","minWidth","marginLeft","marginRight","type","name","onChange","CartUpdateView","cartSlug","useParams","useRequest","Cart","retrieve","refreshDeps","onError","response","setRes","loading","r","isSuccess","data","back","border","customer_data","retail_price_data","subtotal","console","log","size_data","cartInstance","itemSlug","onSuccess","ProductAddForm","item","onItemClick","form","useForm","quantity","cover_data","is_oos","category_data","size_count","context","onSubmit","e","preventDefault","values","catch","err","handleError","maxWidth","src","truncateStr","required","error","errors","max","min"],"sourceRoot":""}