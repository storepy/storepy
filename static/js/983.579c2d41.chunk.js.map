{"version":3,"file":"static/js/983.579c2d41.chunk.js","mappings":"wRAGMA,EAAcC,EAAAA,MAAW,kBAAM,6BAAN,IACzBC,EAAgBD,EAAAA,MAAW,kBAAM,6BAAN,IAElB,SAASE,IACtB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,aAAaC,SAAS,SAACH,EAAD,OAClC,SAAC,KAAD,CAAOI,OAAK,EAACD,SAAS,SAACL,EAAD,QAG3B,C,kKCEYO,EAAoB,SAACC,GAChC,OAAiBC,EAAAA,EAAAA,IAAgBD,GAA1BE,GAAP,eAEMC,EAAUD,EAAOE,IAAI,WAE3B,OAAOC,EAAAA,EAAAA,KAAiB,kBAAMC,EAAI,CAAC,GAAGC,KAAK,CAAEL,OAAAA,GAArB,GAAgC,CAAEM,YAAa,CAACL,IACzE,EAEKM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAGH,OAHGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,UAAAA,MACJ,SAAQP,GACN,OAAOQ,KAAKN,IAAL,UAAYM,KAAKC,MAAjB,SAA+B,CAAET,OAAAA,GACzC,OAHGO,CAAmBG,EAAAA,IAMZN,EAAM,WAAsB,IAArBO,EAAoB,uDAAP,CAAC,EAChC,OAAOC,EAAAA,EAAAA,IAA6BD,EAAM,OAAQJ,EACnD,C","sources":["../../../../packages/miq-staffjs/src/analytics/libs/index.tsx","../../../../packages/miq-staffjs/src/analytics/libs/utils.ts"],"sourcesContent":["import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nconst LIBListView = React.lazy(() => import('./views.List'));\nconst LIBUpdateView = React.lazy(() => import('./views.Update'));\n\nexport default function LIBRoutes() {\n  return (\n    <Routes>\n      <Route path=\"/:libSlug/\" element={<LIBUpdateView />} />\n      <Route index element={<LIBListView />} />\n    </Routes>\n  );\n}\n\nexport { useLIBListRequest, LIB } from './utils';\nexport type { TLIBInstance, TLIB } from './utils';\n","import { useRequest } from '@miq/hookjs';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\nimport { StaffService, StaffModel } from '../../service';\n\nexport type TLIB = {\n  name?: string;\n  utm_medium?: string;\n  utm_source?: string;\n  utm_content?: string;\n  is_pinned?: boolean;\n\n  readonly slug?: string;\n  readonly utm_campaign?: string;\n};\n\nexport const useLIBListRequest = (defaultParams?: URLSearchParamsInit) => {\n  const [params] = useSearchParams(defaultParams);\n\n  const summary = params.get('summary');\n\n  return useRequest<TLIB>(() => LIB({}).list({ params }), { refreshDeps: [summary] });\n};\n\nclass LIBService extends StaffService<TLIB> {\n  hitList(params?: URLSearchParams) {\n    return this.get(`${this._path}hits/`, { params });\n  }\n}\n\nexport const LIB = (data: TLIB = {}) => {\n  return StaffModel<TLIB, LIBService>(data, 'libs', LIBService);\n};\n\nexport type TLIBInstance = ReturnType<typeof LIB>;\n"],"names":["LIBListView","React","LIBUpdateView","LIBRoutes","path","element","index","useLIBListRequest","defaultParams","useSearchParams","params","summary","get","useRequest","LIB","list","refreshDeps","LIBService","this","_path","StaffService","data","StaffModel"],"sourceRoot":""}