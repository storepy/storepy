{"version":3,"file":"static/js/998.ee487d97.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/product/views.Update/tabs.InfoUpdate.tsx","../../../../shopy/shopy-storejs/src/product/views.Update/components.tsx","../../../../shopy/shopy-storejs/src/product/views.Update/tabs.MediaUpdate.tsx","../../../../shopy/shopy-storejs/src/productAttribute/buttons.tsx","../../../../shopy/shopy-storejs/src/productAttribute/index.tsx","../../../../shopy/shopy-storejs/src/product/views.Update/tabs.InventoryUpdate.tsx","../../../../shopy/shopy-storejs/src/product/views.Update/tabs.SettingsUpdate.tsx","../../../../shopy/shopy-storejs/src/product/views.Update/views.Update.tsx","../../../../shopy/shopy-storejs/src/product/views.lang.ts"],"sourcesContent":["import * as React from 'react';\n\nimport lang from '../views.lang';\nimport formLang from '../forms/lang';\n\nimport Staff from '@miq/staffjs';\nimport Form, { MetaDescriptionField, MetaSlugField, MetaTitleField, useForm } from '@miq/formjs';\n\nimport { CategoryChoicesType } from '../../types';\nimport { ProductForm, ProductUpdateForm } from '../forms';\n\nimport { TProductUpdateTabProps } from './utils';\n\nconst { i18n } = window;\n\ntype TProps = TProductUpdateTabProps<{ categories: CategoryChoicesType; form: ReturnType<typeof useForm> }>;\n\nexport default function ProductUpdateInfoTab(props: TProps) {\n  const { form, instance, onUpdate } = props;\n  const { errors } = form;\n\n  return (\n    <>\n      <div className=\"border-bottom mb-4\">\n        <ProductInfoUpdateForm {...props} />\n      </div>\n\n      <Staff.Section title={i18n(lang, 'SeoTab.title')}>\n        <ProductUpdateForm\n          context={form}\n          {...{\n            instance,\n            fields: ['meta_title', 'meta_description', 'meta_slug'],\n            onSuccess: ({ data }) => onUpdate(data),\n          }}\n        >\n          <MetaTitleField error={errors.meta_title} />\n          <MetaSlugField error={errors.meta_slug} />\n          <MetaDescriptionField error={errors.meta_description} />\n\n          <div className=\"d-flex justify-content-center\">\n            <Form.Submit value={i18n(lang, 'Btn.saveLabel')} className=\"btn-primary-3 btn-md min-w-25 fw-bold\" />\n          </div>\n        </ProductUpdateForm>\n      </Staff.Section>\n    </>\n  );\n}\n\nconst fields = [\n  'name',\n  'category',\n  'description',\n  'retail_price',\n  'is_pre_sale',\n  'is_pre_sale_text',\n  'is_pre_sale_dt',\n  'is_on_sale',\n  'sale_price',\n  'is_oos',\n  'is_explicit',\n];\n\nconst ProductInfoUpdateForm = (props: TProps) => {\n  const { form, instance, categories, onUpdate } = props;\n  const { errors } = form;\n  const sectionProps = { title: i18n(lang, 'InfoTab.title'), text: i18n(lang, 'InfoTab.text') };\n\n  return (\n    <ProductUpdateForm context={form} {...{ instance, fields, onSuccess: ({ data }) => onUpdate(data) }}>\n      <Staff.Section\n        {...sectionProps}\n        footer={\n          <div className=\"d-flex justify-content-center\">\n            <Form.Submit value={i18n(lang, 'Btn.saveLabel')} className=\"btn-md btn-primary min-w-25 fw-bold\" />\n          </div>\n        }\n      >\n        <ProductForm.NameField\n          error={errors.name}\n          label={window.i18n(formLang, 'NField.label')}\n          text={window.i18n(formLang, 'NField.text')}\n        />\n\n        <div className=\"d-grid grid-md-2 gap-1\">\n          <ProductForm.CategoryField\n            error={errors.category}\n            categories={categories}\n            label={window.i18n(formLang, 'CatField.label')}\n          />\n          <ProductForm.RetailPriceField\n            label={window.i18n(formLang, 'RetailPField.label')}\n            error={errors.retail_price}\n          />\n        </div>\n\n        <ProductForm.PresaleCheckboxField\n          error={errors.is_pre_sale}\n          label={window.i18n(formLang, 'PresaleField.label')}\n        />\n        {form.values.is_pre_sale && (\n          <ProductForm.PresaleTextField\n            text={window.i18n(formLang, 'PresaleTextField.text')}\n            error={errors.is_pre_sale_text}\n          />\n        )}\n\n        <ProductForm.OnSaleCheckboxField error={errors.is_on_sale} label={window.i18n(formLang, 'OnsaleField.label')} />\n        {form.values.is_on_sale && (\n          <ProductForm.SalePriceField label={window.i18n(formLang, 'SalePField.label')} error={errors.sale_price} />\n        )}\n\n        <ProductForm.DescriptionField\n          error={errors.description}\n          label={window.i18n(formLang, 'DField.label')}\n          text={window.i18n(formLang, 'DField.text')}\n        />\n\n        <div className=\"my-4\">\n          <ProductForm.OosCheckboxField error={errors.is_oos} />\n        </div>\n\n        <div className=\"my-4\">\n          <ProductForm.IsExplicitCheckboxField error={errors.is_explicit} />\n        </div>\n      </Staff.Section>\n    </ProductUpdateForm>\n  );\n};\n","import * as React from 'react';\nimport { Icons, TImg } from '@miq/componentjs';\n\nimport { StaffImg, StaffImgDeleteButton, TImgButtonDeleteProps } from '@miq/staffjs';\n\nexport const ProductImgReorderGridItem = ({\n  img,\n  ...props\n}: {\n  img: TImg;\n  order: TImg | null;\n  setOrder: React.Dispatch<React.SetStateAction<TImg | null>>;\n  onOrderChange: (p: { from: TImg; to: TImg }) => void;\n}) => {\n  const { order, setOrder, onOrderChange } = props;\n\n  return (\n    <div\n      draggable\n      onDragEnter={(e) => setOrder(img)}\n      onDragEnd={(e) => {\n        if (!order || order.slug === img.slug) return;\n\n        StaffImg(img)\n          .swapPosition(order.slug!, order.position)\n          .then(({ data }) => onOrderChange(data))\n          .catch((err) => {\n            console.error(err);\n          });\n      }}\n    >\n      <StaffImg.Square {...img} className=\"rounded\" />\n    </div>\n  );\n};\n\nexport const ProductImgDeleteButton = (props: TImgButtonDeleteProps) => (\n  <StaffImgDeleteButton {...props}>\n    <Icons.Trash />\n  </StaffImgDeleteButton>\n);\n","import * as React from 'react';\n\n// import lang from '../views.lang';\n\nimport Staff, { StaffImg, StaffImgAddButton, TSImgInstance } from '@miq/staffjs';\nimport { getCN } from '@miq/utiljs';\nimport { Button, Icons, TImg, TViewSectionProps } from '@miq/componentjs';\n\nimport { ProductImagesAddButton } from '../buttons';\nimport { TProductUpdateTabProps } from './utils';\nimport { ProductImgDeleteButton, ProductImgReorderGridItem } from './components';\n\nexport default function ProductUpdateMediaTab(props: TProductUpdateTabProps) {\n  const { instance, onUpdate } = props;\n  const { cover_data, images_data } = instance;\n\n  const [isReordering, setReordering] = React.useState<boolean>(false);\n  const [order, setOrder] = React.useState<TImg | null>(null);\n\n  return (\n    <Staff.Section\n      title={\n        <ProductImagesAddButton\n          productInstance={instance}\n          onSuccess={(res: any) => onUpdate?.(res.data)}\n          className=\"d-flex align-items-center\"\n        >\n          <Icons.CloudUpload />\n          <span className=\"ms-1 d-none d-md-block\">Upload images</span>\n        </ProductImagesAddButton>\n      }\n      actions={\n        <>\n          <div className=\"d-none d-md-block\">\n            <Button\n              onClick={() => setReordering(!isReordering)}\n              className={getCN(['btn-round', isReordering ? 'btn-primary' : 'btn-secondary-4'])}\n            >\n              <Icons.DragDrop />\n            </Button>\n          </div>\n        </>\n      }\n    >\n      {isReordering ? (\n        <div className=\"d-grid grid-3 gap-2\">\n          {images_data?.map((img) => (\n            <ProductImgReorderGridItem\n              {...{ img, order, setOrder }}\n              onOrderChange={(data) => {\n                onUpdate?.({\n                  ...instance.export(),\n                  images_data: images_data.map((i) => {\n                    if (i.slug === data?.to?.slug) return data?.from;\n                    if (i.slug === data?.from?.slug) return data?.to;\n                    return i;\n                  }),\n                });\n                setOrder(null);\n              }}\n              key={img.slug}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"d-grid grid-2 grid-md-3 grid-lg-4 gap-2\">\n          <CoverCard img={StaffImg(cover_data)} productInstance={instance} {...{ onUpdate }} />\n\n          {instance?.images_data?.map((image) => {\n            const img = StaffImg(image);\n            const swapCover = () => instance.swapCover(img.slug!).then(({ data }: any) => onUpdate(data));\n            return (\n              <ImageCard\n                img={img}\n                actions={<Staff.Button onClick={swapCover}>Set as cover</Staff.Button>}\n                onDelete={() =>\n                  onUpdate({\n                    ...instance.export(),\n                    images_data: instance.images_data!.filter((i) => i.slug !== img.slug),\n                    images: instance.images!.filter((i) => i !== img.slug),\n                  })\n                }\n                key={img.slug}\n              />\n            );\n          })}\n        </div>\n      )}\n    </Staff.Section>\n  );\n}\n\ntype TImgCardProps = Omit<TViewSectionProps, 'title'> & { img: TSImgInstance; onDelete: (p: TImg) => void };\n\nconst CoverCard = (\n  props: Omit<TImgCardProps, 'onDelete'> & {\n    productInstance: TProductUpdateTabProps['instance'];\n    onUpdate: TProductUpdateTabProps['onUpdate'];\n  }\n) => {\n  const { img, onUpdate, productInstance } = props;\n\n  if (!img.slug)\n    return (\n      <div className=\"p-cover-add-btn d-flex align-items-center justify-content-center flex-column text-center border-1 rounded p-3\">\n        <p className=\"text-sm text-muted mb-3\">Ce produit n'a pas d'image principale</p>\n        <StaffImgAddButton\n          onSuccess={(r) => {\n            productInstance\n              .update({ cover: r?.data.slug })\n              .then((x) => onUpdate(x?.data))\n              .catch((err) => {});\n          }}\n          label=\"Ajouter une image\"\n          className=\"btn-primary-3 btn-md\"\n        />\n      </div>\n    );\n\n  return (\n    <ImageCard\n      {...props}\n      onDelete={() => onUpdate({ ...productInstance.export(), cover_data: undefined, cover: undefined })}\n    />\n  );\n};\n\nconst ImageCard = ({ img, actions, ...props }: TImgCardProps) => {\n  return (\n    <Staff.Section\n      border\n      title={\n        <ProductImgDeleteButton onSuccess={(r) => props.onDelete(r?.data)} instance={img} className=\"btn-danger-3\" />\n      }\n      actions={actions}\n      className=\"p-image-card\"\n    >\n      <StaffImg.Image {...img.export()} />\n    </Staff.Section>\n  );\n};\n","import * as React from 'react';\n\nimport { TFormCallbackProps } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\n\nimport { TStaffProductInstance } from '../product/models';\nimport { TProductAttribute } from '../types';\n\nexport function AttributeDeleteButton({\n  data,\n  productInstance,\n  ...props\n}: { data: TProductAttribute; productInstance: TStaffProductInstance } & TFormCallbackProps) {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onFailure, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer un attribut</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteAttribute(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onFailure?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this attribute:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"attr-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n}\n","import * as React from 'react';\nimport Form, { TextFieldProps, TFormCallbackProps, useForm } from '@miq/formjs';\n\nimport { TProductAttribute } from '../types';\nimport { StaffProduct } from '../product/models';\nimport { AttributeDeleteButton } from './buttons';\n\ntype TAttrFormProps = TFormCallbackProps & {\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\nexport const AttributeUpdateForm = ({\n  data,\n  productInstance,\n  ...props\n}: TAttrFormProps & { data: TProductAttribute }) => {\n  const form = useForm<TProductAttribute>({ name: data.name || '', value: data.value || '' });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onFailure } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchAttribute(data.slug, form.values)\n          .then((res) => onSuccess?.(res))\n          .catch((err) => {\n            form.handleError(err);\n            return onFailure?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-md-6 gap-1\">\n        <div className=\"span-md-2\">\n          <AttrNameField error={form.errors.name} />\n        </div>\n\n        <div className=\"span-md-3\">\n          <AttrValueField error={form.errors.value} className=\"\" />\n        </div>\n\n        <div className=\"span-md-1\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <AttributeDeleteButton {...{ productInstance, data, onSuccess, onFailure }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst formDefaultValues = { name: '', value: '' };\n\nexport const AttributeCreateForm = ({ productInstance, ...props }: TAttrFormProps) => {\n  const form = useForm(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postAttribute(form.values)\n          .then((res) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err) => {\n            form.handleError(err);\n            return props?.onFailure?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-md-6 gap-1\">\n        <div className=\"span-md-2\">\n          <AttrNameField error={form.errors.name} />\n        </div>\n\n        <div className=\"span-md-3\">\n          <AttrValueField error={form.errors.value} className=\"\" />\n        </div>\n\n        <div className=\"span-md-1\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\n// =============================================================================\n//                   FIELDS\n// =============================================================================\n\nconst AttrNameField = (props: TextFieldProps) => {\n  const { label, text, error, placeholder = `Entrez le nom de l'attribut ...`, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder={placeholder} maxLength={30} minLength={2} {...rest} required name=\"name\" />\n    </Form.Field>\n  );\n};\n\nconst AttrValueField = (props: TextFieldProps) => {\n  const { label, text, error, placeholder = `Entrez la valuer de l'attribut ...`, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder={placeholder} maxLength={99} minLength={2} {...rest} required name=\"value\" />\n    </Form.Field>\n  );\n};\n","import * as React from 'react';\n\nimport lang from '../views.lang';\n\nimport Staff from '@miq/staffjs';\nimport { Button } from '@miq/componentjs';\n\nimport { SizeAddForm, SizeUpdateForm } from '../../productSize';\nimport { AttributeCreateForm, AttributeUpdateForm } from '../../productAttribute';\n\nimport { TProductUpdateTabProps } from './utils';\n\nconst { i18n } = window;\n\nconst SizeSection = (props: TProductUpdateTabProps) => {\n  const [addSize, setAddSize] = React.useState(false);\n  const { instance, onUpdate } = props;\n\n  return (\n    <Staff.Section\n      title=\"Tailles\"\n      text=\"Ajouter des tailles\"\n      actions={\n        <Button onClick={() => setAddSize(!addSize)} className=\"btn-primary-3\">\n          Ajouter une taille\n        </Button>\n      }\n    >\n      {addSize && (\n        <Staff.Section text=\"Ajouter une taille\">\n          <SizeAddForm productInstance={instance} onSuccess={({ data }) => onUpdate(data)} />\n        </Staff.Section>\n      )}\n\n      {instance.sizes?.map((size) => {\n        return (\n          <SizeUpdateForm\n            data={size}\n            productInstance={instance}\n            onSuccess={({ data }) => onUpdate(data)}\n            key={size.slug}\n          />\n        );\n      })}\n    </Staff.Section>\n  );\n};\n\nconst AttributeSection = (props: TProductUpdateTabProps) => {\n  const { instance, onUpdate } = props;\n  const [addAtr, setAddAtr] = React.useState(false);\n\n  return (\n    <Staff.Section\n      title=\"Attributs\"\n      actions={\n        <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n          Ajouter un attribut\n        </Button>\n      }\n    >\n      {addAtr && (\n        <Staff.Section text=\"Ajouter un attribut au produit.\">\n          <AttributeCreateForm productInstance={instance} onSuccess={({ data }) => onUpdate(data)} />\n        </Staff.Section>\n      )}\n\n      {instance?.attributes?.map((attr) => (\n        <div className=\"mb-1\" key={attr.slug}>\n          <AttributeUpdateForm data={attr} productInstance={instance} onSuccess={({ data }) => onUpdate(data)} />\n        </div>\n      ))}\n    </Staff.Section>\n  );\n};\n\nexport default function ProductUpdateInventoryTab(props: TProductUpdateTabProps) {\n  return (\n    <Staff.Section title={i18n(lang, 'InventoryTab.title')}>\n      <SizeSection {...props} />\n      <AttributeSection {...props} />\n    </Staff.Section>\n  );\n}\n","import * as React from 'react';\nimport { To, useNavigate } from 'react-router-dom';\n\nimport lang from '../views.lang';\n\nimport Staff from '@miq/staffjs';\n\nimport { ProductDeleteButton } from '../buttons';\n\nimport { TProductUpdateTabProps } from './utils';\n\nconst { i18n } = window;\n\nexport default function ProductUpdateSettingsTab(props: TProductUpdateTabProps<{ to: To }>) {\n  const navigate = useNavigate();\n  const { instance, to } = props;\n\n  return (\n    <Staff.Section title={i18n(lang, 'SettingsTab.title')}>\n      <Staff.Section\n        title={i18n(lang, 'SettingsTab.deleteSectionTitle')}\n        actions={\n          <ProductDeleteButton\n            {...{ instance }}\n            onSuccess={() => navigate(to)}\n            onFailure={(res) => {\n              if (res.status === 404) navigate('../');\n            }}\n          />\n        }\n      />\n    </Staff.Section>\n  );\n}\n","import * as React from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\n\nimport './views.update.scss';\nimport lang from '../views.lang';\n\nimport Staff from '@miq/staffjs';\nimport { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Loading, QueryTabs } from '@miq/componentjs';\nimport { addForwardSlash, Response, TLang } from '@miq/utiljs';\n\nimport { emitter } from '../../events';\nimport { StaffProduct } from '../models';\nimport { PublishButton, UnPublishButton } from '../../components';\n\nimport { ProductCardItem } from '../components';\n\nimport ProductUpdateInfoTab from './tabs.InfoUpdate';\nimport ProductUpdateMediaTab from './tabs.MediaUpdate';\nimport ProductUpdateInventoryTab from './tabs.InventoryUpdate';\nimport ProductUpdateSettingsTab from './tabs.SettingsUpdate';\n\nconst i18n = (k: keyof TLang) => window.i18n(lang, k);\n\n//#region FIELDS\n\nconst formInfoFields = [\n  'name',\n  'category',\n  'description',\n  'retail_price',\n  'is_pre_sale',\n  'is_pre_sale_text',\n  'is_pre_sale_dt',\n  'is_oos',\n  'is_on_sale',\n  'sale_price',\n  'is_explicit',\n];\nconst configFormFields = ['cost', 'color_group_pk', 'stage'];\nconst supplierFormFields = [\n  'supplier_name',\n  'supplier_item_id',\n  'supplier_item_sn',\n  'supplier_item_category',\n  'supplier_item_url',\n  'supplier_item_cost',\n  'supplier_item_cost_currency',\n  'supplier_order_id',\n];\nconst seoFields = ['meta_title', 'meta_description', 'meta_slug'];\nconst formFields = [...formInfoFields, ...configFormFields, ...supplierFormFields, ...seoFields];\nconst formDefaultValues: any = {\n  retail_price: 0.0,\n  is_pre_sale: false,\n  sale_price: 0.0,\n  is_on_sale: false,\n  is_published: false,\n};\nconst mapData2Values = (data: any = {}) => {\n  const values: any = {};\n  formFields.forEach((f) => {\n    const value = data?.[f];\n    if (value == null) {\n      values[f] = formDefaultValues[f] ?? '';\n      return;\n    }\n    values[f] = value;\n  });\n  return { ...formDefaultValues, ...values };\n};\n\n//#endregion FIELDS\n\n//#region ProductStaffUpdateView\n\nexport default function ProductStaffUpdateView(props: any) {\n  let { back } = props;\n  const { prodSlug } = useParams();\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n\n  const form = useForm(mapData2Values());\n  const { res, setRes, loading, ...request } = useRequest(() => StaffProduct({ slug: prodSlug }).retrieve(), {\n    refreshDeps: [prodSlug],\n    onSuccess: ({ data }) => {\n      document.title = `${data?.name} - Update product`;\n      form.setValues(mapData2Values(data));\n    },\n    onError: ({ response }) => {\n      if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const instance = StaffProduct(r.data);\n\n  const updateData = (d: any) => {\n    request.updateData(d);\n    emitter.update(d);\n  };\n\n  return (\n    <Staff.View\n      className=\"product-staff-update-view\"\n      requiredPerms={['store.change_product']}\n      title={<ProductCardItem data={{ ...instance.export() }} />}\n      back={`${addForwardSlash(back)}${`${params}` ? `?${params}` : ''}`}\n      actions={\n        instance.is_published ? (\n          <UnPublishButton instance={instance} onSuccess={({ data }) => updateData(data)}>\n            Dépublier\n          </UnPublishButton>\n        ) : (\n          <PublishButton\n            instance={instance}\n            onSuccess={({ data }) => updateData(data)}\n            onFailure={(err) => form.handleError(err)}\n          >\n            Publier\n          </PublishButton>\n        )\n      }\n    >\n      <Staff.Section title={<div className=\"mb-1\">{QButtons}</div>}>\n        <QueryTabs>\n          <QueryTabs.Tab index>\n            <ProductUpdateInfoTab {...{ form, instance }} categories={r?.data?.categories} onUpdate={updateData} />\n          </QueryTabs.Tab>\n\n          <QueryTabs.Tab value=\"media\">\n            <ProductUpdateMediaTab {...{ instance }} onUpdate={updateData} />\n          </QueryTabs.Tab>\n\n          <QueryTabs.Tab value=\"inventory\">\n            <ProductUpdateInventoryTab {...{ instance }} onUpdate={updateData} />\n          </QueryTabs.Tab>\n\n          <QueryTabs.Tab value=\"settings\">\n            <ProductUpdateSettingsTab {...{ instance }} onUpdate={updateData} to={back} />\n          </QueryTabs.Tab>\n        </QueryTabs>\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\n//#endregion ProductStaffUpdateView\n\nconst QButtons = (\n  <div className=\"query-buttons\">\n    <QueryTabs.Button index target=\"__tab\" className=\"btn-md\">\n      Info\n    </QueryTabs.Button>\n    <QueryTabs.Button target=\"__tab\" value=\"media\" className=\"btn-md\">\n      {i18n('MediaTab.title')}\n    </QueryTabs.Button>\n    <QueryTabs.Button target=\"__tab\" value=\"inventory\" className=\"btn-md\">\n      {i18n('InventoryTab.title')}\n    </QueryTabs.Button>\n    <QueryTabs.Button target=\"__tab\" value=\"settings\" className=\"btn-md\">\n      {i18n('SettingsTab.title')}\n    </QueryTabs.Button>\n  </div>\n);\n","import { TLang } from '@miq/utiljs';\n\nexport default {\n  //\n  'InfoTab.title': { fr: 'Détails', en: 'Details' },\n  'InfoTab.text': { fr: 'Modifier les informations de ce produit', en: \"Update product's info\" },\n\n  //\n  'SeoTab.title': { fr: 'Seo', en: 'Seo' },\n\n  //\n  'InventoryTab.title': { fr: 'Inventaire', en: 'Inventory' },\n\n  //\n  'MediaTab.title': { fr: 'Média', en: 'Media' },\n\n  //\n  'SettingsTab.title': { fr: 'Paramètres', en: 'Settings' },\n  'SettingsTab.deleteSectionTitle': { fr: 'Supprimer ce produit', en: 'Delete product' },\n\n  //\n  'CreateView.title': { fr: 'Ajouter un produit', en: 'Add product' },\n\n  //\n  'ListView.title': { fr: 'Produits', en: 'Products' },\n  'ListView.actionLinkLabel': { fr: 'Ajouter', en: 'Add product' },\n  'ListView.noItemText': { fr: 'Ajouter un produit pour commencer', en: 'Add products to your shop to get started' },\n  'ListView.addProductLinkLabel': { fr: 'Ajouter un produit', en: 'Add a new product' },\n  //\n\n  'Btn.saveLabel': { fr: 'Sauvegarder', en: 'Save' },\n\n  //\n} as TLang;\n"],"names":["i18n","window","ProductUpdateInfoTab","props","form","instance","onUpdate","errors","className","ProductInfoUpdateForm","title","lang","context","fields","onSuccess","data","error","meta_title","meta_slug","meta_description","value","categories","sectionProps","text","footer","name","label","formLang","category","retail_price","is_pre_sale","values","is_pre_sale_text","is_on_sale","sale_price","description","is_oos","is_explicit","ProductImgReorderGridItem","img","order","setOrder","onOrderChange","draggable","onDragEnter","e","onDragEnd","slug","StaffImg","swapPosition","position","then","catch","err","console","ProductImgDeleteButton","ProductUpdateMediaTab","cover_data","images_data","React","isReordering","setReordering","productInstance","res","actions","onClick","getCN","map","export","i","to","from","key","CoverCard","image","ImageCard","swapCover","onDelete","filter","images","undefined","cover","r","update","x","border","AttributeDeleteButton","onFailure","rest","renderHeader","renderFooter","setOpen","deleteAttribute","render","AttributeUpdateForm","useForm","onSubmit","preventDefault","patchAttribute","handleError","AttrNameField","AttrValueField","formDefaultValues","AttributeCreateForm","postAttribute","setValues","placeholder","maxLength","minLength","required","SizeSection","addSize","setAddSize","sizes","size","AttributeSection","addAtr","setAddAtr","attributes","attr","ProductUpdateInventoryTab","ProductUpdateSettingsTab","navigate","useNavigate","status","k","formFields","is_published","mapData2Values","forEach","f","ProductStaffUpdateView","back","prodSlug","useParams","useSearchParams","params","useRequest","StaffProduct","retrieve","refreshDeps","document","onError","response","loading","setRes","request","Response","isSuccess","updateData","d","emitter","requiredPerms","addForwardSlash","QButtons","index","target","fr","en"],"sourceRoot":""}